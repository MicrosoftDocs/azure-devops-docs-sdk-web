### YamlMime:TSType
name: IXDMChannel
uid: azure-devops-extension-sdk.IXDMChannel
package: azure-devops-extension-sdk
summary: Interface for a single XDM channel
fullName: IXDMChannel
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: getObjectRegistry()
    uid: azure-devops-extension-sdk.IXDMChannel.getObjectRegistry
    package: azure-devops-extension-sdk
    summary: |-
      Get the object registry to handle messages from this specific channel.
      Upon receiving a message, this channel registry will be used first, then
      the global registry will be used if no handler is found here.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getObjectRegistry(): IXDMObjectRegistry'
      return:
        description: ''
        type: <xref uid="azure-devops-extension-sdk.IXDMObjectRegistry" />
  - name: getRemoteObjectProxy<T>(string, Object)
    uid: azure-devops-extension-sdk.IXDMChannel.getRemoteObjectProxy
    package: azure-devops-extension-sdk
    summary: >-
      Get a proxied object that represents the object registered with the given
      instance id on the remote side of this channel.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRemoteObjectProxy<T>(instanceId: string, contextData?:
        Object): Promise<T>
      parameters:
        - id: instanceId
          type: string
          description: unique id of the registered object
        - id: contextData
          type: Object
          description: >-
            Optional context data to pass to a registered object's factory
            method
      return:
        description: ''
        type: Promise&lt;T&gt;
  - name: invokeRemoteMethod<T>(string, string, any[], Object)
    uid: azure-devops-extension-sdk.IXDMChannel.invokeRemoteMethod
    package: azure-devops-extension-sdk
    summary: >-
      Invoke a method via RPC. Lookup the registered object on the remote end of
      the channel and invoke the specified method.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function invokeRemoteMethod<T>(methodName: string, instanceId: string,
        params?: any[], instanceContextData?: Object): Promise<T>
      parameters:
        - id: methodName
          type: string
          description: ''
        - id: instanceId
          type: string
          description: unique id of the registered object
        - id: params
          type: any[]
          description: Arguments to the method to invoke
        - id: instanceContextData
          type: Object
          description: >-
            Optional context data to pass to a registered object's factory
            method
      return:
        description: ''
        type: Promise&lt;T&gt;
