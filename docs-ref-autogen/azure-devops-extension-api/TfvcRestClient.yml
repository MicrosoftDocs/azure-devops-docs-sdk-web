### YamlMime:TSType
name: TfvcRestClient
uid: azure-devops-extension-api.TfvcRestClient
package: azure-devops-extension-api
summary: ''
fullName: TfvcRestClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TfvcRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.TfvcRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TfvcRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
properties:
  - name: RESOURCE_AREA_ID
    uid: azure-devops-extension-api.TfvcRestClient.RESOURCE_AREA_ID
    package: azure-devops-extension-api
    summary: ''
    fullName: RESOURCE_AREA_ID
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type: string
        description: ''
methods:
  - name: 'createChangeset(TfvcChangeset, string)'
    uid: azure-devops-extension-api.TfvcRestClient.createChangeset
    package: azure-devops-extension-api
    summary: Create a new changeset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createChangeset(changeset: TfvcChangeset, project?: string)'
      parameters:
        - id: changeset
          type: <xref uid="azure-devops-extension-api.TfvcChangeset" />
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcChangesetRef"
          />&gt;
        description: ''
  - name: getBatchedChangesets(TfvcChangesetsRequestData)
    uid: azure-devops-extension-api.TfvcRestClient.getBatchedChangesets
    package: azure-devops-extension-api
    summary: Returns changesets for a given list of changeset Ids.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBatchedChangesets(changesetsRequestData:
        TfvcChangesetsRequestData)
      parameters:
        - id: changesetsRequestData
          type: <xref uid="azure-devops-extension-api.TfvcChangesetsRequestData" />
          description: |
            List of changeset IDs.
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcChangesetRef"
          />[]&gt;
        description: ''
  - name: 'getBranch(string, string, boolean, boolean)'
    uid: azure-devops-extension-api.TfvcRestClient.getBranch
    package: azure-devops-extension-api
    summary: >-
      Get a single branch hierarchy at the given path with parents or children
      as specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBranch(path: string, project?: string, includeParent?:
        boolean, includeChildren?: boolean)
      parameters:
        - id: path
          type: string
          description: >-
            Full path to the branch.  Default: $/ Examples: $/, $/MyProject,
            $/MyProject/SomeFolder.
        - id: project
          type: string
          description: Project ID or project name
        - id: includeParent
          type: boolean
          description: 'Return the parent branch, if there is one. Default: False'
        - id: includeChildren
          type: boolean
          description: |
            Return child branches, if there are any. Default: False
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.TfvcBranch" />&gt;
        description: ''
  - name: 'getBranches(string, boolean, boolean, boolean, boolean)'
    uid: azure-devops-extension-api.TfvcRestClient.getBranches
    package: azure-devops-extension-api
    summary: >-
      Get a collection of branch roots -- first-level children, branches with no
      parents.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBranches(project?: string, includeParent?: boolean,
        includeChildren?: boolean, includeDeleted?: boolean, includeLinks?:
        boolean)
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: includeParent
          type: boolean
          description: 'Return the parent branch, if there is one. Default: False'
        - id: includeChildren
          type: boolean
          description: 'Return the child branches for each root branch. Default: False'
        - id: includeDeleted
          type: boolean
          description: 'Return deleted branches. Default: False'
        - id: includeLinks
          type: boolean
          description: |
            Return links. Default: False
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.TfvcBranch" />[]&gt;'
        description: ''
  - name: 'getBranchRefs(string, string, boolean, boolean)'
    uid: azure-devops-extension-api.TfvcRestClient.getBranchRefs
    package: azure-devops-extension-api
    summary: Get branch hierarchies below the specified scopePath
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getBranchRefs(scopePath: string, project?: string,
        includeDeleted?: boolean, includeLinks?: boolean)
      parameters:
        - id: scopePath
          type: string
          description: >-
            Full path to the branch.  Default: $/ Examples: $/, $/MyProject,
            $/MyProject/SomeFolder.
        - id: project
          type: string
          description: Project ID or project name
        - id: includeDeleted
          type: boolean
          description: 'Return deleted branches. Default: False'
        - id: includeLinks
          type: boolean
          description: |
            Return links. Default: False
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcBranchRef"
          />[]&gt;
        description: ''
  - name: >-
      getChangeset(number, string, number, boolean, boolean, number, boolean,
      number, number, string, TfvcChangesetSearchCriteria)
    uid: azure-devops-extension-api.TfvcRestClient.getChangeset
    package: azure-devops-extension-api
    summary: Retrieve a Tfvc Changeset
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getChangeset(id: number, project?: string, maxChangeCount?:
        number, includeDetails?: boolean, includeWorkItems?: boolean,
        maxCommentLength?: number, includeSourceRename?: boolean, skip?: number,
        top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      parameters:
        - id: id
          type: number
          description: Changeset Id to retrieve.
        - id: project
          type: string
          description: Project ID or project name
        - id: maxChangeCount
          type: number
          description: 'Number of changes to return (maximum 100 changes) Default: 0'
        - id: includeDetails
          type: boolean
          description: >-
            Include policy details and check-in notes in the response. Default:
            false
        - id: includeWorkItems
          type: boolean
          description: 'Include workitems. Default: false'
        - id: maxCommentLength
          type: number
          description: >-
            Include details about associated work items in the response.
            Default: null
        - id: includeSourceRename
          type: boolean
          description: 'Include renames.  Default: false'
        - id: skip
          type: number
          description: 'Number of results to skip. Default: null'
        - id: top
          type: number
          description: 'The maximum number of results to return. Default: null'
        - id: orderby
          type: string
          description: >-
            Results are sorted by ID in descending order by default. Use id asc
            to sort by ID in ascending order.
        - id: searchCriteria
          type: >-
            <xref uid="azure-devops-extension-api.TfvcChangesetSearchCriteria"
            />
          description: >
            Following criteria available (.itemPath, .version, .versionType,
            .versionOption, .author, .fromId, .toId, .fromDate, .toDate)
            Default: null
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.TfvcChangeset" />&gt;
        description: ''
  - name: 'getChangesetChanges(number, number, number)'
    uid: azure-devops-extension-api.TfvcRestClient.getChangesetChanges
    package: azure-devops-extension-api
    summary: Retrieve Tfvc changes for a given changeset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getChangesetChanges(id?: number, skip?: number, top?: number)'
      parameters:
        - id: id
          type: number
          description: 'ID of the changeset. Default: null'
        - id: skip
          type: number
          description: 'Number of results to skip. Default: null'
        - id: top
          type: number
          description: |
            The maximum number of results to return. Default: null
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.TfvcChange" />[]&gt;'
        description: ''
  - name: >-
      getChangesets(string, number, number, number, string,
      TfvcChangesetSearchCriteria)
    uid: azure-devops-extension-api.TfvcRestClient.getChangesets
    package: azure-devops-extension-api
    summary: Retrieve Tfvc Changesets
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getChangesets(project?: string, maxCommentLength?: number,
        skip?: number, top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: maxCommentLength
          type: number
          description: >-
            Include details about associated work items in the response.
            Default: null
        - id: skip
          type: number
          description: 'Number of results to skip. Default: null'
        - id: top
          type: number
          description: 'The maximum number of results to return. Default: null'
        - id: orderby
          type: string
          description: >-
            Results are sorted by ID in descending order by default. Use id asc
            to sort by ID in ascending order.
        - id: searchCriteria
          type: >-
            <xref uid="azure-devops-extension-api.TfvcChangesetSearchCriteria"
            />
          description: >
            Following criteria available (.itemPath, .version, .versionType,
            .versionOption, .author, .fromId, .toId, .fromDate, .toDate)
            Default: null
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcChangesetRef"
          />[]&gt;
        description: ''
  - name: getChangesetWorkItems(number)
    uid: azure-devops-extension-api.TfvcRestClient.getChangesetWorkItems
    package: azure-devops-extension-api
    summary: Retrieves the work items associated with a particular changeset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getChangesetWorkItems(id?: number)'
      parameters:
        - id: id
          type: number
          description: |
            ID of the changeset.
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.AssociatedWorkItem"
          />[]&gt;
        description: ''
  - name: >-
      getItem(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    uid: azure-devops-extension-api.TfvcRestClient.getItem
    package: azure-devops-extension-api
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItem(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type: string
          description: Version control path of an individual item to return.
        - id: project
          type: string
          description: Project ID or project name
        - id: fileName
          type: string
          description: file name of item returned.
        - id: download
          type: boolean
          description: 'If true, create a downloadable attachment.'
        - id: scopePath
          type: string
          description: Version control path of a folder to return multiple items.
        - id: recursionLevel
          type: >-
            <xref uid="azure-devops-extension-api.VersionControlRecursionType"
            />
          description: 'None (just the item), or OneLevel (contents of a folder).'
        - id: versionDescriptor
          type: <xref uid="azure-devops-extension-api.TfvcVersionDescriptor" />
          description: Version descriptor.  Default is null.
        - id: includeContent
          type: boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.TfvcItem" />&gt;
        description: ''
  - name: >-
      getItemContent(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    uid: azure-devops-extension-api.TfvcRestClient.getItemContent
    package: azure-devops-extension-api
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItemContent(path: string, project?: string, fileName?:
        string, download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type: string
          description: Version control path of an individual item to return.
        - id: project
          type: string
          description: Project ID or project name
        - id: fileName
          type: string
          description: file name of item returned.
        - id: download
          type: boolean
          description: 'If true, create a downloadable attachment.'
        - id: scopePath
          type: string
          description: Version control path of a folder to return multiple items.
        - id: recursionLevel
          type: >-
            <xref uid="azure-devops-extension-api.VersionControlRecursionType"
            />
          description: 'None (just the item), or OneLevel (contents of a folder).'
        - id: versionDescriptor
          type: <xref uid="azure-devops-extension-api.TfvcVersionDescriptor" />
          description: Version descriptor.  Default is null.
        - id: includeContent
          type: boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
      return:
        type: Promise&lt;ArrayBuffer&gt;
        description: ''
  - name: >-
      getItems(string, string, VersionControlRecursionType, boolean,
      TfvcVersionDescriptor)
    uid: azure-devops-extension-api.TfvcRestClient.getItems
    package: azure-devops-extension-api
    summary: Get a list of Tfvc items
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItems(project?: string, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, includeLinks?: boolean, versionDescriptor?:
        TfvcVersionDescriptor)
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: scopePath
          type: string
          description: Version control path of a folder to return multiple items.
        - id: recursionLevel
          type: >-
            <xref uid="azure-devops-extension-api.VersionControlRecursionType"
            />
          description: 'None (just the item), or OneLevel (contents of a folder).'
        - id: includeLinks
          type: boolean
          description: True to include links.
        - id: versionDescriptor
          type: <xref uid="azure-devops-extension-api.TfvcVersionDescriptor" />
          description: |
            -
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.TfvcItem" />[]&gt;'
        description: ''
  - name: 'getItemsBatch(TfvcItemRequestData, string)'
    uid: azure-devops-extension-api.TfvcRestClient.getItemsBatch
    package: azure-devops-extension-api
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItemsBatch(itemRequestData: TfvcItemRequestData, project?:
        string)
      parameters:
        - id: itemRequestData
          type: <xref uid="azure-devops-extension-api.TfvcItemRequestData" />
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.TfvcItem" />[][]&gt;'
        description: ''
  - name: 'getItemsBatchZip(TfvcItemRequestData, string)'
    uid: azure-devops-extension-api.TfvcRestClient.getItemsBatchZip
    package: azure-devops-extension-api
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItemsBatchZip(itemRequestData: TfvcItemRequestData,
        project?: string)
      parameters:
        - id: itemRequestData
          type: <xref uid="azure-devops-extension-api.TfvcItemRequestData" />
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        type: Promise&lt;ArrayBuffer&gt;
        description: ''
  - name: >-
      getItemText(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    uid: azure-devops-extension-api.TfvcRestClient.getItemText
    package: azure-devops-extension-api
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItemText(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type: string
          description: Version control path of an individual item to return.
        - id: project
          type: string
          description: Project ID or project name
        - id: fileName
          type: string
          description: file name of item returned.
        - id: download
          type: boolean
          description: 'If true, create a downloadable attachment.'
        - id: scopePath
          type: string
          description: Version control path of a folder to return multiple items.
        - id: recursionLevel
          type: >-
            <xref uid="azure-devops-extension-api.VersionControlRecursionType"
            />
          description: 'None (just the item), or OneLevel (contents of a folder).'
        - id: versionDescriptor
          type: <xref uid="azure-devops-extension-api.TfvcVersionDescriptor" />
          description: Version descriptor.  Default is null.
        - id: includeContent
          type: boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
      return:
        type: Promise&lt;string&gt;
        description: ''
  - name: >-
      getItemZip(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    uid: azure-devops-extension-api.TfvcRestClient.getItemZip
    package: azure-devops-extension-api
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getItemZip(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type: string
          description: Version control path of an individual item to return.
        - id: project
          type: string
          description: Project ID or project name
        - id: fileName
          type: string
          description: file name of item returned.
        - id: download
          type: boolean
          description: 'If true, create a downloadable attachment.'
        - id: scopePath
          type: string
          description: Version control path of a folder to return multiple items.
        - id: recursionLevel
          type: >-
            <xref uid="azure-devops-extension-api.VersionControlRecursionType"
            />
          description: 'None (just the item), or OneLevel (contents of a folder).'
        - id: versionDescriptor
          type: <xref uid="azure-devops-extension-api.TfvcVersionDescriptor" />
          description: Version descriptor.  Default is null.
        - id: includeContent
          type: boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
      return:
        type: Promise&lt;ArrayBuffer&gt;
        description: ''
  - name: 'getLabel(string, TfvcLabelRequestData, string)'
    uid: azure-devops-extension-api.TfvcRestClient.getLabel
    package: azure-devops-extension-api
    summary: Get a single deep label.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLabel(labelId: string, requestData: TfvcLabelRequestData,
        project?: string)
      parameters:
        - id: labelId
          type: string
          description: Unique identifier of label
        - id: requestData
          type: <xref uid="azure-devops-extension-api.TfvcLabelRequestData" />
          description: maxItemCount
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.TfvcLabel" />&gt;
        description: ''
  - name: 'getLabelItems(string, number, number)'
    uid: azure-devops-extension-api.TfvcRestClient.getLabelItems
    package: azure-devops-extension-api
    summary: Get items under a label.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getLabelItems(labelId: string, top?: number, skip?: number)'
      parameters:
        - id: labelId
          type: string
          description: Unique identifier of label
        - id: top
          type: number
          description: Max number of items to return
        - id: skip
          type: number
          description: |
            Number of items to skip
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.TfvcItem" />[]&gt;'
        description: ''
  - name: 'getLabels(TfvcLabelRequestData, string, number, number)'
    uid: azure-devops-extension-api.TfvcRestClient.getLabels
    package: azure-devops-extension-api
    summary: Get a collection of shallow label references.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLabels(requestData: TfvcLabelRequestData, project?: string,
        top?: number, skip?: number)
      parameters:
        - id: requestData
          type: <xref uid="azure-devops-extension-api.TfvcLabelRequestData" />
          description: 'labelScope, name, owner, and itemLabelFilter'
        - id: project
          type: string
          description: Project ID or project name
        - id: top
          type: number
          description: Max number of labels to return
        - id: skip
          type: number
          description: |
            Number of labels to skip
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcLabelRef"
          />[]&gt;
        description: ''
  - name: 'getShelveset(string, TfvcShelvesetRequestData)'
    uid: azure-devops-extension-api.TfvcRestClient.getShelveset
    package: azure-devops-extension-api
    summary: Get a single deep shelveset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getShelveset(shelvesetId: string, requestData?:
        TfvcShelvesetRequestData)
      parameters:
        - id: shelvesetId
          type: string
          description: Shelveset's unique ID
        - id: requestData
          type: <xref uid="azure-devops-extension-api.TfvcShelvesetRequestData" />
          description: >
            includeDetails, includeWorkItems, maxChangeCount, and
            maxCommentLength
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.TfvcShelveset" />&gt;
        description: ''
  - name: 'getShelvesetChanges(string, number, number)'
    uid: azure-devops-extension-api.TfvcRestClient.getShelvesetChanges
    package: azure-devops-extension-api
    summary: Get changes included in a shelveset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getShelvesetChanges(shelvesetId: string, top?: number, skip?:
        number)
      parameters:
        - id: shelvesetId
          type: string
          description: Shelveset's unique ID
        - id: top
          type: number
          description: Max number of changes to return
        - id: skip
          type: number
          description: |
            Number of changes to skip
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.TfvcChange" />[]&gt;'
        description: ''
  - name: 'getShelvesets(TfvcShelvesetRequestData, number, number)'
    uid: azure-devops-extension-api.TfvcRestClient.getShelvesets
    package: azure-devops-extension-api
    summary: Return a collection of shallow shelveset references.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getShelvesets(requestData?: TfvcShelvesetRequestData, top?:
        number, skip?: number)
      parameters:
        - id: requestData
          type: <xref uid="azure-devops-extension-api.TfvcShelvesetRequestData" />
          description: 'name, owner, and maxCommentLength'
        - id: top
          type: number
          description: Max number of shelvesets to return
        - id: skip
          type: number
          description: |
            Number of shelvesets to skip
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcShelvesetRef"
          />[]&gt;
        description: ''
  - name: getShelvesetWorkItems(string)
    uid: azure-devops-extension-api.TfvcRestClient.getShelvesetWorkItems
    package: azure-devops-extension-api
    summary: Get work items associated with a shelveset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getShelvesetWorkItems(shelvesetId: string)'
      parameters:
        - id: shelvesetId
          type: string
          description: |
            Shelveset's unique ID
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.AssociatedWorkItem"
          />[]&gt;
        description: ''
  - name: 'getTfvcStatistics(string, string)'
    uid: azure-devops-extension-api.TfvcRestClient.getTfvcStatistics
    package: azure-devops-extension-api
    summary: >-
      Provides File Count and Uncompressed Bytes for a Collection/Project at a
      particular scope for TFVC.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTfvcStatistics(project?: string, scopePath?: string)'
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: scopePath
          type: string
          description: |
            '$/' for collection, '$/project' for specific project
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.TfvcStatistics"
          />&gt;
        description: ''
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
