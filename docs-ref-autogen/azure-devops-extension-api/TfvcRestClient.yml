### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.TfvcRestClient
    name: TfvcRestClient
    fullName: TfvcRestClient
    children:
      - azure-devops-extension-api.TfvcRestClient.createChangeset
      - azure-devops-extension-api.TfvcRestClient.getBatchedChangesets
      - azure-devops-extension-api.TfvcRestClient.getBranch
      - azure-devops-extension-api.TfvcRestClient.getBranches
      - azure-devops-extension-api.TfvcRestClient.getBranchRefs
      - azure-devops-extension-api.TfvcRestClient.getChangeset
      - azure-devops-extension-api.TfvcRestClient.getChangesetChanges
      - azure-devops-extension-api.TfvcRestClient.getChangesets
      - azure-devops-extension-api.TfvcRestClient.getChangesetWorkItems
      - azure-devops-extension-api.TfvcRestClient.getItem
      - azure-devops-extension-api.TfvcRestClient.getItemContent
      - azure-devops-extension-api.TfvcRestClient.getItems
      - azure-devops-extension-api.TfvcRestClient.getItemsBatch
      - azure-devops-extension-api.TfvcRestClient.getItemsBatchZip
      - azure-devops-extension-api.TfvcRestClient.getItemText
      - azure-devops-extension-api.TfvcRestClient.getItemZip
      - azure-devops-extension-api.TfvcRestClient.getLabel
      - azure-devops-extension-api.TfvcRestClient.getLabelItems
      - azure-devops-extension-api.TfvcRestClient.getLabels
      - azure-devops-extension-api.TfvcRestClient.getShelveset
      - azure-devops-extension-api.TfvcRestClient.getShelvesetChanges
      - azure-devops-extension-api.TfvcRestClient.getShelvesets
      - azure-devops-extension-api.TfvcRestClient.getShelvesetWorkItems
      - azure-devops-extension-api.TfvcRestClient.getTfvcStatistics
      - azure-devops-extension-api.TfvcRestClient.RESOURCE_AREA_ID
      - azure-devops-extension-api.TfvcRestClient.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.createChangeset
    name: 'createChangeset(TfvcChangeset, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new changeset.
    syntax:
      content: 'function createChangeset(changeset: TfvcChangeset, project?: string)'
      parameters:
        - id: changeset
          type:
            - azure-devops-extension-api.TfvcChangeset
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcChangesetRef>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getBatchedChangesets
    name: getBatchedChangesets(TfvcChangesetsRequestData)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns changesets for a given list of changeset Ids.
    syntax:
      content: >-
        function getBatchedChangesets(changesetsRequestData:
        TfvcChangesetsRequestData)
      parameters:
        - id: changesetsRequestData
          type:
            - azure-devops-extension-api.TfvcChangesetsRequestData
          description: |
            List of changeset IDs.
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcChangesetRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getBranch
    name: 'getBranch(string, string, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a single branch hierarchy at the given path with parents or children
      as specified.
    syntax:
      content: >-
        function getBranch(path: string, project?: string, includeParent?:
        boolean, includeChildren?: boolean)
      parameters:
        - id: path
          type:
            - string
          description: >-
            Full path to the branch.  Default: $/ Examples: $/, $/MyProject,
            $/MyProject/SomeFolder.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: 'Return the parent branch, if there is one. Default: False'
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: |
            Return child branches, if there are any. Default: False
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcBranch>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getBranches
    name: 'getBranches(string, boolean, boolean, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a collection of branch roots -- first-level children, branches with no
      parents.
    syntax:
      content: >-
        function getBranches(project?: string, includeParent?: boolean,
        includeChildren?: boolean, includeDeleted?: boolean, includeLinks?:
        boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: 'Return the parent branch, if there is one. Default: False'
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: 'Return the child branches for each root branch. Default: False'
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: 'Return deleted branches. Default: False'
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: |
            Return links. Default: False
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcBranch[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getBranchRefs
    name: 'getBranchRefs(string, string, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get branch hierarchies below the specified scopePath
    syntax:
      content: >-
        function getBranchRefs(scopePath: string, project?: string,
        includeDeleted?: boolean, includeLinks?: boolean)
      parameters:
        - id: scopePath
          type:
            - string
          description: >-
            Full path to the branch.  Default: $/ Examples: $/, $/MyProject,
            $/MyProject/SomeFolder.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: 'Return deleted branches. Default: False'
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: |
            Return links. Default: False
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcBranchRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getChangeset
    name: >-
      getChangeset(number, string, number, boolean, boolean, number, boolean,
      number, number, string, TfvcChangesetSearchCriteria)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve a Tfvc Changeset
    syntax:
      content: >-
        function getChangeset(id: number, project?: string, maxChangeCount?:
        number, includeDetails?: boolean, includeWorkItems?: boolean,
        maxCommentLength?: number, includeSourceRename?: boolean, skip?: number,
        top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      parameters:
        - id: id
          type:
            - number
          description: Changeset Id to retrieve.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxChangeCount
          type:
            - number
          description: 'Number of changes to return (maximum 100 changes) Default: 0'
          optional: true
        - id: includeDetails
          type:
            - boolean
          description: >-
            Include policy details and check-in notes in the response. Default:
            false
          optional: true
        - id: includeWorkItems
          type:
            - boolean
          description: 'Include workitems. Default: false'
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: >-
            Include details about associated work items in the response.
            Default: null
          optional: true
        - id: includeSourceRename
          type:
            - boolean
          description: 'Include renames.  Default: false'
          optional: true
        - id: skip
          type:
            - number
          description: 'Number of results to skip. Default: null'
          optional: true
        - id: top
          type:
            - number
          description: 'The maximum number of results to return. Default: null'
          optional: true
        - id: orderby
          type:
            - string
          description: >-
            Results are sorted by ID in descending order by default. Use id asc
            to sort by ID in ascending order.
          optional: true
        - id: searchCriteria
          type:
            - azure-devops-extension-api.TfvcChangesetSearchCriteria
          description: >
            Following criteria available (.itemPath, .version, .versionType,
            .versionOption, .author, .fromId, .toId, .fromDate, .toDate)
            Default: null
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcChangeset>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getChangesetChanges
    name: 'getChangesetChanges(number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve Tfvc changes for a given changeset.
    syntax:
      content: 'function getChangesetChanges(id?: number, skip?: number, top?: number)'
      parameters:
        - id: id
          type:
            - number
          description: 'ID of the changeset. Default: null'
          optional: true
        - id: skip
          type:
            - number
          description: 'Number of results to skip. Default: null'
          optional: true
        - id: top
          type:
            - number
          description: |
            The maximum number of results to return. Default: null
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcChange[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getChangesets
    name: >-
      getChangesets(string, number, number, number, string,
      TfvcChangesetSearchCriteria)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve Tfvc Changesets
    syntax:
      content: >-
        function getChangesets(project?: string, maxCommentLength?: number,
        skip?: number, top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: >-
            Include details about associated work items in the response.
            Default: null
          optional: true
        - id: skip
          type:
            - number
          description: 'Number of results to skip. Default: null'
          optional: true
        - id: top
          type:
            - number
          description: 'The maximum number of results to return. Default: null'
          optional: true
        - id: orderby
          type:
            - string
          description: >-
            Results are sorted by ID in descending order by default. Use id asc
            to sort by ID in ascending order.
          optional: true
        - id: searchCriteria
          type:
            - azure-devops-extension-api.TfvcChangesetSearchCriteria
          description: >
            Following criteria available (.itemPath, .version, .versionType,
            .versionOption, .author, .fromId, .toId, .fromDate, .toDate)
            Default: null
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcChangesetRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getChangesetWorkItems
    name: getChangesetWorkItems(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves the work items associated with a particular changeset.
    syntax:
      content: 'function getChangesetWorkItems(id?: number)'
      parameters:
        - id: id
          type:
            - number
          description: |
            ID of the changeset. Default: null
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.AssociatedWorkItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItem
    name: >-
      getItem(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItem(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type:
            - string
          description: Version control path of an individual item to return.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: file name of item returned.
          optional: true
        - id: download
          type:
            - boolean
          description: 'If true, create a downloadable attachment.'
          optional: true
        - id: scopePath
          type:
            - string
          description: Version control path of a folder to return multiple items.
          optional: true
        - id: recursionLevel
          type:
            - azure-devops-extension-api.VersionControlRecursionType
          description: 'None (just the item), or OneLevel (contents of a folder).'
          optional: true
        - id: versionDescriptor
          type:
            - azure-devops-extension-api.TfvcVersionDescriptor
          description: Version descriptor.  Default is null.
          optional: true
        - id: includeContent
          type:
            - boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcItem>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItemContent
    name: >-
      getItemContent(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItemContent(path: string, project?: string, fileName?:
        string, download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type:
            - string
          description: Version control path of an individual item to return.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: file name of item returned.
          optional: true
        - id: download
          type:
            - boolean
          description: 'If true, create a downloadable attachment.'
          optional: true
        - id: scopePath
          type:
            - string
          description: Version control path of a folder to return multiple items.
          optional: true
        - id: recursionLevel
          type:
            - azure-devops-extension-api.VersionControlRecursionType
          description: 'None (just the item), or OneLevel (contents of a folder).'
          optional: true
        - id: versionDescriptor
          type:
            - azure-devops-extension-api.TfvcVersionDescriptor
          description: Version descriptor.  Default is null.
          optional: true
        - id: includeContent
          type:
            - boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItems
    name: >-
      getItems(string, string, VersionControlRecursionType, boolean,
      TfvcVersionDescriptor)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of Tfvc items
    syntax:
      content: >-
        function getItems(project?: string, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, includeLinks?: boolean, versionDescriptor?:
        TfvcVersionDescriptor)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: scopePath
          type:
            - string
          description: Version control path of a folder to return multiple items.
          optional: true
        - id: recursionLevel
          type:
            - azure-devops-extension-api.VersionControlRecursionType
          description: 'None (just the item), or OneLevel (contents of a folder).'
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: True to include links.
          optional: true
        - id: versionDescriptor
          type:
            - azure-devops-extension-api.TfvcVersionDescriptor
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItemsBatch
    name: 'getItemsBatch(TfvcItemRequestData, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    syntax:
      content: >-
        function getItemsBatch(itemRequestData: TfvcItemRequestData, project?:
        string)
      parameters:
        - id: itemRequestData
          type:
            - azure-devops-extension-api.TfvcItemRequestData
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcItem[][]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItemsBatchZip
    name: 'getItemsBatchZip(TfvcItemRequestData, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    syntax:
      content: >-
        function getItemsBatchZip(itemRequestData: TfvcItemRequestData,
        project?: string)
      parameters:
        - id: itemRequestData
          type:
            - azure-devops-extension-api.TfvcItemRequestData
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItemText
    name: >-
      getItemText(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItemText(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type:
            - string
          description: Version control path of an individual item to return.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: file name of item returned.
          optional: true
        - id: download
          type:
            - boolean
          description: 'If true, create a downloadable attachment.'
          optional: true
        - id: scopePath
          type:
            - string
          description: Version control path of a folder to return multiple items.
          optional: true
        - id: recursionLevel
          type:
            - azure-devops-extension-api.VersionControlRecursionType
          description: 'None (just the item), or OneLevel (contents of a folder).'
          optional: true
        - id: versionDescriptor
          type:
            - azure-devops-extension-api.TfvcVersionDescriptor
          description: Version descriptor.  Default is null.
          optional: true
        - id: includeContent
          type:
            - boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getItemZip
    name: >-
      getItemZip(string, string, string, boolean, string,
      VersionControlRecursionType, TfvcVersionDescriptor, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItemZip(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor,
        includeContent?: boolean)
      parameters:
        - id: path
          type:
            - string
          description: Version control path of an individual item to return.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: file name of item returned.
          optional: true
        - id: download
          type:
            - boolean
          description: 'If true, create a downloadable attachment.'
          optional: true
        - id: scopePath
          type:
            - string
          description: Version control path of a folder to return multiple items.
          optional: true
        - id: recursionLevel
          type:
            - azure-devops-extension-api.VersionControlRecursionType
          description: 'None (just the item), or OneLevel (contents of a folder).'
          optional: true
        - id: versionDescriptor
          type:
            - azure-devops-extension-api.TfvcVersionDescriptor
          description: Version descriptor.  Default is null.
          optional: true
        - id: includeContent
          type:
            - boolean
          description: >
            Set to true to include item content when requesting json.  Default
            is false.
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getLabel
    name: 'getLabel(string, TfvcLabelRequestData, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a single deep label.
    syntax:
      content: >-
        function getLabel(labelId: string, requestData: TfvcLabelRequestData,
        project?: string)
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: requestData
          type:
            - azure-devops-extension-api.TfvcLabelRequestData
          description: maxItemCount
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcLabel>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getLabelItems
    name: 'getLabelItems(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get items under a label.
    syntax:
      content: 'function getLabelItems(labelId: string, top?: number, skip?: number)'
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: top
          type:
            - number
          description: Max number of items to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of items to skip
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getLabels
    name: 'getLabels(TfvcLabelRequestData, string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a collection of shallow label references.
    syntax:
      content: >-
        function getLabels(requestData: TfvcLabelRequestData, project?: string,
        top?: number, skip?: number)
      parameters:
        - id: requestData
          type:
            - azure-devops-extension-api.TfvcLabelRequestData
          description: 'labelScope, name, owner, and itemLabelFilter'
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: top
          type:
            - number
          description: Max number of labels to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of labels to skip
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcLabelRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getShelveset
    name: 'getShelveset(string, TfvcShelvesetRequestData)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a single deep shelveset.
    syntax:
      content: >-
        function getShelveset(shelvesetId: string, requestData?:
        TfvcShelvesetRequestData)
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: requestData
          type:
            - azure-devops-extension-api.TfvcShelvesetRequestData
          description: >
            includeDetails, includeWorkItems, maxChangeCount, and
            maxCommentLength
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcShelveset>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getShelvesetChanges
    name: 'getShelvesetChanges(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get changes included in a shelveset.
    syntax:
      content: >-
        function getShelvesetChanges(shelvesetId: string, top?: number, skip?:
        number)
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: top
          type:
            - number
          description: Max number of changes to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of changes to skip
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcChange[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getShelvesets
    name: 'getShelvesets(TfvcShelvesetRequestData, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Return a collection of shallow shelveset references.
    syntax:
      content: >-
        function getShelvesets(requestData?: TfvcShelvesetRequestData, top?:
        number, skip?: number)
      parameters:
        - id: requestData
          type:
            - azure-devops-extension-api.TfvcShelvesetRequestData
          description: 'name, owner, and maxCommentLength'
          optional: true
        - id: top
          type:
            - number
          description: Max number of shelvesets to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of shelvesets to skip
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.TfvcShelvesetRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getShelvesetWorkItems
    name: getShelvesetWorkItems(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get work items associated with a shelveset.
    syntax:
      content: 'function getShelvesetWorkItems(shelvesetId: string)'
      parameters:
        - id: shelvesetId
          type:
            - string
          description: |
            Shelveset's unique ID
      return:
        type:
          - 'Promise<azure-devops-extension-api.AssociatedWorkItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.getTfvcStatistics
    name: 'getTfvcStatistics(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides File Count and Uncompressed Bytes for a Collection/Project at a
      particular scope for TFVC.
    syntax:
      content: 'function getTfvcStatistics(project?: string, scopePath?: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: scopePath
          type:
            - string
          description: |
            '$/' for collection, '$/project' for specific project
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.TfvcStatistics>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.RESOURCE_AREA_ID
    name: RESOURCE_AREA_ID
    fullName: RESOURCE_AREA_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TfvcRestClient.constructor
    name: TfvcRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new TfvcRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: azure-devops-extension-api.TfvcChangeset
    name: TfvcChangeset
    spec.typeScript:
      - name: TfvcChangeset
        fullName: TfvcChangeset
        uid: azure-devops-extension-api.TfvcChangeset
  - uid: Promise<azure-devops-extension-api.TfvcChangesetRef>
    name: TfvcChangesetRef>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcChangesetRef
        fullName: TfvcChangesetRef
        uid: azure-devops-extension-api.TfvcChangesetRef
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.TfvcChangesetsRequestData
    name: TfvcChangesetsRequestData
    spec.typeScript:
      - name: TfvcChangesetsRequestData
        fullName: TfvcChangesetsRequestData
        uid: azure-devops-extension-api.TfvcChangesetsRequestData
  - uid: 'Promise<azure-devops-extension-api.TfvcChangesetRef[]>'
    name: 'TfvcChangesetRef[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcChangesetRef
        fullName: TfvcChangesetRef
        uid: azure-devops-extension-api.TfvcChangesetRef
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.TfvcBranch>
    name: TfvcBranch>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcBranch
        fullName: TfvcBranch
        uid: azure-devops-extension-api.TfvcBranch
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.TfvcBranchRef[]>'
    name: 'TfvcBranchRef[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcBranchRef
        fullName: TfvcBranchRef
        uid: azure-devops-extension-api.TfvcBranchRef
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.TfvcBranch[]>'
    name: 'TfvcBranch[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcBranch
        fullName: TfvcBranch
        uid: azure-devops-extension-api.TfvcBranch
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.TfvcChangesetSearchCriteria
    name: TfvcChangesetSearchCriteria
    spec.typeScript:
      - name: TfvcChangesetSearchCriteria
        fullName: TfvcChangesetSearchCriteria
        uid: azure-devops-extension-api.TfvcChangesetSearchCriteria
  - uid: Promise<azure-devops-extension-api.TfvcChangeset>
    name: TfvcChangeset>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcChangeset
        fullName: TfvcChangeset
        uid: azure-devops-extension-api.TfvcChangeset
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.TfvcChange[]>'
    name: 'TfvcChange[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcChange
        fullName: TfvcChange
        uid: azure-devops-extension-api.TfvcChange
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.AssociatedWorkItem[]>'
    name: 'AssociatedWorkItem[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AssociatedWorkItem
        fullName: AssociatedWorkItem
        uid: azure-devops-extension-api.AssociatedWorkItem
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.VersionControlRecursionType
    name: VersionControlRecursionType
    spec.typeScript:
      - name: VersionControlRecursionType
        fullName: VersionControlRecursionType
        uid: azure-devops-extension-api.VersionControlRecursionType
  - uid: azure-devops-extension-api.TfvcVersionDescriptor
    name: TfvcVersionDescriptor
    spec.typeScript:
      - name: TfvcVersionDescriptor
        fullName: TfvcVersionDescriptor
        uid: azure-devops-extension-api.TfvcVersionDescriptor
  - uid: Promise<azure-devops-extension-api.TfvcItem>
    name: TfvcItem>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcItem
        fullName: TfvcItem
        uid: azure-devops-extension-api.TfvcItem
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.TfvcItem[]>'
    name: 'TfvcItem[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcItem
        fullName: TfvcItem
        uid: azure-devops-extension-api.TfvcItem
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.TfvcItemRequestData
    name: TfvcItemRequestData
    spec.typeScript:
      - name: TfvcItemRequestData
        fullName: TfvcItemRequestData
        uid: azure-devops-extension-api.TfvcItemRequestData
  - uid: 'Promise<azure-devops-extension-api.TfvcItem[][]>'
    name: 'TfvcItem[][]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcItem
        fullName: TfvcItem
        uid: azure-devops-extension-api.TfvcItem
      - name: '[][]>'
        fullName: '[][]>'
  - uid: azure-devops-extension-api.TfvcLabelRequestData
    name: TfvcLabelRequestData
    spec.typeScript:
      - name: TfvcLabelRequestData
        fullName: TfvcLabelRequestData
        uid: azure-devops-extension-api.TfvcLabelRequestData
  - uid: Promise<azure-devops-extension-api.TfvcLabel>
    name: TfvcLabel>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcLabel
        fullName: TfvcLabel
        uid: azure-devops-extension-api.TfvcLabel
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.TfvcLabelRef[]>'
    name: 'TfvcLabelRef[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcLabelRef
        fullName: TfvcLabelRef
        uid: azure-devops-extension-api.TfvcLabelRef
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.TfvcShelvesetRequestData
    name: TfvcShelvesetRequestData
    spec.typeScript:
      - name: TfvcShelvesetRequestData
        fullName: TfvcShelvesetRequestData
        uid: azure-devops-extension-api.TfvcShelvesetRequestData
  - uid: Promise<azure-devops-extension-api.TfvcShelveset>
    name: TfvcShelveset>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcShelveset
        fullName: TfvcShelveset
        uid: azure-devops-extension-api.TfvcShelveset
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.TfvcShelvesetRef[]>'
    name: 'TfvcShelvesetRef[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcShelvesetRef
        fullName: TfvcShelvesetRef
        uid: azure-devops-extension-api.TfvcShelvesetRef
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.TfvcStatistics>
    name: TfvcStatistics>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TfvcStatistics
        fullName: TfvcStatistics
        uid: azure-devops-extension-api.TfvcStatistics
      - name: '>'
        fullName: '>'
