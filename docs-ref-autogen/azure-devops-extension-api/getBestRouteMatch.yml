### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.getBestRouteMatch
    name: 'getBestRouteMatch(IParsedRoute[], [key: string]: string)'
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Take a set of routes and find the best match. The best match is the route
      with the highest number of replacements

      (of the given routeValues dictionary). In the event of a tie (same number
      of replacements) the route that came first wins.
    syntax:
      content: >-
        function getBestRouteMatch(routeCollection: IParsedRoute[], routeValues:
        [key: string]: string)
      parameters:
        - id: routeCollection
          type:
            - 'azure-devops-extension-api.IParsedRoute[]'
          description: Array of parsed routes
        - id: routeValues
          type:
            - '[key: string]: string'
          description: |
            Replacement values
      return:
        type:
          - azure-devops-extension-api.IRouteMatchResult | undefined
    package: azure-devops-extension-api
references:
  - uid: 'azure-devops-extension-api.IParsedRoute[]'
    name: 'IParsedRoute[]'
    spec.typeScript:
      - name: IParsedRoute
        fullName: IParsedRoute
        uid: azure-devops-extension-api.IParsedRoute
      - name: '[]'
        fullName: '[]'
  - uid: azure-devops-extension-api.IRouteMatchResult | undefined
    name: IRouteMatchResult | undefined
    spec.typeScript:
      - name: IRouteMatchResult
        fullName: IRouteMatchResult
        uid: azure-devops-extension-api.IRouteMatchResult
      - name: ' | undefined'
        fullName: ' | undefined'
