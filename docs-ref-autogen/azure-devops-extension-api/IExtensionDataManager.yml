### YamlMime:TSType
name: IExtensionDataManager
uid: azure-devops-extension-api.IExtensionDataManager
package: azure-devops-extension-api
summary: ''
fullName: IExtensionDataManager
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'createDocument(string, any, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.createDocument
    package: azure-devops-extension-api
    summary: Returns a promise for creating a document in the provided collection
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDocument(collectionName: string, doc: any,
        documentOptions?: IDocumentOptions)
      parameters:
        - id: collectionName
          type: string
          description: The name of the collection where the document lives
        - id: doc
          type: any
          description: The document to store
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'deleteDocument(string, string, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.deleteDocument
    package: azure-devops-extension-api
    summary: >-
      Returns a promise for deleting the document at the provided scope,
      collection and id
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDocument(collectionName: string, id: string,
        documentOptions?: IDocumentOptions)
      parameters:
        - id: collectionName
          type: string
          description: The name of the collection where the document lives
        - id: id
          type: string
          description: The id of the document in the collection
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getDocument(string, string, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.getDocument
    package: azure-devops-extension-api
    summary: >-
      Returns a promise for getting a document with the provided id in the
      provided collection
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDocument(collectionName: string, id: string,
        documentOptions?: IDocumentOptions)
      parameters:
        - id: collectionName
          type: string
          description: The name of the collection where the document lives
        - id: id
          type: string
          description: The id of the document in the collection
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'getDocuments(string, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.getDocuments
    package: azure-devops-extension-api
    summary: >-
      Returns a promise for getting all of the documents in the provided
      collection
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDocuments(collectionName: string, documentOptions?:
        IDocumentOptions)
      parameters:
        - id: collectionName
          type: string
          description: The name of the collection where the document lives
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: 'Promise&lt;any[]&gt;'
        description: ''
  - name: 'getValue<T><T>(string, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.getValue
    package: azure-devops-extension-api
    summary: Returns a promise for retrieving a setting at the provided key and scope
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getValue<T><T>(key: string, documentOptions?: IDocumentOptions)'
      parameters:
        - id: key
          type: string
          description: The key to retrieve a value for
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;T&gt;
        description: ''
  - name: 'queryCollections(ExtensionDataCollection[])'
    uid: azure-devops-extension-api.IExtensionDataManager.queryCollections
    package: azure-devops-extension-api
    summary: Returns a promise for querying a set of collections
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function queryCollections(collections: ExtensionDataCollection[])'
      parameters:
        - id: collections
          type: '<xref uid="azure-devops-extension-api.ExtensionDataCollection" />[]'
          description: >
            The list of collections to query. Each collection will contain its
            collectionName, scopeType, and scopeValue
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ExtensionDataCollection" />[]&gt;
        description: ''
  - name: 'queryCollectionsByName(string[])'
    uid: azure-devops-extension-api.IExtensionDataManager.queryCollectionsByName
    package: azure-devops-extension-api
    summary: Returns a promise for querying a set of collections
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function queryCollectionsByName(collectionNames: string[])'
      parameters:
        - id: collectionNames
          type: 'string[]'
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ExtensionDataCollection" />[]&gt;
        description: ''
  - name: 'setDocument(string, any, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.setDocument
    package: azure-devops-extension-api
    summary: >-
      Returns a promise for setting a document in the provided collection

      Creates the document if it does not exist, otherwise updates the existing
      document with the id provided
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setDocument(collectionName: string, doc: any, documentOptions?:
        IDocumentOptions)
      parameters:
        - id: collectionName
          type: string
          description: The name of the collection where the document lives
        - id: doc
          type: any
          description: The document to store
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'setValue<T><T>(string, T, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.setValue
    package: azure-devops-extension-api
    summary: Returns a promise for saving a setting at the provided key and scope
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setValue<T><T>(key: string, value: T, documentOptions?:
        IDocumentOptions)
      parameters:
        - id: key
          type: string
          description: The key to save a value for
        - id: value
          type: T
          description: The value to save
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;T&gt;
        description: ''
  - name: 'updateDocument(string, any, IDocumentOptions)'
    uid: azure-devops-extension-api.IExtensionDataManager.updateDocument
    package: azure-devops-extension-api
    summary: |-
      Returns a promise for updating a document in the provided collection
      A document with the id provided must exist
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDocument(collectionName: string, doc: any,
        documentOptions?: IDocumentOptions)
      parameters:
        - id: collectionName
          type: string
          description: The name of the collection where the document lives
        - id: doc
          type: any
          description: The document to store
        - id: documentOptions
          type: <xref uid="azure-devops-extension-api.IDocumentOptions" />
          description: |
            Extension document options, the default scope value is account-wide
      return:
        type: Promise&lt;any&gt;
        description: ''
