### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.GalleryRestClient
    name: GalleryRestClient
    fullName: GalleryRestClient
    children:
      - >-
        azure-devops-extension-api.GalleryRestClient.addAssetForEditExtensionDraft
      - >-
        azure-devops-extension-api.GalleryRestClient.addAssetForNewExtensionDraft
      - azure-devops-extension-api.GalleryRestClient.associateAzurePublisher
      - azure-devops-extension-api.GalleryRestClient.createCategory
      - azure-devops-extension-api.GalleryRestClient.createDraftForEditExtension
      - azure-devops-extension-api.GalleryRestClient.createDraftForNewExtension
      - azure-devops-extension-api.GalleryRestClient.createExtension
      - >-
        azure-devops-extension-api.GalleryRestClient.createExtensionWithPublisher
      - azure-devops-extension-api.GalleryRestClient.createPublisher
      - azure-devops-extension-api.GalleryRestClient.createQuestion
      - azure-devops-extension-api.GalleryRestClient.createResponse
      - azure-devops-extension-api.GalleryRestClient.createReview
      - azure-devops-extension-api.GalleryRestClient.deleteExtension
      - azure-devops-extension-api.GalleryRestClient.deleteExtensionById
      - azure-devops-extension-api.GalleryRestClient.deletePublisher
      - azure-devops-extension-api.GalleryRestClient.deletePublisherAsset
      - azure-devops-extension-api.GalleryRestClient.deleteQuestion
      - azure-devops-extension-api.GalleryRestClient.deleteResponse
      - azure-devops-extension-api.GalleryRestClient.deleteReview
      - azure-devops-extension-api.GalleryRestClient.extensionValidator
      - azure-devops-extension-api.GalleryRestClient.constructor
      - azure-devops-extension-api.GalleryRestClient.generateKey
      - azure-devops-extension-api.GalleryRestClient.getAcquisitionOptions
      - azure-devops-extension-api.GalleryRestClient.getAsset
      - azure-devops-extension-api.GalleryRestClient.getAssetAuthenticated
      - azure-devops-extension-api.GalleryRestClient.getAssetByName
      - >-
        azure-devops-extension-api.GalleryRestClient.getAssetFromEditExtensionDraft
      - >-
        azure-devops-extension-api.GalleryRestClient.getAssetFromNewExtensionDraft
      - azure-devops-extension-api.GalleryRestClient.getAssetWithToken
      - azure-devops-extension-api.GalleryRestClient.getCategories
      - azure-devops-extension-api.GalleryRestClient.getCategoryDetails
      - azure-devops-extension-api.GalleryRestClient.getCategoryTree
      - azure-devops-extension-api.GalleryRestClient.getCertificate
      - azure-devops-extension-api.GalleryRestClient.getContentVerificationLog
      - azure-devops-extension-api.GalleryRestClient.getExtension
      - azure-devops-extension-api.GalleryRestClient.getExtensionById
      - azure-devops-extension-api.GalleryRestClient.getExtensionDailyStats
      - >-
        azure-devops-extension-api.GalleryRestClient.getExtensionDailyStatsAnonymous
      - azure-devops-extension-api.GalleryRestClient.getExtensionEvents
      - azure-devops-extension-api.GalleryRestClient.getExtensionReports
      - azure-devops-extension-api.GalleryRestClient.getGalleryUserSettings
      - azure-devops-extension-api.GalleryRestClient.getPackage
      - azure-devops-extension-api.GalleryRestClient.getPublisher
      - azure-devops-extension-api.GalleryRestClient.getPublisherAsset
      - azure-devops-extension-api.GalleryRestClient.getQuestions
      - azure-devops-extension-api.GalleryRestClient.getReviews
      - azure-devops-extension-api.GalleryRestClient.getReviewsSummary
      - azure-devops-extension-api.GalleryRestClient.getRootCategories
      - azure-devops-extension-api.GalleryRestClient.getSigningKey
      - azure-devops-extension-api.GalleryRestClient.getVerificationLog
      - azure-devops-extension-api.GalleryRestClient.incrementExtensionDailyStat
      - >-
        azure-devops-extension-api.GalleryRestClient.performEditExtensionDraftOperation
      - >-
        azure-devops-extension-api.GalleryRestClient.performNewExtensionDraftOperation
      - azure-devops-extension-api.GalleryRestClient.publishExtensionEvents
      - >-
        azure-devops-extension-api.GalleryRestClient.queryAssociatedAzurePublisher
      - azure-devops-extension-api.GalleryRestClient.queryExtensions
      - azure-devops-extension-api.GalleryRestClient.queryPublishers
      - azure-devops-extension-api.GalleryRestClient.reportQuestion
      - azure-devops-extension-api.GalleryRestClient.requestAcquisition
      - azure-devops-extension-api.GalleryRestClient.RESOURCE_AREA_ID
      - azure-devops-extension-api.GalleryRestClient.sendNotifications
      - azure-devops-extension-api.GalleryRestClient.setGalleryUserSettings
      - azure-devops-extension-api.GalleryRestClient.shareExtension
      - azure-devops-extension-api.GalleryRestClient.shareExtensionById
      - azure-devops-extension-api.GalleryRestClient.shareExtensionWithHost
      - azure-devops-extension-api.GalleryRestClient.unshareExtension
      - azure-devops-extension-api.GalleryRestClient.unshareExtensionById
      - azure-devops-extension-api.GalleryRestClient.unshareExtensionWithHost
      - azure-devops-extension-api.GalleryRestClient.updateExtension
      - azure-devops-extension-api.GalleryRestClient.updateExtensionById
      - azure-devops-extension-api.GalleryRestClient.updateExtensionProperties
      - azure-devops-extension-api.GalleryRestClient.updateExtensionStatistics
      - >-
        azure-devops-extension-api.GalleryRestClient.updatePayloadInDraftForEditExtension
      - >-
        azure-devops-extension-api.GalleryRestClient.updatePayloadInDraftForNewExtension
      - azure-devops-extension-api.GalleryRestClient.updatePublisher
      - azure-devops-extension-api.GalleryRestClient.updatePublisherAsset
      - azure-devops-extension-api.GalleryRestClient.updateQuestion
      - azure-devops-extension-api.GalleryRestClient.updateResponse
      - azure-devops-extension-api.GalleryRestClient.updateReview
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.addAssetForEditExtensionDraft
    name: 'addAssetForEditExtensionDraft(string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addAssetForEditExtensionDraft(content: string, publisherName:
        string, extensionName: string, draftId: string, assetType: string)
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraftAsset>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.addAssetForNewExtensionDraft
    name: 'addAssetForNewExtensionDraft(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addAssetForNewExtensionDraft(content: string, publisherName:
        string, draftId: string, assetType: string)
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraftAsset>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.associateAzurePublisher
    name: 'associateAzurePublisher(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function associateAzurePublisher(publisherName: string,
        azurePublisherId: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: azurePublisherId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.AzurePublisher>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createCategory
    name: createCategory(ExtensionCategory)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createCategory(category: ExtensionCategory)'
      parameters:
        - id: category
          type:
            - azure-devops-extension-api.ExtensionCategory
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionCategory>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createDraftForEditExtension
    name: 'createDraftForEditExtension(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDraftForEditExtension(publisherName: string,
        extensionName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraft>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createDraftForNewExtension
    name: 'createDraftForNewExtension(any, string, String, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDraftForNewExtension(content: any, publisherName: string,
        product: String, fileName?: String)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: '-'
        - id: product
          type:
            - String
          description: Header to pass the product type of the payload file
        - id: fileName
          type:
            - String
          description: |
            Header to pass the filename of the uploaded data
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraft>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createExtension
    name: createExtension(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createExtension(content: any)'
      parameters:
        - id: content
          type:
            - any
          description: |
            Content to upload
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createExtensionWithPublisher
    name: 'createExtensionWithPublisher(any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createExtensionWithPublisher(content: any, publisherName:
        string)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createPublisher
    name: createPublisher(Publisher)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createPublisher(publisher: Publisher)'
      parameters:
        - id: publisher
          type:
            - azure-devops-extension-api.Publisher
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.Publisher>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createQuestion
    name: 'createQuestion(Question, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new question for an extension.
    syntax:
      content: >-
        function createQuestion(question: Question, publisherName: string,
        extensionName: string)
      parameters:
        - id: question
          type:
            - azure-devops-extension-api.Question
          description: Question to be created for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: |
            Name of the extension.
      return:
        type:
          - Promise<azure-devops-extension-api.Question>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createResponse
    name: 'createResponse(Response, string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new response for a given question for an extension.
    syntax:
      content: >-
        function createResponse(response: Response, publisherName: string,
        extensionName: string, questionId: number)
      parameters:
        - id: response
          type:
            - azure-devops-extension-api.Response
          description: Response to be created for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: >
            Identifier of the question for which response is to be created for
            the extension.
      return:
        type:
          - Promise<azure-devops-extension-api.Response>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.createReview
    name: 'createReview(Review, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new review for an extension
    syntax:
      content: 'function createReview(review: Review, pubName: string, extName: string)'
      parameters:
        - id: review
          type:
            - azure-devops-extension-api.Review
          description: Review to be created for the extension
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extName
          type:
            - string
          description: |
            Name of the extension
      return:
        type:
          - Promise<azure-devops-extension-api.Review>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deleteExtension
    name: 'deleteExtension(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteExtension(publisherName: string, extensionName: string,
        version?: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deleteExtensionById
    name: 'deleteExtensionById(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteExtensionById(extensionId: string, version?: string)'
      parameters:
        - id: extensionId
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deletePublisher
    name: deletePublisher(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deletePublisher(publisherName: string)'
      parameters:
        - id: publisherName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deletePublisherAsset
    name: 'deletePublisherAsset(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete publisher asset like logo
    syntax:
      content: 'function deletePublisherAsset(publisherName: string, assetType?: string)'
      parameters:
        - id: publisherName
          type:
            - string
          description: Internal name of the publisher
        - id: assetType
          type:
            - string
          description: |
            Type of asset. Default value is 'logo'.
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deleteQuestion
    name: 'deleteQuestion(string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing question and all its associated responses for an
      extension. (soft delete)
    syntax:
      content: >-
        function deleteQuestion(publisherName: string, extensionName: string,
        questionId: number)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: |
            Identifier of the question to be deleted for the extension.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deleteResponse
    name: 'deleteResponse(string, string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a response for an extension. (soft delete)
    syntax:
      content: >-
        function deleteResponse(publisherName: string, extensionName: string,
        questionId: number, responseId: number)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifies the question whose response is to be deleted.
        - id: responseId
          type:
            - number
          description: |
            Identifies the response to be deleted.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.deleteReview
    name: 'deleteReview(string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a review
    syntax:
      content: >-
        function deleteReview(pubName: string, extName: string, reviewId:
        number)
      parameters:
        - id: pubName
          type:
            - string
          description: Name of the pubilsher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: reviewId
          type:
            - number
          description: |
            Id of the review which needs to be updated
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.extensionValidator
    name: extensionValidator(AzureRestApiRequestModel)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function extensionValidator(azureRestApiRequestModel:
        AzureRestApiRequestModel)
      parameters:
        - id: azureRestApiRequestModel
          type:
            - azure-devops-extension-api.AzureRestApiRequestModel
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.constructor
    name: GalleryRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new GalleryRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.generateKey
    name: 'generateKey(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateKey(keyType: string, expireCurrentSeconds?: number)'
      parameters:
        - id: keyType
          type:
            - string
          description: '-'
        - id: expireCurrentSeconds
          type:
            - number
          description: |
            -
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getAcquisitionOptions
    name: 'getAcquisitionOptions(string, string, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAcquisitionOptions(itemId: string, installationTarget:
        string, testCommerce?: boolean, isFreeOrTrialInstall?: boolean)
      parameters:
        - id: itemId
          type:
            - string
          description: '-'
        - id: installationTarget
          type:
            - string
          description: '-'
        - id: testCommerce
          type:
            - boolean
          description: '-'
          optional: true
        - id: isFreeOrTrialInstall
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.AcquisitionOptions>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getAsset
    name: 'getAsset(string, string, string, string, boolean, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAsset(extensionId: string, version: string, assetType:
        string, accountToken?: string, acceptDefault?: boolean,
        accountTokenHeader?: String)
      parameters:
        - id: extensionId
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: '-'
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getAssetAuthenticated
    name: 'getAssetAuthenticated(string, string, string, string, string, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAssetAuthenticated(publisherName: string, extensionName:
        string, version: string, assetType: string, accountToken?: string,
        accountTokenHeader?: String)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: '-'
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getAssetByName
    name: 'getAssetByName(string, string, string, string, string, boolean, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAssetByName(publisherName: string, extensionName: string,
        version: string, assetType: string, accountToken?: string,
        acceptDefault?: boolean, accountTokenHeader?: String)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: '-'
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.GalleryRestClient.getAssetFromEditExtensionDraft
    name: 'getAssetFromEditExtensionDraft(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAssetFromEditExtensionDraft(publisherName: string, draftId:
        string, assetType: string, extensionName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getAssetFromNewExtensionDraft
    name: 'getAssetFromNewExtensionDraft(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAssetFromNewExtensionDraft(publisherName: string, draftId:
        string, assetType: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getAssetWithToken
    name: >-
      getAssetWithToken(string, string, string, string, string, string, boolean,
      String)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAssetWithToken(publisherName: string, extensionName: string,
        version: string, assetType: string, assetToken?: string, accountToken?:
        string, acceptDefault?: boolean, accountTokenHeader?: String)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
        - id: assetType
          type:
            - string
          description: '-'
        - id: assetToken
          type:
            - string
          description: '-'
          optional: true
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getCategories
    name: getCategories(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCategories(languages?: string)'
      parameters:
        - id: languages
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getCategoryDetails
    name: 'getCategoryDetails(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCategoryDetails(categoryName: string, languages?: string,
        product?: string)
      parameters:
        - id: categoryName
          type:
            - string
          description: '-'
        - id: languages
          type:
            - string
          description: '-'
          optional: true
        - id: product
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.CategoriesResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getCategoryTree
    name: 'getCategoryTree(string, string, number, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCategoryTree(product: string, categoryId: string, lcid?:
        number, source?: string, productVersion?: string, skus?: string,
        subSkus?: string)
      parameters:
        - id: product
          type:
            - string
          description: '-'
        - id: categoryId
          type:
            - string
          description: '-'
        - id: lcid
          type:
            - number
          description: '-'
          optional: true
        - id: source
          type:
            - string
          description: '-'
          optional: true
        - id: productVersion
          type:
            - string
          description: '-'
          optional: true
        - id: skus
          type:
            - string
          description: '-'
          optional: true
        - id: subSkus
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ProductCategory>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getCertificate
    name: 'getCertificate(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificate(publisherName: string, extensionName: string,
        version?: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getContentVerificationLog
    name: 'getContentVerificationLog(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getContentVerificationLog(publisherName: string, extensionName:
        string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getExtension
    name: 'getExtension(string, string, string, ExtensionQueryFlags, string, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getExtension(publisherName: string, extensionName: string,
        version?: string, flags?: ExtensionQueryFlags, accountToken?: string,
        accountTokenHeader?: String)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
          optional: true
        - id: flags
          type:
            - azure-devops-extension-api.ExtensionQueryFlags
          description: '-'
          optional: true
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getExtensionById
    name: 'getExtensionById(string, string, ExtensionQueryFlags)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getExtensionById(extensionId: string, version?: string, flags?:
        ExtensionQueryFlags)
      parameters:
        - id: extensionId
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
          optional: true
        - id: flags
          type:
            - azure-devops-extension-api.ExtensionQueryFlags
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getExtensionDailyStats
    name: >-
      getExtensionDailyStats(string, string, number,
      Gallery.ExtensionStatsAggregateType, Date)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getExtensionDailyStats(publisherName: string, extensionName:
        string, days?: number, aggregate?: Gallery.ExtensionStatsAggregateType,
        afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: days
          type:
            - number
          description: '-'
          optional: true
        - id: aggregate
          type:
            - Gallery.ExtensionStatsAggregateType
          description: '-'
          optional: true
        - id: afterDate
          type:
            - Date
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDailyStats>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.GalleryRestClient.getExtensionDailyStatsAnonymous
    name: 'getExtensionDailyStatsAnonymous(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This route/location id only supports HTTP POST anonymously, so that the
      page view daily stat can be incremented from Marketplace client. Trying to
      call GET on this route should result in an exception. Without this
      explicit implementation, calling GET on this public route invokes the
      above GET implementation GetExtensionDailyStats.
    syntax:
      content: >-
        function getExtensionDailyStatsAnonymous(publisherName: string,
        extensionName: string, version: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: version
          type:
            - string
          description: |
            Version of the extension
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDailyStats>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getExtensionEvents
    name: 'getExtensionEvents(string, string, number, Date, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get install/uninstall events of an extension. If both count and afterDate
      parameters are specified, count takes precedence.
    syntax:
      content: >-
        function getExtensionEvents(publisherName: string, extensionName:
        string, count?: number, afterDate?: Date, include?: string,
        includeProperty?: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: count
          type:
            - number
          description: 'Count of events to fetch, applies to each event type.'
          optional: true
        - id: afterDate
          type:
            - Date
          description: Fetch events that occurred on or after this date
          optional: true
        - id: include
          type:
            - string
          description: >-
            Filter options. Supported values: install, uninstall, review,
            acquisition, sales. Default is to fetch all types of events
          optional: true
        - id: includeProperty
          type:
            - string
          description: >
            Event properties to include. Currently only 'lastContactDetails' is
            supported for uninstall events
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionEvents>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getExtensionReports
    name: 'getExtensionReports(string, string, number, number, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns extension reports
    syntax:
      content: >-
        function getExtensionReports(publisherName: string, extensionName:
        string, days?: number, count?: number, afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: days
          type:
            - number
          description: >-
            Last n days report. If afterDate and days are specified, days will
            take priority
          optional: true
        - id: count
          type:
            - number
          description: Number of events to be returned
          optional: true
        - id: afterDate
          type:
            - Date
          description: |
            Use if you want to fetch events newer than the specified date
          optional: true
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getGalleryUserSettings
    name: 'getGalleryUserSettings(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all setting entries for the given user/all-users scope
    syntax:
      content: 'function getGalleryUserSettings(userScope: string, key?: string)'
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
        - id: key
          type:
            - string
          description: |
            Optional key under which to filter all the entries
          optional: true
      return:
        type:
          - 'Promise<[key: string]: any>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getPackage
    name: 'getPackage(string, string, string, string, boolean, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: This endpoint gets hit when you download a VSTS extension from the Web UI
    syntax:
      content: >-
        function getPackage(publisherName: string, extensionName: string,
        version: string, accountToken?: string, acceptDefault?: boolean,
        accountTokenHeader?: String)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: '-'
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getPublisher
    name: 'getPublisher(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPublisher(publisherName: string, flags?: number)'
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: flags
          type:
            - number
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Publisher>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getPublisherAsset
    name: 'getPublisherAsset(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get publisher asset like logo as a stream
    syntax:
      content: 'function getPublisherAsset(publisherName: string, assetType?: string)'
      parameters:
        - id: publisherName
          type:
            - string
          description: Internal name of the publisher
        - id: assetType
          type:
            - string
          description: |
            Type of asset. Default value is 'logo'.
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getQuestions
    name: 'getQuestions(string, string, number, number, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of questions with their responses associated with an
      extension.
    syntax:
      content: >-
        function getQuestions(publisherName: string, extensionName: string,
        count?: number, page?: number, afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: count
          type:
            - number
          description: Number of questions to retrieve (defaults to 10).
          optional: true
        - id: page
          type:
            - number
          description: Page number from which set of questions are to be retrieved.
          optional: true
        - id: afterDate
          type:
            - Date
          description: >
            If provided, results questions are returned which were posted after
            this date
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.QuestionsResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getReviews
    name: 'getReviews(string, string, number, ReviewFilterOptions, Date, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of reviews associated with an extension
    syntax:
      content: >-
        function getReviews(publisherName: string, extensionName: string,
        count?: number, filterOptions?: ReviewFilterOptions, beforeDate?: Date,
        afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: count
          type:
            - number
          description: Number of reviews to retrieve (defaults to 5)
          optional: true
        - id: filterOptions
          type:
            - azure-devops-extension-api.ReviewFilterOptions
          description: 'FilterOptions to filter out empty reviews etcetera, defaults to none'
          optional: true
        - id: beforeDate
          type:
            - Date
          description: >-
            Use if you want to fetch reviews older than the specified date,
            defaults to null
          optional: true
        - id: afterDate
          type:
            - Date
          description: >
            Use if you want to fetch reviews newer than the specified date,
            defaults to null
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ReviewsResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getReviewsSummary
    name: 'getReviewsSummary(string, string, Date, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a summary of the reviews
    syntax:
      content: >-
        function getReviewsSummary(pubName: string, extName: string,
        beforeDate?: Date, afterDate?: Date)
      parameters:
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: beforeDate
          type:
            - Date
          description: >-
            Use if you want to fetch summary of reviews older than the specified
            date, defaults to null
          optional: true
        - id: afterDate
          type:
            - Date
          description: >
            Use if you want to fetch summary of reviews newer than the specified
            date, defaults to null
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ReviewSummary>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getRootCategories
    name: 'getRootCategories(string, number, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getRootCategories(product: string, lcid?: number, source?:
        string, productVersion?: string, skus?: string, subSkus?: string)
      parameters:
        - id: product
          type:
            - string
          description: '-'
        - id: lcid
          type:
            - number
          description: '-'
          optional: true
        - id: source
          type:
            - string
          description: '-'
          optional: true
        - id: productVersion
          type:
            - string
          description: '-'
          optional: true
        - id: skus
          type:
            - string
          description: '-'
          optional: true
        - id: subSkus
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ProductCategoriesResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getSigningKey
    name: getSigningKey(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSigningKey(keyType: string)'
      parameters:
        - id: keyType
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.getVerificationLog
    name: 'getVerificationLog(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getVerificationLog(publisherName: string, extensionName:
        string, version: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: version
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.incrementExtensionDailyStat
    name: 'incrementExtensionDailyStat(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Increments a daily statistic associated with the extension
    syntax:
      content: >-
        function incrementExtensionDailyStat(publisherName: string,
        extensionName: string, version: string, statType: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: version
          type:
            - string
          description: Version of the extension
        - id: statType
          type:
            - string
          description: |
            Type of stat to increment
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.GalleryRestClient.performEditExtensionDraftOperation
    name: >-
      performEditExtensionDraftOperation(ExtensionDraftPatch, string, string,
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function performEditExtensionDraftOperation(draftPatch:
        ExtensionDraftPatch, publisherName: string, extensionName: string,
        draftId: string)
      parameters:
        - id: draftPatch
          type:
            - azure-devops-extension-api.ExtensionDraftPatch
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraft>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.GalleryRestClient.performNewExtensionDraftOperation
    name: 'performNewExtensionDraftOperation(ExtensionDraftPatch, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function performNewExtensionDraftOperation(draftPatch:
        ExtensionDraftPatch, publisherName: string, draftId: string)
      parameters:
        - id: draftPatch
          type:
            - azure-devops-extension-api.ExtensionDraftPatch
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraft>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.publishExtensionEvents
    name: 'publishExtensionEvents(ExtensionEvents[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      API endpoint to publish extension install/uninstall events. This is meant
      to be invoked by EMS only for sending us data related to install/uninstall
      of an extension.
    syntax:
      content: 'function publishExtensionEvents(extensionEvents: ExtensionEvents[])'
      parameters:
        - id: extensionEvents
          type:
            - 'azure-devops-extension-api.ExtensionEvents[]'
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.queryAssociatedAzurePublisher
    name: queryAssociatedAzurePublisher(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function queryAssociatedAzurePublisher(publisherName: string)'
      parameters:
        - id: publisherName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.AzurePublisher>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.queryExtensions
    name: 'queryExtensions(ExtensionQuery, string, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function queryExtensions(extensionQuery: ExtensionQuery, accountToken?:
        string, accountTokenHeader?: String)
      parameters:
        - id: extensionQuery
          type:
            - azure-devops-extension-api.ExtensionQuery
          description: '-'
        - id: accountToken
          type:
            - string
          description: '-'
          optional: true
        - id: accountTokenHeader
          type:
            - String
          description: |
            Header to pass the account token
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionQueryResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.queryPublishers
    name: queryPublishers(PublisherQuery)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function queryPublishers(publisherQuery: PublisherQuery)'
      parameters:
        - id: publisherQuery
          type:
            - azure-devops-extension-api.PublisherQuery
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.PublisherQueryResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.reportQuestion
    name: 'reportQuestion(Concern, string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Flags a concern with an existing question for an extension.
    syntax:
      content: >-
        function reportQuestion(concern: Concern, pubName: string, extName:
        string, questionId: number)
      parameters:
        - id: concern
          type:
            - azure-devops-extension-api.Concern
          description: User reported concern with a question for the extension.
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: |
            Identifier of the question to be updated for the extension.
      return:
        type:
          - Promise<azure-devops-extension-api.Concern>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.requestAcquisition
    name: requestAcquisition(ExtensionAcquisitionRequest)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function requestAcquisition(acquisitionRequest:
        ExtensionAcquisitionRequest)
      parameters:
        - id: acquisitionRequest
          type:
            - azure-devops-extension-api.ExtensionAcquisitionRequest
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionAcquisitionRequest>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.RESOURCE_AREA_ID
    name: RESOURCE_AREA_ID
    fullName: RESOURCE_AREA_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.sendNotifications
    name: sendNotifications(NotificationsData)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send Notification
    syntax:
      content: 'function sendNotifications(notificationData: NotificationsData)'
      parameters:
        - id: notificationData
          type:
            - azure-devops-extension-api.NotificationsData
          description: |
            Denoting the data needed to send notification
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.setGalleryUserSettings
    name: 'setGalleryUserSettings([key: string]: any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Set all setting entries for the given user/all-users scope
    syntax:
      content: >-
        function setGalleryUserSettings(entries: [key: string]: any, userScope:
        string)
      parameters:
        - id: entries
          type:
            - '[key: string]: any'
          description: A key-value pair of all settings that need to be set
        - id: userScope
          type:
            - string
          description: >
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.shareExtension
    name: 'shareExtension(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function shareExtension(publisherName: string, extensionName: string,
        accountName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: accountName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.shareExtensionById
    name: 'shareExtensionById(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function shareExtensionById(extensionId: string, accountName: string)'
      parameters:
        - id: extensionId
          type:
            - string
          description: '-'
        - id: accountName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.shareExtensionWithHost
    name: 'shareExtensionWithHost(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function shareExtensionWithHost(publisherName: string, extensionName:
        string, hostType: string, hostName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: hostType
          type:
            - string
          description: '-'
        - id: hostName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.unshareExtension
    name: 'unshareExtension(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unshareExtension(publisherName: string, extensionName: string,
        accountName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: accountName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.unshareExtensionById
    name: 'unshareExtensionById(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshareExtensionById(extensionId: string, accountName: string)'
      parameters:
        - id: extensionId
          type:
            - string
          description: '-'
        - id: accountName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.unshareExtensionWithHost
    name: 'unshareExtensionWithHost(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unshareExtensionWithHost(publisherName: string, extensionName:
        string, hostType: string, hostName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: hostType
          type:
            - string
          description: '-'
        - id: hostName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateExtension
    name: 'updateExtension(any, string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: REST endpoint to update an extension.
    syntax:
      content: >-
        function updateExtension(content: any, publisherName: string,
        extensionName: string, bypassScopeCheck?: boolean)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: bypassScopeCheck
          type:
            - boolean
          description: >
            This parameter decides if the scope change check needs to be invoked
            or not
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateExtensionById
    name: updateExtensionById(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateExtensionById(extensionId: string)'
      parameters:
        - id: extensionId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateExtensionProperties
    name: 'updateExtensionProperties(string, string, PublishedExtensionFlags)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateExtensionProperties(publisherName: string, extensionName:
        string, flags: PublishedExtensionFlags)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: flags
          type:
            - azure-devops-extension-api.PublishedExtensionFlags
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.PublishedExtension>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateExtensionStatistics
    name: 'updateExtensionStatistics(ExtensionStatisticUpdate, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateExtensionStatistics(extensionStatisticsUpdate:
        ExtensionStatisticUpdate, publisherName: string, extensionName: string)
      parameters:
        - id: extensionStatisticsUpdate
          type:
            - azure-devops-extension-api.ExtensionStatisticUpdate
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.GalleryRestClient.updatePayloadInDraftForEditExtension
    name: 'updatePayloadInDraftForEditExtension(any, string, string, string, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePayloadInDraftForEditExtension(content: any,
        publisherName: string, extensionName: string, draftId: string,
        fileName?: String)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: '-'
        - id: fileName
          type:
            - String
          description: |
            Header to pass the filename of the uploaded data
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraft>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.GalleryRestClient.updatePayloadInDraftForNewExtension
    name: 'updatePayloadInDraftForNewExtension(any, string, string, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePayloadInDraftForNewExtension(content: any,
        publisherName: string, draftId: string, fileName?: String)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: '-'
        - id: draftId
          type:
            - string
          description: '-'
        - id: fileName
          type:
            - String
          description: |
            Header to pass the filename of the uploaded data
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionDraft>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updatePublisher
    name: 'updatePublisher(Publisher, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updatePublisher(publisher: Publisher, publisherName: string)'
      parameters:
        - id: publisher
          type:
            - azure-devops-extension-api.Publisher
          description: '-'
        - id: publisherName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.Publisher>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updatePublisherAsset
    name: 'updatePublisherAsset(any, string, string, String)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update publisher asset like logo. It accepts asset file as an octet stream
      and file name is passed in header values.
    syntax:
      content: >-
        function updatePublisherAsset(content: any, publisherName: string,
        assetType?: string, fileName?: String)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: Internal name of the publisher
        - id: assetType
          type:
            - string
          description: Type of asset. Default value is 'logo'.
          optional: true
        - id: fileName
          type:
            - String
          description: |
            Header to pass the filename of the uploaded data
          optional: true
      return:
        type:
          - 'Promise<[key: string]: string>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateQuestion
    name: 'updateQuestion(Question, string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing question for an extension.
    syntax:
      content: >-
        function updateQuestion(question: Question, publisherName: string,
        extensionName: string, questionId: number)
      parameters:
        - id: question
          type:
            - azure-devops-extension-api.Question
          description: Updated question to be set for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: |
            Identifier of the question to be updated for the extension.
      return:
        type:
          - Promise<azure-devops-extension-api.Question>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateResponse
    name: 'updateResponse(Response, string, string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing response for a given question for an extension.
    syntax:
      content: >-
        function updateResponse(response: Response, publisherName: string,
        extensionName: string, questionId: number, responseId: number)
      parameters:
        - id: response
          type:
            - azure-devops-extension-api.Response
          description: Updated response to be set for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: >-
            Identifier of the question for which response is to be updated for
            the extension.
        - id: responseId
          type:
            - number
          description: |
            Identifier of the response which has to be updated.
      return:
        type:
          - Promise<azure-devops-extension-api.Response>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.GalleryRestClient.updateReview
    name: 'updateReview(ReviewPatch, string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates or Flags a review
    syntax:
      content: >-
        function updateReview(reviewPatch: ReviewPatch, pubName: string,
        extName: string, reviewId: number)
      parameters:
        - id: reviewPatch
          type:
            - azure-devops-extension-api.ReviewPatch
          description: >-
            ReviewPatch object which contains the changes to be applied to the
            review
        - id: pubName
          type:
            - string
          description: Name of the pubilsher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: reviewId
          type:
            - number
          description: |
            Id of the review which needs to be updated
      return:
        type:
          - Promise<azure-devops-extension-api.ReviewPatch>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: Promise<azure-devops-extension-api.ExtensionDraftAsset>
    name: ExtensionDraftAsset>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionDraftAsset
        fullName: ExtensionDraftAsset
        uid: azure-devops-extension-api.ExtensionDraftAsset
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.AzurePublisher>
    name: AzurePublisher>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AzurePublisher
        fullName: AzurePublisher
        uid: azure-devops-extension-api.AzurePublisher
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ExtensionCategory
    name: ExtensionCategory
    spec.typeScript:
      - name: ExtensionCategory
        fullName: ExtensionCategory
        uid: azure-devops-extension-api.ExtensionCategory
  - uid: Promise<azure-devops-extension-api.ExtensionCategory>
    name: ExtensionCategory>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionCategory
        fullName: ExtensionCategory
        uid: azure-devops-extension-api.ExtensionCategory
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ExtensionDraft>
    name: ExtensionDraft>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionDraft
        fullName: ExtensionDraft
        uid: azure-devops-extension-api.ExtensionDraft
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.PublishedExtension>
    name: PublishedExtension>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PublishedExtension
        fullName: PublishedExtension
        uid: azure-devops-extension-api.PublishedExtension
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Publisher
    name: Publisher
    spec.typeScript:
      - name: Publisher
        fullName: Publisher
        uid: azure-devops-extension-api.Publisher
  - uid: Promise<azure-devops-extension-api.Publisher>
    name: Publisher>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Publisher
        fullName: Publisher
        uid: azure-devops-extension-api.Publisher
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Question
    name: Question
    spec.typeScript:
      - name: Question
        fullName: Question
        uid: azure-devops-extension-api.Question
  - uid: Promise<azure-devops-extension-api.Question>
    name: Question>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Question
        fullName: Question
        uid: azure-devops-extension-api.Question
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Response
    name: Response
    spec.typeScript:
      - name: Response
        fullName: Response
        uid: azure-devops-extension-api.Response
  - uid: Promise<azure-devops-extension-api.Response>
    name: Response>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: azure-devops-extension-api.Response
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Review
    name: Review
    spec.typeScript:
      - name: Review
        fullName: Review
        uid: azure-devops-extension-api.Review
  - uid: Promise<azure-devops-extension-api.Review>
    name: Review>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Review
        fullName: Review
        uid: azure-devops-extension-api.Review
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.AzureRestApiRequestModel
    name: AzureRestApiRequestModel
    spec.typeScript:
      - name: AzureRestApiRequestModel
        fullName: AzureRestApiRequestModel
        uid: azure-devops-extension-api.AzureRestApiRequestModel
  - uid: Promise<azure-devops-extension-api.AcquisitionOptions>
    name: AcquisitionOptions>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AcquisitionOptions
        fullName: AcquisitionOptions
        uid: azure-devops-extension-api.AcquisitionOptions
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.CategoriesResult>
    name: CategoriesResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CategoriesResult
        fullName: CategoriesResult
        uid: azure-devops-extension-api.CategoriesResult
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ProductCategory>
    name: ProductCategory>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ProductCategory
        fullName: ProductCategory
        uid: azure-devops-extension-api.ProductCategory
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ExtensionQueryFlags
    name: ExtensionQueryFlags
    spec.typeScript:
      - name: ExtensionQueryFlags
        fullName: ExtensionQueryFlags
        uid: azure-devops-extension-api.ExtensionQueryFlags
  - uid: Promise<azure-devops-extension-api.ExtensionDailyStats>
    name: ExtensionDailyStats>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionDailyStats
        fullName: ExtensionDailyStats
        uid: azure-devops-extension-api.ExtensionDailyStats
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ExtensionEvents>
    name: ExtensionEvents>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionEvents
        fullName: ExtensionEvents
        uid: azure-devops-extension-api.ExtensionEvents
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.QuestionsResult>
    name: QuestionsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QuestionsResult
        fullName: QuestionsResult
        uid: azure-devops-extension-api.QuestionsResult
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ReviewFilterOptions
    name: ReviewFilterOptions
    spec.typeScript:
      - name: ReviewFilterOptions
        fullName: ReviewFilterOptions
        uid: azure-devops-extension-api.ReviewFilterOptions
  - uid: Promise<azure-devops-extension-api.ReviewsResult>
    name: ReviewsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReviewsResult
        fullName: ReviewsResult
        uid: azure-devops-extension-api.ReviewsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ReviewSummary>
    name: ReviewSummary>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReviewSummary
        fullName: ReviewSummary
        uid: azure-devops-extension-api.ReviewSummary
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ProductCategoriesResult>
    name: ProductCategoriesResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ProductCategoriesResult
        fullName: ProductCategoriesResult
        uid: azure-devops-extension-api.ProductCategoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ExtensionDraftPatch
    name: ExtensionDraftPatch
    spec.typeScript:
      - name: ExtensionDraftPatch
        fullName: ExtensionDraftPatch
        uid: azure-devops-extension-api.ExtensionDraftPatch
  - uid: 'azure-devops-extension-api.ExtensionEvents[]'
    name: 'ExtensionEvents[]'
    spec.typeScript:
      - name: ExtensionEvents
        fullName: ExtensionEvents
        uid: azure-devops-extension-api.ExtensionEvents
      - name: '[]'
        fullName: '[]'
  - uid: azure-devops-extension-api.ExtensionQuery
    name: ExtensionQuery
    spec.typeScript:
      - name: ExtensionQuery
        fullName: ExtensionQuery
        uid: azure-devops-extension-api.ExtensionQuery
  - uid: Promise<azure-devops-extension-api.ExtensionQueryResult>
    name: ExtensionQueryResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionQueryResult
        fullName: ExtensionQueryResult
        uid: azure-devops-extension-api.ExtensionQueryResult
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.PublisherQuery
    name: PublisherQuery
    spec.typeScript:
      - name: PublisherQuery
        fullName: PublisherQuery
        uid: azure-devops-extension-api.PublisherQuery
  - uid: Promise<azure-devops-extension-api.PublisherQueryResult>
    name: PublisherQueryResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PublisherQueryResult
        fullName: PublisherQueryResult
        uid: azure-devops-extension-api.PublisherQueryResult
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Concern
    name: Concern
    spec.typeScript:
      - name: Concern
        fullName: Concern
        uid: azure-devops-extension-api.Concern
  - uid: Promise<azure-devops-extension-api.Concern>
    name: Concern>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Concern
        fullName: Concern
        uid: azure-devops-extension-api.Concern
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ExtensionAcquisitionRequest
    name: ExtensionAcquisitionRequest
    spec.typeScript:
      - name: ExtensionAcquisitionRequest
        fullName: ExtensionAcquisitionRequest
        uid: azure-devops-extension-api.ExtensionAcquisitionRequest
  - uid: Promise<azure-devops-extension-api.ExtensionAcquisitionRequest>
    name: ExtensionAcquisitionRequest>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionAcquisitionRequest
        fullName: ExtensionAcquisitionRequest
        uid: azure-devops-extension-api.ExtensionAcquisitionRequest
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.NotificationsData
    name: NotificationsData
    spec.typeScript:
      - name: NotificationsData
        fullName: NotificationsData
        uid: azure-devops-extension-api.NotificationsData
  - uid: azure-devops-extension-api.PublishedExtensionFlags
    name: PublishedExtensionFlags
    spec.typeScript:
      - name: PublishedExtensionFlags
        fullName: PublishedExtensionFlags
        uid: azure-devops-extension-api.PublishedExtensionFlags
  - uid: azure-devops-extension-api.ExtensionStatisticUpdate
    name: ExtensionStatisticUpdate
    spec.typeScript:
      - name: ExtensionStatisticUpdate
        fullName: ExtensionStatisticUpdate
        uid: azure-devops-extension-api.ExtensionStatisticUpdate
  - uid: azure-devops-extension-api.ReviewPatch
    name: ReviewPatch
    spec.typeScript:
      - name: ReviewPatch
        fullName: ReviewPatch
        uid: azure-devops-extension-api.ReviewPatch
  - uid: Promise<azure-devops-extension-api.ReviewPatch>
    name: ReviewPatch>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReviewPatch
        fullName: ReviewPatch
        uid: azure-devops-extension-api.ReviewPatch
      - name: '>'
        fullName: '>'
