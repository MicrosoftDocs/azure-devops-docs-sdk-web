### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.ValidationItem
    name: ValidationItem
    fullName: ValidationItem
    children:
      - azure-devops-extension-api.ValidationItem.isValid
      - azure-devops-extension-api.ValidationItem.reason
      - azure-devops-extension-api.ValidationItem.type
      - azure-devops-extension-api.ValidationItem.value
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ValidationItem.isValid
    name: isValid
    fullName: isValid
    children: []
    langs:
      - typeScript
    type: property
    summary: Tells whether the current input is valid or not
    syntax:
      content: 'isValid: boolean'
      return:
        type:
          - boolean
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ValidationItem.reason
    name: reason
    fullName: reason
    children: []
    langs:
      - typeScript
    type: property
    summary: Reason for input validation failure
    syntax:
      content: 'reason: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ValidationItem.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Type of validation item
    syntax:
      content: 'type: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ValidationItem.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Value to validate. The conditional expression to validate for the input
      for "expression" type Eg:eq(variables['Build.SourceBranch'],
      'refs/heads/master');eq(value, 'refs/heads/master')
    syntax:
      content: 'value: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
