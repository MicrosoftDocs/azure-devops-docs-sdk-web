### YamlMime:TSType
name: ContributionConstraint
uid: azure-devops-extension-api.ContributionConstraint
package: azure-devops-extension-api
summary: >-
  Specifies a constraint that can be used to dynamically include/exclude a given
  contribution
fullName: ContributionConstraint
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: group
    uid: azure-devops-extension-api.ContributionConstraint.group
    package: azure-devops-extension-api
    summary: >-
      An optional property that can be specified to group constraints together.
      All constraints within a group are AND'd together (all must be evaluate to
      True in order for the contribution to be included). Different groups of
      constraints are OR'd (only one group needs to evaluate to True for the
      contribution to be included).
    fullName: group
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'group: number'
      return:
        description: ''
        type: number
  - name: id
    uid: azure-devops-extension-api.ContributionConstraint.id
    package: azure-devops-extension-api
    summary: Fully qualified identifier of a shared constraint
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
  - name: inverse
    uid: azure-devops-extension-api.ContributionConstraint.inverse
    package: azure-devops-extension-api
    summary: >-
      If true, negate the result of the filter (include the contribution if the
      applied filter returns false instead of true)
    fullName: inverse
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'inverse: boolean'
      return:
        description: ''
        type: boolean
  - name: name
    uid: azure-devops-extension-api.ContributionConstraint.name
    package: azure-devops-extension-api
    summary: Name of the IContributionFilter plugin
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
  - name: properties
    uid: azure-devops-extension-api.ContributionConstraint.properties
    package: azure-devops-extension-api
    summary: Properties that are fed to the contribution filter class
    fullName: properties
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'properties: any'
      return:
        description: ''
        type: any
  - name: relationships
    uid: azure-devops-extension-api.ContributionConstraint.relationships
    package: azure-devops-extension-api
    summary: >-
      Constraints can be optionally be applied to one or more of the
      relationships defined in the contribution. If no relationships are defined
      then all relationships are associated with the constraint. This means the
      default behaviour will eliminate the contribution from the tree completely
      if the constraint is applied.
    fullName: relationships
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'relationships: string[]'
      return:
        description: ''
        type: string[]
