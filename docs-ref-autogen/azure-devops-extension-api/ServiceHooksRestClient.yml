### YamlMime:TSType
name: ServiceHooksRestClient
uid: azure-devops-extension-api.ServiceHooksRestClient
package: azure-devops-extension-api
summary: ''
fullName: ServiceHooksRestClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ServiceHooksRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.ServiceHooksRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ServiceHooksRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
methods:
  - name: createSubscription(Subscription)
    uid: azure-devops-extension-api.ServiceHooksRestClient.createSubscription
    package: azure-devops-extension-api
    summary: Create a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSubscription(subscription: Subscription):
        Promise<Subscription>
      parameters:
        - id: subscription
          type: <xref uid="azure-devops-extension-api.Subscription" />
          description: |
            Subscription to be created.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Subscription" />&gt;
  - name: createSubscriptionsQuery(SubscriptionsQuery)
    uid: azure-devops-extension-api.ServiceHooksRestClient.createSubscriptionsQuery
    package: azure-devops-extension-api
    summary: Query for service hook subscriptions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createSubscriptionsQuery(query: SubscriptionsQuery):
        Promise<SubscriptionsQuery>
      parameters:
        - id: query
          type: <xref uid="azure-devops-extension-api.SubscriptionsQuery" />
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.SubscriptionsQuery"
          />&gt;
  - name: 'createTestNotification(Notification, boolean)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.createTestNotification
    package: azure-devops-extension-api
    summary: >-
      Sends a test notification. This is useful for verifying the configuration
      of an updated or new service hooks subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTestNotification(testNotification: Notification,
        useRealData?: boolean): Promise<Notification>
      parameters:
        - id: testNotification
          type: <xref uid="azure-devops-extension-api.Notification" />
          description: '-'
        - id: useRealData
          type: boolean
          description: |
            Only allow testing with real data in existing subscriptions.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Notification" />&gt;
  - name: deleteSubscription(string)
    uid: azure-devops-extension-api.ServiceHooksRestClient.deleteSubscription
    package: azure-devops-extension-api
    summary: Delete a specific service hooks subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteSubscription(subscriptionId: string): Promise<void>'
      parameters:
        - id: subscriptionId
          type: string
          description: |
            ID for a subscription.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'getConsumer(string, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.getConsumer
    package: azure-devops-extension-api
    summary: >-
      Get a specific consumer service. Optionally filter out consumer actions
      that do not support any event types for the specified publisher.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConsumer(consumerId: string, publisherId?: string):
        Promise<Consumer>
      parameters:
        - id: consumerId
          type: string
          description: ID for a consumer.
        - id: publisherId
          type: string
          description: |
            -
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Consumer" />&gt;
  - name: 'getConsumerAction(string, string, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.getConsumerAction
    package: azure-devops-extension-api
    summary: Get details about a specific consumer action.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getConsumerAction(consumerId: string, consumerActionId: string,
        publisherId?: string): Promise<ConsumerAction>
      parameters:
        - id: consumerId
          type: string
          description: ID for a consumer.
        - id: consumerActionId
          type: string
          description: ID for a consumerActionId.
        - id: publisherId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ConsumerAction"
          />&gt;
  - name: 'getEventType(string, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.getEventType
    package: azure-devops-extension-api
    summary: Get a specific event type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getEventType(publisherId: string, eventTypeId: string):
        Promise<EventTypeDescriptor>
      parameters:
        - id: publisherId
          type: string
          description: ID for a publisher.
        - id: eventTypeId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.EventTypeDescriptor"
          />&gt;
  - name: 'getNotification(string, number)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.getNotification
    package: azure-devops-extension-api
    summary: Get a specific notification for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNotification(subscriptionId: string, notificationId:
        number): Promise<Notification>
      parameters:
        - id: subscriptionId
          type: string
          description: ID for a subscription.
        - id: notificationId
          type: number
          description: |
            -
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Notification" />&gt;
  - name: 'getNotifications(string, number, NotificationStatus, NotificationResult)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.getNotifications
    package: azure-devops-extension-api
    summary: >-
      Get a list of notifications for a specific subscription. A notification
      includes details about the event, the request to and the response from the
      consumer service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getNotifications(subscriptionId: string, maxResults?: number,
        status?: NotificationStatus, result?: NotificationResult):
        Promise<Notification[]>
      parameters:
        - id: subscriptionId
          type: string
          description: ID for a subscription.
        - id: maxResults
          type: number
          description: Maximum number of notifications to return. Default is **100**.
        - id: status
          type: <xref uid="azure-devops-extension-api.NotificationStatus" />
          description: Get only notifications with this status.
        - id: result
          type: <xref uid="azure-devops-extension-api.NotificationResult" />
          description: |
            Get only notifications with this result type.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.Notification"
          />[]&gt;
  - name: getPublisher(string)
    uid: azure-devops-extension-api.ServiceHooksRestClient.getPublisher
    package: azure-devops-extension-api
    summary: Get a specific service hooks publisher.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getPublisher(publisherId: string): Promise<Publisher>'
      parameters:
        - id: publisherId
          type: string
          description: |
            ID for a publisher.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Publisher" />&gt;
  - name: getSubscription(string)
    uid: azure-devops-extension-api.ServiceHooksRestClient.getSubscription
    package: azure-devops-extension-api
    summary: Get a specific service hooks subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSubscription(subscriptionId: string): Promise<Subscription>'
      parameters:
        - id: subscriptionId
          type: string
          description: |
            ID for a subscription.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Subscription" />&gt;
  - name: getSubscriptionDiagnostics(string)
    uid: >-
      azure-devops-extension-api.ServiceHooksRestClient.getSubscriptionDiagnostics
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSubscriptionDiagnostics(subscriptionId: string):
        Promise<SubscriptionDiagnostics>
      parameters:
        - id: subscriptionId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.SubscriptionDiagnostics" />&gt;
  - name: 'listConsumerActions(string, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.listConsumerActions
    package: azure-devops-extension-api
    summary: Get a list of consumer actions for a specific consumer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listConsumerActions(consumerId: string, publisherId?: string):
        Promise<ConsumerAction[]>
      parameters:
        - id: consumerId
          type: string
          description: ID for a consumer.
        - id: publisherId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ConsumerAction"
          />[]&gt;
  - name: listConsumers(string)
    uid: azure-devops-extension-api.ServiceHooksRestClient.listConsumers
    package: azure-devops-extension-api
    summary: >-
      Get a list of available service hook consumer services. Optionally filter
      by consumers that support at least one event type from the specific
      publisher.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listConsumers(publisherId?: string): Promise<Consumer[]>'
      parameters:
        - id: publisherId
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Consumer" />[]&gt;'
  - name: listEventTypes(string)
    uid: azure-devops-extension-api.ServiceHooksRestClient.listEventTypes
    package: azure-devops-extension-api
    summary: Get the event types for a specific publisher.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listEventTypes(publisherId: string):
        Promise<EventTypeDescriptor[]>
      parameters:
        - id: publisherId
          type: string
          description: |
            ID for a publisher.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.EventTypeDescriptor"
          />[]&gt;
  - name: listPublishers()
    uid: azure-devops-extension-api.ServiceHooksRestClient.listPublishers
    package: azure-devops-extension-api
    summary: Get a list of publishers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listPublishers(): Promise<Publisher[]>'
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Publisher" />[]&gt;'
  - name: 'listSubscriptions(string, string, string, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.listSubscriptions
    package: azure-devops-extension-api
    summary: Get a list of subscriptions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listSubscriptions(publisherId?: string, eventType?: string,
        consumerId?: string, consumerActionId?: string): Promise<Subscription[]>
      parameters:
        - id: publisherId
          type: string
          description: ID for a subscription.
        - id: eventType
          type: string
          description: The event type to filter on (if any).
        - id: consumerId
          type: string
          description: ID for a consumer.
        - id: consumerActionId
          type: string
          description: |
            ID for a consumerActionId.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.Subscription"
          />[]&gt;
  - name: 'publishExternalEvent(string, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.publishExternalEvent
    package: azure-devops-extension-api
    summary: Publish an external event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function publishExternalEvent(publisherId: string, channelId?: string):
        Promise<PublisherEvent[]>
      parameters:
        - id: publisherId
          type: string
          description: '-'
        - id: channelId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.PublisherEvent"
          />[]&gt;
  - name: 'queryInputValues(InputValuesQuery, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.queryInputValues
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryInputValues(inputValuesQuery: InputValuesQuery,
        publisherId: string): Promise<InputValuesQuery>
      parameters:
        - id: inputValuesQuery
          type: <xref uid="azure-devops-extension-api.InputValuesQuery" />
          description: '-'
        - id: publisherId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InputValuesQuery"
          />&gt;
  - name: queryNotifications(NotificationsQuery)
    uid: azure-devops-extension-api.ServiceHooksRestClient.queryNotifications
    package: azure-devops-extension-api
    summary: >-
      Query for notifications. A notification includes details about the event,
      the request to and the response from the consumer service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryNotifications(query: NotificationsQuery):
        Promise<NotificationsQuery>
      parameters:
        - id: query
          type: <xref uid="azure-devops-extension-api.NotificationsQuery" />
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.NotificationsQuery"
          />&gt;
  - name: queryPublishers(PublishersQuery)
    uid: azure-devops-extension-api.ServiceHooksRestClient.queryPublishers
    package: azure-devops-extension-api
    summary: Query for service hook publishers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryPublishers(query: PublishersQuery):
        Promise<PublishersQuery>
      parameters:
        - id: query
          type: <xref uid="azure-devops-extension-api.PublishersQuery" />
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.PublishersQuery"
          />&gt;
  - name: 'replaceSubscription(Subscription, string)'
    uid: azure-devops-extension-api.ServiceHooksRestClient.replaceSubscription
    package: azure-devops-extension-api
    summary: >-
      Update a subscription. \<param name="subscriptionId"\>ID for a
      subscription that you wish to update.\</param\>
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function replaceSubscription(subscription: Subscription,
        subscriptionId?: string): Promise<Subscription>
      parameters:
        - id: subscription
          type: <xref uid="azure-devops-extension-api.Subscription" />
          description: '-'
        - id: subscriptionId
          type: string
          description: |
            -
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Subscription" />&gt;
  - name: >-
      updateSubscriptionDiagnostics(UpdateSubscripitonDiagnosticsParameters,
      string)
    uid: >-
      azure-devops-extension-api.ServiceHooksRestClient.updateSubscriptionDiagnostics
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSubscriptionDiagnostics(updateParameters:
        UpdateSubscripitonDiagnosticsParameters, subscriptionId: string):
        Promise<SubscriptionDiagnostics>
      parameters:
        - id: updateParameters
          type: >-
            <xref
            uid="azure-devops-extension-api.UpdateSubscripitonDiagnosticsParameters"
            />
          description: '-'
        - id: subscriptionId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.SubscriptionDiagnostics" />&gt;
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
