### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.ServiceHooksRestClient
    name: ServiceHooksRestClient
    fullName: ServiceHooksRestClient
    children:
      - azure-devops-extension-api.ServiceHooksRestClient.createSubscription
      - >-
        azure-devops-extension-api.ServiceHooksRestClient.createSubscriptionsQuery
      - azure-devops-extension-api.ServiceHooksRestClient.createTestNotification
      - azure-devops-extension-api.ServiceHooksRestClient.deleteSubscription
      - azure-devops-extension-api.ServiceHooksRestClient.getConsumer
      - azure-devops-extension-api.ServiceHooksRestClient.getConsumerAction
      - azure-devops-extension-api.ServiceHooksRestClient.getEventType
      - azure-devops-extension-api.ServiceHooksRestClient.getNotification
      - azure-devops-extension-api.ServiceHooksRestClient.getNotifications
      - azure-devops-extension-api.ServiceHooksRestClient.getPublisher
      - azure-devops-extension-api.ServiceHooksRestClient.getSubscription
      - >-
        azure-devops-extension-api.ServiceHooksRestClient.getSubscriptionDiagnostics
      - azure-devops-extension-api.ServiceHooksRestClient.listConsumerActions
      - azure-devops-extension-api.ServiceHooksRestClient.listConsumers
      - azure-devops-extension-api.ServiceHooksRestClient.listEventTypes
      - azure-devops-extension-api.ServiceHooksRestClient.listPublishers
      - azure-devops-extension-api.ServiceHooksRestClient.listSubscriptions
      - azure-devops-extension-api.ServiceHooksRestClient.publishExternalEvent
      - azure-devops-extension-api.ServiceHooksRestClient.queryInputValues
      - azure-devops-extension-api.ServiceHooksRestClient.queryNotifications
      - azure-devops-extension-api.ServiceHooksRestClient.queryPublishers
      - azure-devops-extension-api.ServiceHooksRestClient.replaceSubscription
      - azure-devops-extension-api.ServiceHooksRestClient.constructor
      - >-
        azure-devops-extension-api.ServiceHooksRestClient.updateSubscriptionDiagnostics
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.createSubscription
    name: createSubscription(Subscription)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a subscription.
    syntax:
      content: 'function createSubscription(subscription: Subscription)'
      parameters:
        - id: subscription
          type:
            - azure-devops-extension-api.Subscription
          description: |
            Subscription to be created.
      return:
        type:
          - Promise<azure-devops-extension-api.Subscription>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.createSubscriptionsQuery
    name: createSubscriptionsQuery(SubscriptionsQuery)
    children: []
    type: method
    langs:
      - typeScript
    summary: Query for service hook subscriptions.
    syntax:
      content: 'function createSubscriptionsQuery(query: SubscriptionsQuery)'
      parameters:
        - id: query
          type:
            - azure-devops-extension-api.SubscriptionsQuery
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.SubscriptionsQuery>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.createTestNotification
    name: 'createTestNotification(Notification, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sends a test notification. This is useful for verifying the configuration
      of an updated or new service hooks subscription.
    syntax:
      content: >-
        function createTestNotification(testNotification: Notification,
        useRealData?: boolean)
      parameters:
        - id: testNotification
          type:
            - azure-devops-extension-api.Notification
          description: '-'
        - id: useRealData
          type:
            - boolean
          description: |
            Only allow testing with real data in existing subscriptions.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Notification>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.deleteSubscription
    name: deleteSubscription(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a specific service hooks subscription.
    syntax:
      content: 'function deleteSubscription(subscriptionId: string)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: |
            ID for a subscription.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getConsumer
    name: 'getConsumer(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a specific consumer service. Optionally filter out consumer actions
      that do not support any event types for the specified publisher.
    syntax:
      content: 'function getConsumer(consumerId: string, publisherId?: string)'
      parameters:
        - id: consumerId
          type:
            - string
          description: ID for a consumer.
        - id: publisherId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Consumer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getConsumerAction
    name: 'getConsumerAction(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get details about a specific consumer action.
    syntax:
      content: >-
        function getConsumerAction(consumerId: string, consumerActionId: string,
        publisherId?: string)
      parameters:
        - id: consumerId
          type:
            - string
          description: ID for a consumer.
        - id: consumerActionId
          type:
            - string
          description: ID for a consumerActionId.
        - id: publisherId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ConsumerAction>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getEventType
    name: 'getEventType(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a specific event type.
    syntax:
      content: 'function getEventType(publisherId: string, eventTypeId: string)'
      parameters:
        - id: publisherId
          type:
            - string
          description: ID for a publisher.
        - id: eventTypeId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.EventTypeDescriptor>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getNotification
    name: 'getNotification(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a specific notification for a subscription.
    syntax:
      content: 'function getNotification(subscriptionId: string, notificationId: number)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: ID for a subscription.
        - id: notificationId
          type:
            - number
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.Notification>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getNotifications
    name: 'getNotifications(string, number, NotificationStatus, NotificationResult)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a list of notifications for a specific subscription. A notification
      includes details about the event, the request to and the response from the
      consumer service.
    syntax:
      content: >-
        function getNotifications(subscriptionId: string, maxResults?: number,
        status?: NotificationStatus, result?: NotificationResult)
      parameters:
        - id: subscriptionId
          type:
            - string
          description: ID for a subscription.
        - id: maxResults
          type:
            - number
          description: Maximum number of notifications to return. Default is **100**.
          optional: true
        - id: status
          type:
            - azure-devops-extension-api.NotificationStatus
          description: Get only notifications with this status.
          optional: true
        - id: result
          type:
            - azure-devops-extension-api.NotificationResult
          description: |
            Get only notifications with this result type.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Notification[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getPublisher
    name: getPublisher(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a specific service hooks publisher.
    syntax:
      content: 'function getPublisher(publisherId: string)'
      parameters:
        - id: publisherId
          type:
            - string
          description: |
            ID for a publisher.
      return:
        type:
          - Promise<azure-devops-extension-api.Publisher>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.getSubscription
    name: getSubscription(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a specific service hooks subscription.
    syntax:
      content: 'function getSubscription(subscriptionId: string)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: |
            ID for a subscription.
      return:
        type:
          - Promise<azure-devops-extension-api.Subscription>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ServiceHooksRestClient.getSubscriptionDiagnostics
    name: getSubscriptionDiagnostics(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubscriptionDiagnostics(subscriptionId: string)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.SubscriptionDiagnostics>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.listConsumerActions
    name: 'listConsumerActions(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of consumer actions for a specific consumer.
    syntax:
      content: 'function listConsumerActions(consumerId: string, publisherId?: string)'
      parameters:
        - id: consumerId
          type:
            - string
          description: ID for a consumer.
        - id: publisherId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ConsumerAction[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.listConsumers
    name: listConsumers(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a list of available service hook consumer services. Optionally filter
      by consumers that support at least one event type from the specific
      publisher.
    syntax:
      content: 'function listConsumers(publisherId?: string)'
      parameters:
        - id: publisherId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Consumer[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.listEventTypes
    name: listEventTypes(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the event types for a specific publisher.
    syntax:
      content: 'function listEventTypes(publisherId: string)'
      parameters:
        - id: publisherId
          type:
            - string
          description: |
            ID for a publisher.
      return:
        type:
          - 'Promise<azure-devops-extension-api.EventTypeDescriptor[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.listPublishers
    name: listPublishers()
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of publishers.
    syntax:
      content: function listPublishers()
      parameters: []
      return:
        type:
          - 'Promise<azure-devops-extension-api.Publisher[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.listSubscriptions
    name: 'listSubscriptions(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of subscriptions.
    syntax:
      content: >-
        function listSubscriptions(publisherId?: string, eventType?: string,
        consumerId?: string, consumerActionId?: string)
      parameters:
        - id: publisherId
          type:
            - string
          description: ID for a subscription.
          optional: true
        - id: eventType
          type:
            - string
          description: Maximum number of notifications to return. Default is 100.
          optional: true
        - id: consumerId
          type:
            - string
          description: ID for a consumer.
          optional: true
        - id: consumerActionId
          type:
            - string
          description: |
            ID for a consumerActionId.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Subscription[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.publishExternalEvent
    name: 'publishExternalEvent(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Publish an external event.
    syntax:
      content: 'function publishExternalEvent(publisherId: string, channelId?: string)'
      parameters:
        - id: publisherId
          type:
            - string
          description: '-'
        - id: channelId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.PublisherEvent[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.queryInputValues
    name: 'queryInputValues(InputValuesQuery, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function queryInputValues(inputValuesQuery: InputValuesQuery,
        publisherId: string)
      parameters:
        - id: inputValuesQuery
          type:
            - azure-devops-extension-api.InputValuesQuery
          description: '-'
        - id: publisherId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.InputValuesQuery>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.queryNotifications
    name: queryNotifications(NotificationsQuery)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Query for notifications. A notification includes details about the event,
      the request to and the response from the consumer service.
    syntax:
      content: 'function queryNotifications(query: NotificationsQuery)'
      parameters:
        - id: query
          type:
            - azure-devops-extension-api.NotificationsQuery
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.NotificationsQuery>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.queryPublishers
    name: queryPublishers(PublishersQuery)
    children: []
    type: method
    langs:
      - typeScript
    summary: Query for service hook publishers.
    syntax:
      content: 'function queryPublishers(query: PublishersQuery)'
      parameters:
        - id: query
          type:
            - azure-devops-extension-api.PublishersQuery
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.PublishersQuery>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.replaceSubscription
    name: 'replaceSubscription(Subscription, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update a subscription. \<param name="subscriptionId"\>ID for a
      subscription that you wish to update.\</param\>
    syntax:
      content: >-
        function replaceSubscription(subscription: Subscription,
        subscriptionId?: string)
      parameters:
        - id: subscription
          type:
            - azure-devops-extension-api.Subscription
          description: '-'
        - id: subscriptionId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Subscription>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ServiceHooksRestClient.constructor
    name: ServiceHooksRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ServiceHooksRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ServiceHooksRestClient.updateSubscriptionDiagnostics
    name: >-
      updateSubscriptionDiagnostics(UpdateSubscripitonDiagnosticsParameters,
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSubscriptionDiagnostics(updateParameters:
        UpdateSubscripitonDiagnosticsParameters, subscriptionId: string)
      parameters:
        - id: updateParameters
          type:
            - azure-devops-extension-api.UpdateSubscripitonDiagnosticsParameters
          description: '-'
        - id: subscriptionId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.SubscriptionDiagnostics>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: azure-devops-extension-api.Subscription
    name: Subscription
    spec.typeScript:
      - name: Subscription
        fullName: Subscription
        uid: azure-devops-extension-api.Subscription
  - uid: Promise<azure-devops-extension-api.Subscription>
    name: Subscription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Subscription
        fullName: Subscription
        uid: azure-devops-extension-api.Subscription
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.SubscriptionsQuery
    name: SubscriptionsQuery
    spec.typeScript:
      - name: SubscriptionsQuery
        fullName: SubscriptionsQuery
        uid: azure-devops-extension-api.SubscriptionsQuery
  - uid: Promise<azure-devops-extension-api.SubscriptionsQuery>
    name: SubscriptionsQuery>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionsQuery
        fullName: SubscriptionsQuery
        uid: azure-devops-extension-api.SubscriptionsQuery
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Notification
    name: Notification
    spec.typeScript:
      - name: Notification
        fullName: Notification
        uid: azure-devops-extension-api.Notification
  - uid: Promise<azure-devops-extension-api.Notification>
    name: Notification>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Notification
        fullName: Notification
        uid: azure-devops-extension-api.Notification
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.Consumer>
    name: Consumer>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Consumer
        fullName: Consumer
        uid: azure-devops-extension-api.Consumer
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ConsumerAction>
    name: ConsumerAction>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ConsumerAction
        fullName: ConsumerAction
        uid: azure-devops-extension-api.ConsumerAction
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.EventTypeDescriptor>
    name: EventTypeDescriptor>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventTypeDescriptor
        fullName: EventTypeDescriptor
        uid: azure-devops-extension-api.EventTypeDescriptor
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.NotificationStatus
    name: NotificationStatus
    spec.typeScript:
      - name: NotificationStatus
        fullName: NotificationStatus
        uid: azure-devops-extension-api.NotificationStatus
  - uid: azure-devops-extension-api.NotificationResult
    name: NotificationResult
    spec.typeScript:
      - name: NotificationResult
        fullName: NotificationResult
        uid: azure-devops-extension-api.NotificationResult
  - uid: 'Promise<azure-devops-extension-api.Notification[]>'
    name: 'Notification[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Notification
        fullName: Notification
        uid: azure-devops-extension-api.Notification
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.Publisher>
    name: Publisher>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Publisher
        fullName: Publisher
        uid: azure-devops-extension-api.Publisher
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.SubscriptionDiagnostics>
    name: SubscriptionDiagnostics>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionDiagnostics
        fullName: SubscriptionDiagnostics
        uid: azure-devops-extension-api.SubscriptionDiagnostics
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.ConsumerAction[]>'
    name: 'ConsumerAction[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ConsumerAction
        fullName: ConsumerAction
        uid: azure-devops-extension-api.ConsumerAction
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.Consumer[]>'
    name: 'Consumer[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Consumer
        fullName: Consumer
        uid: azure-devops-extension-api.Consumer
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.EventTypeDescriptor[]>'
    name: 'EventTypeDescriptor[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventTypeDescriptor
        fullName: EventTypeDescriptor
        uid: azure-devops-extension-api.EventTypeDescriptor
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.Publisher[]>'
    name: 'Publisher[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Publisher
        fullName: Publisher
        uid: azure-devops-extension-api.Publisher
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.Subscription[]>'
    name: 'Subscription[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Subscription
        fullName: Subscription
        uid: azure-devops-extension-api.Subscription
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.PublisherEvent[]>'
    name: 'PublisherEvent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PublisherEvent
        fullName: PublisherEvent
        uid: azure-devops-extension-api.PublisherEvent
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.InputValuesQuery
    name: InputValuesQuery
    spec.typeScript:
      - name: InputValuesQuery
        fullName: InputValuesQuery
        uid: azure-devops-extension-api.InputValuesQuery
  - uid: Promise<azure-devops-extension-api.InputValuesQuery>
    name: InputValuesQuery>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: InputValuesQuery
        fullName: InputValuesQuery
        uid: azure-devops-extension-api.InputValuesQuery
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.NotificationsQuery
    name: NotificationsQuery
    spec.typeScript:
      - name: NotificationsQuery
        fullName: NotificationsQuery
        uid: azure-devops-extension-api.NotificationsQuery
  - uid: Promise<azure-devops-extension-api.NotificationsQuery>
    name: NotificationsQuery>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NotificationsQuery
        fullName: NotificationsQuery
        uid: azure-devops-extension-api.NotificationsQuery
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.PublishersQuery
    name: PublishersQuery
    spec.typeScript:
      - name: PublishersQuery
        fullName: PublishersQuery
        uid: azure-devops-extension-api.PublishersQuery
  - uid: Promise<azure-devops-extension-api.PublishersQuery>
    name: PublishersQuery>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PublishersQuery
        fullName: PublishersQuery
        uid: azure-devops-extension-api.PublishersQuery
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.UpdateSubscripitonDiagnosticsParameters
    name: UpdateSubscripitonDiagnosticsParameters
    spec.typeScript:
      - name: UpdateSubscripitonDiagnosticsParameters
        fullName: UpdateSubscripitonDiagnosticsParameters
        uid: azure-devops-extension-api.UpdateSubscripitonDiagnosticsParameters
