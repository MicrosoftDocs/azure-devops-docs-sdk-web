### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.DashboardRestClient
    name: DashboardRestClient
    fullName: DashboardRestClient
    children:
      - azure-devops-extension-api.DashboardRestClient.createDashboard
      - azure-devops-extension-api.DashboardRestClient.createWidget
      - azure-devops-extension-api.DashboardRestClient.constructor
      - azure-devops-extension-api.DashboardRestClient.deleteDashboard
      - azure-devops-extension-api.DashboardRestClient.deleteWidget
      - azure-devops-extension-api.DashboardRestClient.getDashboard
      - azure-devops-extension-api.DashboardRestClient.getDashboards
      - azure-devops-extension-api.DashboardRestClient.getWidget
      - azure-devops-extension-api.DashboardRestClient.getWidgetMetadata
      - azure-devops-extension-api.DashboardRestClient.getWidgetTypes
      - azure-devops-extension-api.DashboardRestClient.replaceDashboard
      - azure-devops-extension-api.DashboardRestClient.replaceDashboards
      - azure-devops-extension-api.DashboardRestClient.replaceWidget
      - azure-devops-extension-api.DashboardRestClient.RESOURCE_AREA_ID
      - azure-devops-extension-api.DashboardRestClient.updateWidget
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.createDashboard
    name: 'createDashboard(Dashboard, TeamContext)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create the supplied dashboard.
    syntax:
      content: 'function createDashboard(dashboard: Dashboard, teamContext: TeamContext)'
      parameters:
        - id: dashboard
          type:
            - azure-devops-extension-api.Dashboard
          description: The initial state of the dashboard
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: |
            The team context for the operation
      return:
        type:
          - Promise<azure-devops-extension-api.Dashboard>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.createWidget
    name: 'createWidget(Widget, TeamContext, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a widget on the specified dashboard.
    syntax:
      content: >-
        function createWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string)
      parameters:
        - id: widget
          type:
            - azure-devops-extension-api.Widget
          description: State of the widget to add
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |
            ID of dashboard the widget will be added to.
      return:
        type:
          - Promise<azure-devops-extension-api.Widget>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.constructor
    name: DashboardRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new DashboardRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.deleteDashboard
    name: 'deleteDashboard(TeamContext, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete a dashboard given its ID. This also deletes the widgets associated
      with this dashboard.
    syntax:
      content: 'function deleteDashboard(teamContext: TeamContext, dashboardId: string)'
      parameters:
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |
            ID of the dashboard to delete.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.deleteWidget
    name: 'deleteWidget(TeamContext, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete the specified widget.
    syntax:
      content: >-
        function deleteWidget(teamContext: TeamContext, dashboardId: string,
        widgetId: string)
      parameters:
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type:
            - string
          description: |
            ID of the widget to update.
      return:
        type:
          - Promise<azure-devops-extension-api.Dashboard>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.getDashboard
    name: 'getDashboard(TeamContext, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a dashboard by its ID.
    syntax:
      content: 'function getDashboard(teamContext: TeamContext, dashboardId: string)'
      parameters:
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.Dashboard>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.getDashboards
    name: getDashboards(TeamContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of dashboards.
    syntax:
      content: 'function getDashboards(teamContext: TeamContext)'
      parameters:
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: |
            The team context for the operation
      return:
        type:
          - Promise<azure-devops-extension-api.DashboardGroup>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.getWidget
    name: 'getWidget(TeamContext, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the current state of the specified widget.
    syntax:
      content: >-
        function getWidget(teamContext: TeamContext, dashboardId: string,
        widgetId: string)
      parameters:
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type:
            - string
          description: |
            ID of the widget to read.
      return:
        type:
          - Promise<azure-devops-extension-api.Widget>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.getWidgetMetadata
    name: 'getWidgetMetadata(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the widget metadata satisfying the specified contribution ID.
    syntax:
      content: 'function getWidgetMetadata(contributionId: string, project?: string)'
      parameters:
        - id: contributionId
          type:
            - string
          description: The ID of Contribution for the Widget
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.WidgetMetadataResponse>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.getWidgetTypes
    name: 'getWidgetTypes(WidgetScope, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all available widget metadata in alphabetical order.
    syntax:
      content: 'function getWidgetTypes(scope: WidgetScope, project?: string)'
      parameters:
        - id: scope
          type:
            - azure-devops-extension-api.WidgetScope
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.WidgetTypesResponse>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.replaceDashboard
    name: 'replaceDashboard(Dashboard, TeamContext, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replace configuration for the specified dashboard. Replaces Widget list on
      Dashboard, only if property is supplied.
    syntax:
      content: >-
        function replaceDashboard(dashboard: Dashboard, teamContext:
        TeamContext, dashboardId: string)
      parameters:
        - id: dashboard
          type:
            - azure-devops-extension-api.Dashboard
          description: The Configuration of the dashboard to replace.
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |
            ID of the dashboard to replace.
      return:
        type:
          - Promise<azure-devops-extension-api.Dashboard>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.replaceDashboards
    name: 'replaceDashboards(DashboardGroup, TeamContext)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update the name and position of dashboards in the supplied group, and
      remove omitted dashboards. Does not modify dashboard content.
    syntax:
      content: >-
        function replaceDashboards(group: DashboardGroup, teamContext:
        TeamContext)
      parameters:
        - id: group
          type:
            - azure-devops-extension-api.DashboardGroup
          description: '-'
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: |
            The team context for the operation
      return:
        type:
          - Promise<azure-devops-extension-api.DashboardGroup>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.replaceWidget
    name: 'replaceWidget(Widget, TeamContext, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Override the  state of the specified widget.
    syntax:
      content: >-
        function replaceWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string, widgetId: string)
      parameters:
        - id: widget
          type:
            - azure-devops-extension-api.Widget
          description: State to be written for the widget.
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type:
            - string
          description: |
            ID of the widget to update.
      return:
        type:
          - Promise<azure-devops-extension-api.Widget>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.RESOURCE_AREA_ID
    name: RESOURCE_AREA_ID
    fullName: RESOURCE_AREA_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.DashboardRestClient.updateWidget
    name: 'updateWidget(Widget, TeamContext, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Perform a partial update of the specified widget.
    syntax:
      content: >-
        function updateWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string, widgetId: string)
      parameters:
        - id: widget
          type:
            - azure-devops-extension-api.Widget
          description: >-
            Description of the widget changes to apply. All non-null fields will
            be replaced.
        - id: teamContext
          type:
            - azure-devops-extension-api.TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type:
            - string
          description: |
            ID of the widget to update.
      return:
        type:
          - Promise<azure-devops-extension-api.Widget>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: azure-devops-extension-api.Dashboard
    name: Dashboard
    spec.typeScript:
      - name: Dashboard
        fullName: Dashboard
        uid: azure-devops-extension-api.Dashboard
  - uid: azure-devops-extension-api.TeamContext
    name: TeamContext
    spec.typeScript:
      - name: TeamContext
        fullName: TeamContext
        uid: azure-devops-extension-api.TeamContext
  - uid: Promise<azure-devops-extension-api.Dashboard>
    name: Dashboard>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Dashboard
        fullName: Dashboard
        uid: azure-devops-extension-api.Dashboard
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Widget
    name: Widget
    spec.typeScript:
      - name: Widget
        fullName: Widget
        uid: azure-devops-extension-api.Widget
  - uid: Promise<azure-devops-extension-api.Widget>
    name: Widget>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Widget
        fullName: Widget
        uid: azure-devops-extension-api.Widget
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.DashboardGroup>
    name: DashboardGroup>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DashboardGroup
        fullName: DashboardGroup
        uid: azure-devops-extension-api.DashboardGroup
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.WidgetMetadataResponse>
    name: WidgetMetadataResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: WidgetMetadataResponse
        fullName: WidgetMetadataResponse
        uid: azure-devops-extension-api.WidgetMetadataResponse
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.WidgetScope
    name: WidgetScope
    spec.typeScript:
      - name: WidgetScope
        fullName: WidgetScope
        uid: azure-devops-extension-api.WidgetScope
  - uid: Promise<azure-devops-extension-api.WidgetTypesResponse>
    name: WidgetTypesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: WidgetTypesResponse
        fullName: WidgetTypesResponse
        uid: azure-devops-extension-api.WidgetTypesResponse
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.DashboardGroup
    name: DashboardGroup
    spec.typeScript:
      - name: DashboardGroup
        fullName: DashboardGroup
        uid: azure-devops-extension-api.DashboardGroup
