### YamlMime:TSType
name: DashboardRestClient
uid: azure-devops-extension-api.DashboardRestClient
package: azure-devops-extension-api
summary: >-
  Base class that should be used (derived from) to make requests to VSS REST
  apis
fullName: DashboardRestClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: DashboardRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.DashboardRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new DashboardRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
properties:
  - name: RESOURCE_AREA_ID
    uid: azure-devops-extension-api.DashboardRestClient.RESOURCE_AREA_ID
    package: azure-devops-extension-api
    summary: ''
    fullName: RESOURCE_AREA_ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        description: ''
        type: string
methods:
  - name: createDashboard(Dashboard, TeamContext)
    uid: azure-devops-extension-api.DashboardRestClient.createDashboard
    package: azure-devops-extension-api
    summary: Create the supplied dashboard.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createDashboard(dashboard: Dashboard, teamContext:
        TeamContext): Promise<Dashboard>
      parameters:
        - id: dashboard
          type: <xref uid="azure-devops-extension-api.Dashboard" />
          description: The initial state of the dashboard
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Dashboard" />&gt;
  - name: createWidget(Widget, TeamContext, string)
    uid: azure-devops-extension-api.DashboardRestClient.createWidget
    package: azure-devops-extension-api
    summary: Create a widget on the specified dashboard.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string): Promise<Widget>
      parameters:
        - id: widget
          type: <xref uid="azure-devops-extension-api.Widget" />
          description: State of the widget to add
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of dashboard the widget will be added to.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Widget" />&gt;
  - name: deleteDashboard(TeamContext, string)
    uid: azure-devops-extension-api.DashboardRestClient.deleteDashboard
    package: azure-devops-extension-api
    summary: >-
      Delete a dashboard given its ID. This also deletes the widgets associated
      with this dashboard.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteDashboard(teamContext: TeamContext, dashboardId: string):
        Promise<void>
      parameters:
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of the dashboard to delete.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteWidget(TeamContext, string, string)
    uid: azure-devops-extension-api.DashboardRestClient.deleteWidget
    package: azure-devops-extension-api
    summary: Delete the specified widget.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteWidget(teamContext: TeamContext, dashboardId: string,
        widgetId: string): Promise<Dashboard>
      parameters:
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type: string
          description: ID of the widget to update.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Dashboard" />&gt;
  - name: getDashboard(TeamContext, string)
    uid: azure-devops-extension-api.DashboardRestClient.getDashboard
    package: azure-devops-extension-api
    summary: Get a dashboard by its ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getDashboard(teamContext: TeamContext, dashboardId: string):
        Promise<Dashboard>
      parameters:
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Dashboard" />&gt;
  - name: getDashboardsByProject(TeamContext)
    uid: azure-devops-extension-api.DashboardRestClient.getDashboardsByProject
    package: azure-devops-extension-api
    summary: Get a list of dashboards under a project.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getDashboardsByProject(teamContext: TeamContext):
        Promise<Dashboard[]>
      parameters:
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Dashboard" />[]&gt;
  - name: getWidget(TeamContext, string, string)
    uid: azure-devops-extension-api.DashboardRestClient.getWidget
    package: azure-devops-extension-api
    summary: Get the current state of the specified widget.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getWidget(teamContext: TeamContext, dashboardId: string,
        widgetId: string): Promise<Widget>
      parameters:
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type: string
          description: ID of the widget to read.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Widget" />&gt;
  - name: getWidgetMetadata(string, string)
    uid: azure-devops-extension-api.DashboardRestClient.getWidgetMetadata
    package: azure-devops-extension-api
    summary: Get the widget metadata satisfying the specified contribution ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getWidgetMetadata(contributionId: string, project?: string):
        Promise<WidgetMetadataResponse>
      parameters:
        - id: contributionId
          type: string
          description: The ID of Contribution for the Widget
        - id: project
          type: string
          description: Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.WidgetMetadataResponse" />&gt;
  - name: getWidgetTypes(WidgetScope, string)
    uid: azure-devops-extension-api.DashboardRestClient.getWidgetTypes
    package: azure-devops-extension-api
    summary: >-
      Get all available widget metadata in alphabetical order, including widgets
      marked with isVisibleFromCatalog == false.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getWidgetTypes(scope: WidgetScope, project?: string):
        Promise<WidgetTypesResponse>
      parameters:
        - id: scope
          type: <xref uid="azure-devops-extension-api.WidgetScope" />
          description: ''
        - id: project
          type: string
          description: Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.WidgetTypesResponse"
          />&gt;
  - name: replaceDashboard(Dashboard, TeamContext, string)
    uid: azure-devops-extension-api.DashboardRestClient.replaceDashboard
    package: azure-devops-extension-api
    summary: >-
      Replace configuration for the specified dashboard. Replaces Widget list on
      Dashboard, only if property is supplied.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function replaceDashboard(dashboard: Dashboard, teamContext:
        TeamContext, dashboardId: string): Promise<Dashboard>
      parameters:
        - id: dashboard
          type: <xref uid="azure-devops-extension-api.Dashboard" />
          description: The Configuration of the dashboard to replace.
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of the dashboard to replace.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Dashboard" />&gt;
  - name: replaceDashboards(DashboardGroup, TeamContext)
    uid: azure-devops-extension-api.DashboardRestClient.replaceDashboards
    package: azure-devops-extension-api
    summary: >-
      Update the name and position of dashboards in the supplied group, and
      remove omitted dashboards. Does not modify dashboard content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function replaceDashboards(group: DashboardGroup, teamContext:
        TeamContext): Promise<DashboardGroup>
      parameters:
        - id: group
          type: <xref uid="azure-devops-extension-api.DashboardGroup" />
          description: ''
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.DashboardGroup"
          />&gt;
  - name: replaceWidget(Widget, TeamContext, string, string)
    uid: azure-devops-extension-api.DashboardRestClient.replaceWidget
    package: azure-devops-extension-api
    summary: Override the  state of the specified widget.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function replaceWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string, widgetId: string): Promise<Widget>
      parameters:
        - id: widget
          type: <xref uid="azure-devops-extension-api.Widget" />
          description: State to be written for the widget.
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type: string
          description: ID of the widget to update.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Widget" />&gt;
  - name: updateWidget(Widget, TeamContext, string, string)
    uid: azure-devops-extension-api.DashboardRestClient.updateWidget
    package: azure-devops-extension-api
    summary: Perform a partial update of the specified widget.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string, widgetId: string): Promise<Widget>
      parameters:
        - id: widget
          type: <xref uid="azure-devops-extension-api.Widget" />
          description: >-
            Description of the widget changes to apply. All non-null fields will
            be replaced.
        - id: teamContext
          type: <xref uid="azure-devops-extension-api.TeamContext" />
          description: The team context for the operation
        - id: dashboardId
          type: string
          description: ID of the dashboard containing the widget.
        - id: widgetId
          type: string
          description: ID of the widget to update.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Widget" />&gt;
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
