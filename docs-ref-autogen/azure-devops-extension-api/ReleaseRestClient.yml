### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.ReleaseRestClient
    name: ReleaseRestClient
    fullName: ReleaseRestClient
    children:
      - azure-devops-extension-api.ReleaseRestClient.addDefinitionTag
      - azure-devops-extension-api.ReleaseRestClient.addDefinitionTags
      - azure-devops-extension-api.ReleaseRestClient.addReleaseTag
      - azure-devops-extension-api.ReleaseRestClient.addReleaseTags
      - >-
        azure-devops-extension-api.ReleaseRestClient.createDefinitionEnvironmentTemplate
      - azure-devops-extension-api.ReleaseRestClient.createFavorites
      - azure-devops-extension-api.ReleaseRestClient.createFolder
      - azure-devops-extension-api.ReleaseRestClient.createRelease
      - azure-devops-extension-api.ReleaseRestClient.createReleaseDefinition
      - >-
        azure-devops-extension-api.ReleaseRestClient.deleteDefinitionEnvironmentTemplate
      - azure-devops-extension-api.ReleaseRestClient.deleteDefinitionTag
      - azure-devops-extension-api.ReleaseRestClient.deleteFavorites
      - azure-devops-extension-api.ReleaseRestClient.deleteFolder
      - azure-devops-extension-api.ReleaseRestClient.deleteRelease
      - azure-devops-extension-api.ReleaseRestClient.deleteReleaseDefinition
      - azure-devops-extension-api.ReleaseRestClient.deleteReleaseTag
      - azure-devops-extension-api.ReleaseRestClient.getAgentArtifactDefinitions
      - azure-devops-extension-api.ReleaseRestClient.getApproval
      - azure-devops-extension-api.ReleaseRestClient.getApprovalHistory
      - azure-devops-extension-api.ReleaseRestClient.getApprovals
      - azure-devops-extension-api.ReleaseRestClient.getArtifactTypeDefinitions
      - azure-devops-extension-api.ReleaseRestClient.getArtifactVersions
      - >-
        azure-devops-extension-api.ReleaseRestClient.getArtifactVersionsForSources
      - azure-devops-extension-api.ReleaseRestClient.getAutoTriggerIssues
      - azure-devops-extension-api.ReleaseRestClient.getDefinitionEnvironments
      - >-
        azure-devops-extension-api.ReleaseRestClient.getDefinitionEnvironmentTemplate
      - azure-devops-extension-api.ReleaseRestClient.getDefinitionRevision
      - azure-devops-extension-api.ReleaseRestClient.getDefinitionTags
      - azure-devops-extension-api.ReleaseRestClient.getDeploymentBadge
      - azure-devops-extension-api.ReleaseRestClient.getDeployments
      - >-
        azure-devops-extension-api.ReleaseRestClient.getDeploymentsForMultipleEnvironments
      - azure-devops-extension-api.ReleaseRestClient.getFavorites
      - azure-devops-extension-api.ReleaseRestClient.getFlightAssignments
      - azure-devops-extension-api.ReleaseRestClient.getFolders
      - azure-devops-extension-api.ReleaseRestClient.getGateLog
      - azure-devops-extension-api.ReleaseRestClient.getInputValues
      - azure-devops-extension-api.ReleaseRestClient.getIssues
      - azure-devops-extension-api.ReleaseRestClient.getLog
      - azure-devops-extension-api.ReleaseRestClient.getLogs
      - azure-devops-extension-api.ReleaseRestClient.getManualIntervention
      - azure-devops-extension-api.ReleaseRestClient.getManualInterventions
      - azure-devops-extension-api.ReleaseRestClient.getMetrics
      - azure-devops-extension-api.ReleaseRestClient.getRelease
      - azure-devops-extension-api.ReleaseRestClient.getReleaseChanges
      - azure-devops-extension-api.ReleaseRestClient.getReleaseDefinition
      - azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionHistory
      - >-
        azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionRevision
      - azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitions
      - azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionSummary
      - azure-devops-extension-api.ReleaseRestClient.getReleaseEnvironment
      - azure-devops-extension-api.ReleaseRestClient.getReleaseHistory
      - azure-devops-extension-api.ReleaseRestClient.getReleaseProjects
      - azure-devops-extension-api.ReleaseRestClient.getReleaseRevision
      - azure-devops-extension-api.ReleaseRestClient.getReleases
      - azure-devops-extension-api.ReleaseRestClient.getReleaseSettings
      - azure-devops-extension-api.ReleaseRestClient.getReleaseTags
      - >-
        azure-devops-extension-api.ReleaseRestClient.getReleaseTaskAttachmentContent
      - azure-devops-extension-api.ReleaseRestClient.getReleaseTaskAttachments
      - azure-devops-extension-api.ReleaseRestClient.getReleaseWorkItemsRefs
      - azure-devops-extension-api.ReleaseRestClient.getSourceBranches
      - azure-devops-extension-api.ReleaseRestClient.getSummaryMailSections
      - azure-devops-extension-api.ReleaseRestClient.getTags
      - azure-devops-extension-api.ReleaseRestClient.getTaskAttachmentContent
      - azure-devops-extension-api.ReleaseRestClient.getTaskAttachments
      - azure-devops-extension-api.ReleaseRestClient.getTaskLog
      - azure-devops-extension-api.ReleaseRestClient.getTaskLog2
      - azure-devops-extension-api.ReleaseRestClient.getTasks
      - azure-devops-extension-api.ReleaseRestClient.getTasks2
      - azure-devops-extension-api.ReleaseRestClient.getTasksForTaskGroup
      - >-
        azure-devops-extension-api.ReleaseRestClient.listDefinitionEnvironmentTemplates
      - azure-devops-extension-api.ReleaseRestClient.constructor
      - azure-devops-extension-api.ReleaseRestClient.RESOURCE_AREA_ID
      - azure-devops-extension-api.ReleaseRestClient.sendSummaryMail
      - azure-devops-extension-api.ReleaseRestClient.undeleteRelease
      - azure-devops-extension-api.ReleaseRestClient.undeleteReleaseDefinition
      - >-
        azure-devops-extension-api.ReleaseRestClient.undeleteReleaseDefinitionEnvironmentTemplate
      - azure-devops-extension-api.ReleaseRestClient.updateFolder
      - azure-devops-extension-api.ReleaseRestClient.updateGates
      - azure-devops-extension-api.ReleaseRestClient.updateManualIntervention
      - azure-devops-extension-api.ReleaseRestClient.updateRelease
      - azure-devops-extension-api.ReleaseRestClient.updateReleaseApproval
      - azure-devops-extension-api.ReleaseRestClient.updateReleaseApprovals
      - azure-devops-extension-api.ReleaseRestClient.updateReleaseDefinition
      - azure-devops-extension-api.ReleaseRestClient.updateReleaseEnvironment
      - azure-devops-extension-api.ReleaseRestClient.updateReleaseResource
      - azure-devops-extension-api.ReleaseRestClient.updateReleaseSettings
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.addDefinitionTag
    name: 'addDefinitionTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a tag to a definition
    syntax:
      content: >-
        function addDefinitionTag(project: string, releaseDefinitionId: number,
        tag: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: '-'
        - id: tag
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.addDefinitionTags
    name: 'addDefinitionTags(string[], string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds multiple tags to a definition
    syntax:
      content: >-
        function addDefinitionTags(tags: string[], project: string,
        releaseDefinitionId: number)
      parameters:
        - id: tags
          type:
            - 'string[]'
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.addReleaseTag
    name: 'addReleaseTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a tag to a releaseId
    syntax:
      content: 'function addReleaseTag(project: string, releaseId: number, tag: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: tag
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.addReleaseTags
    name: 'addReleaseTags(string[], string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds tag to a release
    syntax:
      content: >-
        function addReleaseTags(tags: string[], project: string, releaseId:
        number)
      parameters:
        - id: tags
          type:
            - 'string[]'
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.createDefinitionEnvironmentTemplate
    name: >-
      createDefinitionEnvironmentTemplate(ReleaseDefinitionEnvironmentTemplate,
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a definition environment template
    syntax:
      content: >-
        function createDefinitionEnvironmentTemplate(template:
        ReleaseDefinitionEnvironmentTemplate, project: string)
      parameters:
        - id: template
          type:
            - azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate
          description: Definition environment template to create
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.createFavorites
    name: 'createFavorites(FavoriteItem[], string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createFavorites(favoriteItems: FavoriteItem[], project: string,
        scope: string, identityId?: string)
      parameters:
        - id: favoriteItems
          type:
            - 'azure-devops-extension-api.FavoriteItem[]'
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: '-'
        - id: identityId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.FavoriteItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.createFolder
    name: 'createFolder(Folder, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new folder
    syntax:
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      parameters:
        - id: folder
          type:
            - azure-devops-extension-api.Folder
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.Folder>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.createRelease
    name: 'createRelease(ReleaseStartMetadata, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a release.
    syntax:
      content: >-
        function createRelease(releaseStartMetadata: ReleaseStartMetadata,
        project: string)
      parameters:
        - id: releaseStartMetadata
          type:
            - azure-devops-extension-api.ReleaseStartMetadata
          description: Metadata to create a release.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.Release>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.createReleaseDefinition
    name: 'createReleaseDefinition(ReleaseDefinition, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a release definition
    syntax:
      content: >-
        function createReleaseDefinition(releaseDefinition: ReleaseDefinition,
        project: string)
      parameters:
        - id: releaseDefinition
          type:
            - azure-devops-extension-api.ReleaseDefinition
          description: release definition object to create.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseDefinition>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.deleteDefinitionEnvironmentTemplate
    name: 'deleteDefinitionEnvironmentTemplate(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a definition environment template
    syntax:
      content: >-
        function deleteDefinitionEnvironmentTemplate(project: string,
        templateId: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: |
            Id of the definition environment template
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.deleteDefinitionTag
    name: 'deleteDefinitionTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a tag from a definition
    syntax:
      content: >-
        function deleteDefinitionTag(project: string, releaseDefinitionId:
        number, tag: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: '-'
        - id: tag
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.deleteFavorites
    name: 'deleteFavorites(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFavorites(project: string, scope: string, identityId?:
        string, favoriteItemIds?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: '-'
        - id: identityId
          type:
            - string
          description: '-'
          optional: true
        - id: favoriteItemIds
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.deleteFolder
    name: 'deleteFolder(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a definition folder for given folder name and path and all it's
      existing definitions
    syntax:
      content: 'function deleteFolder(project: string, path: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.deleteRelease
    name: 'deleteRelease(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Soft delete a release
    syntax:
      content: >-
        function deleteRelease(project: string, releaseId: number, comment?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: comment
          type:
            - string
          description: |
            Comment for deleting a release.
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.deleteReleaseDefinition
    name: 'deleteReleaseDefinition(string, number, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a release definition.
    syntax:
      content: >-
        function deleteReleaseDefinition(project: string, definitionId: number,
        comment?: string, forceDelete?: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the release definition.
        - id: comment
          type:
            - string
          description: Comment for deleting a release definition.
          optional: true
        - id: forceDelete
          type:
            - boolean
          description: >
            'true' to automatically cancel any in-progress release deployments
            and proceed with release definition deletion . Default is 'false'.
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.deleteReleaseTag
    name: 'deleteReleaseTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a tag from a release
    syntax:
      content: >-
        function deleteReleaseTag(project: string, releaseId: number, tag:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: tag
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getAgentArtifactDefinitions
    name: 'getAgentArtifactDefinitions(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the artifact details that automation agent requires
    syntax:
      content: 'function getAgentArtifactDefinitions(project: string, releaseId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.AgentArtifactDefinition[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getApproval
    name: 'getApproval(string, number, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an approval.
    syntax:
      content: >-
        function getApproval(project: string, approvalId: number,
        includeHistory?: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: approvalId
          type:
            - number
          description: Id of the approval.
        - id: includeHistory
          type:
            - boolean
          description: |
            'true' to include history of the approval. Default is 'false'.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseApproval>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getApprovalHistory
    name: 'getApprovalHistory(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get approval history.
    syntax:
      content: 'function getApprovalHistory(project: string, approvalStepId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: approvalStepId
          type:
            - number
          description: |
            Id of the approval.
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseApproval>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getApprovals
    name: >-
      getApprovals(string, string, ApprovalStatus, number[], ApprovalType,
      number, number, ReleaseQueryOrder, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of approvals
    syntax:
      content: >-
        function getApprovals(project: string, assignedToFilter?: string,
        statusFilter?: ApprovalStatus, releaseIdsFilter?: number[], typeFilter?:
        ApprovalType, top?: number, continuationToken?: number, queryOrder?:
        ReleaseQueryOrder, includeMyGroupApprovals?: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: assignedToFilter
          type:
            - string
          description: Approvals assigned to this user.
          optional: true
        - id: statusFilter
          type:
            - azure-devops-extension-api.ApprovalStatus
          description: Approvals with this status. Default is 'pending'.
          optional: true
        - id: releaseIdsFilter
          type:
            - 'number[]'
          description: >-
            Approvals for release id(s) mentioned in the filter. Multiple
            releases can be mentioned by separating them with ',' e.g.
            releaseIdsFilter=1,2,3,4.
          optional: true
        - id: typeFilter
          type:
            - azure-devops-extension-api.ApprovalType
          description: Approval with this type.
          optional: true
        - id: top
          type:
            - number
          description: Number of approvals to get. Default is 50.
          optional: true
        - id: continuationToken
          type:
            - number
          description: Gets the approvals after the continuation token provided.
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.ReleaseQueryOrder
          description: >-
            Gets the results in the defined order of created approvals. Default
            is 'descending'.
          optional: true
        - id: includeMyGroupApprovals
          type:
            - boolean
          description: |
            'true' to include my group approvals. Default is 'false'.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseApproval[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getArtifactTypeDefinitions
    name: getArtifactTypeDefinitions(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getArtifactTypeDefinitions(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.ArtifactTypeDefinition[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getArtifactVersions
    name: 'getArtifactVersions(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getArtifactVersions(project: string, releaseDefinitionId:
        number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ArtifactVersionQueryResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getArtifactVersionsForSources
    name: 'getArtifactVersionsForSources(Artifact[], string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getArtifactVersionsForSources(artifacts: Artifact[], project:
        string)
      parameters:
        - id: artifacts
          type:
            - 'azure-devops-extension-api.Artifact[]'
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.ArtifactVersionQueryResult>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getAutoTriggerIssues
    name: 'getAutoTriggerIssues(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAutoTriggerIssues(artifactType: string, sourceId: string,
        artifactVersionId: string, project?: string)
      parameters:
        - id: artifactType
          type:
            - string
          description: '-'
        - id: sourceId
          type:
            - string
          description: '-'
        - id: artifactVersionId
          type:
            - string
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.AutoTriggerIssue[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getDefinitionEnvironments
    name: 'getDefinitionEnvironments(string, string, string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDefinitionEnvironments(project: string, taskGroupId?:
        string, propertyFilters?: string[])
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: '-'
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.DefinitionEnvironmentReference[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.getDefinitionEnvironmentTemplate
    name: 'getDefinitionEnvironmentTemplate(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a definition environment template
    syntax:
      content: >-
        function getDefinitionEnvironmentTemplate(project: string, templateId:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: |
            Id of the definition environment template
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getDefinitionRevision
    name: 'getDefinitionRevision(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get release definition for a given definitionId and revision
    syntax:
      content: >-
        function getDefinitionRevision(project: string, definitionId: number,
        revision: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the definition.
        - id: revision
          type:
            - number
          description: |
            Id of the revision.
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getDefinitionTags
    name: 'getDefinitionTags(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the tags for a definition
    syntax:
      content: 'function getDefinitionTags(project: string, releaseDefinitionId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getDeploymentBadge
    name: 'getDeploymentBadge(string, number, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a badge that indicates the status of the most recent deployment for
      an environment.
    syntax:
      content: >-
        function getDeploymentBadge(projectId: string, releaseDefinitionId:
        number, environmentId: number, branchName?: string)
      parameters:
        - id: projectId
          type:
            - string
          description: The ID of the Project.
        - id: releaseDefinitionId
          type:
            - number
          description: The ID of the Release Definition.
        - id: environmentId
          type:
            - number
          description: The ID of the Environment.
        - id: branchName
          type:
            - string
          description: |
            The name of the branch.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getDeployments
    name: >-
      getDeployments(string, number, number, string, Date, Date,
      DeploymentStatus, DeploymentOperationStatus, boolean, ReleaseQueryOrder,
      number, number, string, Date, Date, string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeployments(project: string, definitionId?: number,
        definitionEnvironmentId?: number, createdBy?: string, minModifiedTime?:
        Date, maxModifiedTime?: Date, deploymentStatus?: DeploymentStatus,
        operationStatus?: DeploymentOperationStatus, latestAttemptsOnly?:
        boolean, queryOrder?: ReleaseQueryOrder, top?: number,
        continuationToken?: number, createdFor?: string, minStartedTime?: Date,
        maxStartedTime?: Date, sourceBranch?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: '-'
          optional: true
        - id: definitionEnvironmentId
          type:
            - number
          description: '-'
          optional: true
        - id: createdBy
          type:
            - string
          description: '-'
          optional: true
        - id: minModifiedTime
          type:
            - Date
          description: '-'
          optional: true
        - id: maxModifiedTime
          type:
            - Date
          description: '-'
          optional: true
        - id: deploymentStatus
          type:
            - azure-devops-extension-api.DeploymentStatus
          description: '-'
          optional: true
        - id: operationStatus
          type:
            - azure-devops-extension-api.DeploymentOperationStatus
          description: '-'
          optional: true
        - id: latestAttemptsOnly
          type:
            - boolean
          description: '-'
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.ReleaseQueryOrder
          description: '-'
          optional: true
        - id: top
          type:
            - number
          description: '-'
          optional: true
        - id: continuationToken
          type:
            - number
          description: '-'
          optional: true
        - id: createdFor
          type:
            - string
          description: '-'
          optional: true
        - id: minStartedTime
          type:
            - Date
          description: '-'
          optional: true
        - id: maxStartedTime
          type:
            - Date
          description: '-'
          optional: true
        - id: sourceBranch
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Deployment[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.getDeploymentsForMultipleEnvironments
    name: 'getDeploymentsForMultipleEnvironments(DeploymentQueryParameters, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeploymentsForMultipleEnvironments(queryParameters:
        DeploymentQueryParameters, project: string)
      parameters:
        - id: queryParameters
          type:
            - azure-devops-extension-api.DeploymentQueryParameters
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.Deployment[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getFavorites
    name: 'getFavorites(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFavorites(project: string, scope: string, identityId?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: '-'
        - id: identityId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.FavoriteItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getFlightAssignments
    name: getFlightAssignments(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFlightAssignments(flightName?: string)'
      parameters:
        - id: flightName
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getFolders
    name: 'getFolders(string, string, FolderPathQueryOrder)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets folders
    syntax:
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        FolderPathQueryOrder)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: '-'
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.FolderPathQueryOrder
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Folder[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getGateLog
    name: 'getGateLog(string, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets gate logs
    syntax:
      content: >-
        function getGateLog(project: string, releaseId: number, environmentId:
        number, gateId: number, taskId: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of release environment.
        - id: gateId
          type:
            - number
          description: Id of the gate.
        - id: taskId
          type:
            - number
          description: |
            ReleaseTask Id for the log.
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getInputValues
    name: 'getInputValues(InputValuesQuery, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getInputValues(query: InputValuesQuery, project: string)'
      parameters:
        - id: query
          type:
            - azure-devops-extension-api.InputValuesQuery
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.InputValuesQuery>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getIssues
    name: 'getIssues(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getIssues(project: string, buildId: number, sourceId?: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: '-'
        - id: sourceId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.AutoTriggerIssue[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getLog
    name: 'getLog(string, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets logs
    syntax:
      content: >-
        function getLog(project: string, releaseId: number, environmentId:
        number, taskId: number, attemptId?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of release environment.
        - id: taskId
          type:
            - number
          description: ReleaseTask Id for the log.
        - id: attemptId
          type:
            - number
          description: |
            Id of the attempt.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getLogs
    name: 'getLogs(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get logs for a release Id.
    syntax:
      content: 'function getLogs(project: string, releaseId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            Id of the release.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getManualIntervention
    name: 'getManualIntervention(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get manual intervention for a given release and manual intervention id.
    syntax:
      content: >-
        function getManualIntervention(project: string, releaseId: number,
        manualInterventionId: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: manualInterventionId
          type:
            - number
          description: |
            Id of the manual intervention.
      return:
        type:
          - Promise<azure-devops-extension-api.ManualIntervention>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getManualInterventions
    name: 'getManualInterventions(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all manual interventions for a given release.
    syntax:
      content: 'function getManualInterventions(project: string, releaseId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            Id of the release.
      return:
        type:
          - 'Promise<azure-devops-extension-api.ManualIntervention[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getMetrics
    name: 'getMetrics(string, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMetrics(project: string, minMetricsTime?: Date)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: minMetricsTime
          type:
            - Date
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Metric[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getRelease
    name: >-
      getRelease(string, number, ApprovalFilters, string[],
      SingleReleaseExpands, number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a Release
    syntax:
      content: >-
        function getRelease(project: string, releaseId: number,
        approvalFilters?: ApprovalFilters, propertyFilters?: string[], expand?:
        SingleReleaseExpands, topGateRecords?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: approvalFilters
          type:
            - azure-devops-extension-api.ApprovalFilters
          description: >-
            A filter which would allow fetching approval steps selectively based
            on whether it is automated, or manual. This would also decide
            whether we should fetch pre and post approval snapshots. Assumes All
            by default
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Release will contain values for the specified
            property Ids (if they exist). If not set, properties will not be
            included.
          optional: true
        - id: expand
          type:
            - azure-devops-extension-api.SingleReleaseExpands
          description: A property that should be expanded in the release.
          optional: true
        - id: topGateRecords
          type:
            - number
          description: |
            Number of release gate records to get. Default is 5.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Release>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseChanges
    name: 'getReleaseChanges(string, number, number, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReleaseChanges(project: string, releaseId: number,
        baseReleaseId?: number, top?: number, artifactAlias?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: baseReleaseId
          type:
            - number
          description: '-'
          optional: true
        - id: top
          type:
            - number
          description: '-'
          optional: true
        - id: artifactAlias
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Change[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinition
    name: 'getReleaseDefinition(string, number, string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a release definition.
    syntax:
      content: >-
        function getReleaseDefinition(project: string, definitionId: number,
        propertyFilters?: string[])
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the release definition.
        - id: propertyFilters
          type:
            - 'string[]'
          description: >
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Release Definition will contain values for the
            specified property Ids (if they exist). If not set, properties will
            not be included.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseDefinition>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionHistory
    name: 'getReleaseDefinitionHistory(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get revision history for a release definition
    syntax:
      content: >-
        function getReleaseDefinitionHistory(project: string, definitionId:
        number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            Id of the definition.
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseDefinitionRevision[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionRevision
    name: 'getReleaseDefinitionRevision(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get release definition of a given revision.
    syntax:
      content: >-
        function getReleaseDefinitionRevision(project: string, definitionId:
        number, revision: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the release definition.
        - id: revision
          type:
            - number
          description: |
            Revision number of the release definition.
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitions
    name: >-
      getReleaseDefinitions(string, string, ReleaseDefinitionExpands, string,
      string, number, string, ReleaseDefinitionQueryOrder, string, boolean,
      string[], string[], string[], boolean, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of release definitions.
    syntax:
      content: >-
        function getReleaseDefinitions(project: string, searchText?: string,
        expand?: ReleaseDefinitionExpands, artifactType?: string,
        artifactSourceId?: string, top?: number, continuationToken?: string,
        queryOrder?: ReleaseDefinitionQueryOrder, path?: string,
        isExactNameMatch?: boolean, tagFilter?: string[], propertyFilters?:
        string[], definitionIdFilter?: string[], isDeleted?: boolean,
        searchTextContainsFolderName?: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: searchText
          type:
            - string
          description: Get release definitions with names containing searchText.
          optional: true
        - id: expand
          type:
            - azure-devops-extension-api.ReleaseDefinitionExpands
          description: >-
            The properties that should be expanded in the list of Release
            definitions.
          optional: true
        - id: artifactType
          type:
            - string
          description: >-
            Release definitions with given artifactType will be returned. Values
            can be Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
          optional: true
        - id: artifactSourceId
          type:
            - string
          description: >-
            Release definitions with given artifactSourceId will be returned.
            e.g. For build it would be \{projectGuid\}:\{BuildDefinitionId\},
            for Jenkins it would be
            \{JenkinsConnectionId\}:\{JenkinsDefinitionId\}, for TfsOnPrem it
            would be
            \{TfsOnPremConnectionId\}:\{ProjectName\}:\{TfsOnPremDefinitionId\}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json at
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
          optional: true
        - id: top
          type:
            - number
          description: Number of release definitions to get.
          optional: true
        - id: continuationToken
          type:
            - string
          description: Gets the release definitions after the continuation token provided.
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.ReleaseDefinitionQueryOrder
          description: Gets the results in the defined order. Default is 'IdAscending'.
          optional: true
        - id: path
          type:
            - string
          description: Gets the release definitions under the specified path.
          optional: true
        - id: isExactNameMatch
          type:
            - boolean
          description: >-
            'true'to gets the release definitions with exact match as specified
            in searchText. Default is 'false'.
          optional: true
        - id: tagFilter
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of tags. Only release definitions with these
            tags will be returned.
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Release Definitions will contain values for the
            specified property Ids (if they exist). If not set, properties will
            not be included. Note that this will not filter out any Release
            Definition from results irrespective of whether it has property set
            or not.
          optional: true
        - id: definitionIdFilter
          type:
            - 'string[]'
          description: A comma-delimited list of release definitions to retrieve.
          optional: true
        - id: isDeleted
          type:
            - boolean
          description: >-
            'true' to get release definitions that has been deleted. Default is
            'false'
          optional: true
        - id: searchTextContainsFolderName
          type:
            - boolean
          description: >
            'true' to get the release definitions under the folder with name as
            specified in searchText. Default is 'false'.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseDefinition[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionSummary
    name: 'getReleaseDefinitionSummary(string, number, number, boolean, number[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get release summary of a given definition Id.
    syntax:
      content: >-
        function getReleaseDefinitionSummary(project: string, definitionId:
        number, releaseCount: number, includeArtifact?: boolean,
        definitionEnvironmentIdsFilter?: number[])
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the definition to get release summary.
        - id: releaseCount
          type:
            - number
          description: Count of releases to be included in summary.
        - id: includeArtifact
          type:
            - boolean
          description: Include artifact details.Default is 'false'.
          optional: true
        - id: definitionEnvironmentIdsFilter
          type:
            - 'number[]'
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseDefinitionSummary>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseEnvironment
    name: 'getReleaseEnvironment(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a release environment.
    syntax:
      content: >-
        function getReleaseEnvironment(project: string, releaseId: number,
        environmentId: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: |
            Id of the release environment.
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseEnvironment>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseHistory
    name: 'getReleaseHistory(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReleaseHistory(project: string, releaseId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseRevision[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseProjects
    name: 'getReleaseProjects(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReleaseProjects(artifactType: string, artifactSourceId:
        string)
      parameters:
        - id: artifactType
          type:
            - string
          description: '-'
        - id: artifactSourceId
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.ProjectReference[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseRevision
    name: 'getReleaseRevision(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get release for a given revision number.
    syntax:
      content: >-
        function getReleaseRevision(project: string, releaseId: number,
        definitionSnapshotRevision: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: definitionSnapshotRevision
          type:
            - number
          description: |
            Definition snapshot revision number.
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleases
    name: >-
      getReleases(string, number, number, string, string, ReleaseStatus, number,
      Date, Date, ReleaseQueryOrder, number, number, ReleaseExpands, string,
      string, string, string, boolean, string[], string[], number[], string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of releases
    syntax:
      content: >-
        function getReleases(project?: string, definitionId?: number,
        definitionEnvironmentId?: number, searchText?: string, createdBy?:
        string, statusFilter?: ReleaseStatus, environmentStatusFilter?: number,
        minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?:
        ReleaseQueryOrder, top?: number, continuationToken?: number, expand?:
        ReleaseExpands, artifactTypeId?: string, sourceId?: string,
        artifactVersionId?: string, sourceBranchFilter?: string, isDeleted?:
        boolean, tagFilter?: string[], propertyFilters?: string[],
        releaseIdFilter?: number[], path?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionId
          type:
            - number
          description: Releases from this release definition Id.
          optional: true
        - id: definitionEnvironmentId
          type:
            - number
          description: '-'
          optional: true
        - id: searchText
          type:
            - string
          description: Releases with names containing searchText.
          optional: true
        - id: createdBy
          type:
            - string
          description: Releases created by this user.
          optional: true
        - id: statusFilter
          type:
            - azure-devops-extension-api.ReleaseStatus
          description: Releases that have this status.
          optional: true
        - id: environmentStatusFilter
          type:
            - number
          description: '-'
          optional: true
        - id: minCreatedTime
          type:
            - Date
          description: Releases that were created after this time.
          optional: true
        - id: maxCreatedTime
          type:
            - Date
          description: Releases that were created before this time.
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.ReleaseQueryOrder
          description: >-
            Gets the results in the defined order of created date for releases.
            Default is descending.
          optional: true
        - id: top
          type:
            - number
          description: Number of releases to get. Default is 50.
          optional: true
        - id: continuationToken
          type:
            - number
          description: Gets the releases after the continuation token provided.
          optional: true
        - id: expand
          type:
            - azure-devops-extension-api.ReleaseExpands
          description: The property that should be expanded in the list of releases.
          optional: true
        - id: artifactTypeId
          type:
            - string
          description: >-
            Releases with given artifactTypeId will be returned. Values can be
            Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
          optional: true
        - id: sourceId
          type:
            - string
          description: >-
            Unique identifier of the artifact used. e.g. For build it would be
            \{projectGuid\}:\{BuildDefinitionId\}, for Jenkins it would be
            \{JenkinsConnectionId\}:\{JenkinsDefinitionId\}, for TfsOnPrem it
            would be
            \{TfsOnPremConnectionId\}:\{ProjectName\}:\{TfsOnPremDefinitionId\}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
          optional: true
        - id: artifactVersionId
          type:
            - string
          description: >-
            Releases with given artifactVersionId will be returned. E.g. in case
            of Build artifactType, it is buildId.
          optional: true
        - id: sourceBranchFilter
          type:
            - string
          description: Releases with given sourceBranchFilter will be returned.
          optional: true
        - id: isDeleted
          type:
            - boolean
          description: 'Gets the soft deleted releases, if true.'
          optional: true
        - id: tagFilter
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of tags. Only releases with these tags will
            be returned.
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Releases will contain values for the specified
            property Ids (if they exist). If not set, properties will not be
            included. Note that this will not filter out any Release from
            results irrespective of whether it has property set or not.
          optional: true
        - id: releaseIdFilter
          type:
            - 'number[]'
          description: >-
            A comma-delimited list of releases Ids. Only releases with these Ids
            will be returned.
          optional: true
        - id: path
          type:
            - string
          description: |
            Releases under this folder path will be returned
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Release[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseSettings
    name: getReleaseSettings(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the release settings
    syntax:
      content: 'function getReleaseSettings(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseSettings>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseTags
    name: 'getReleaseTags(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the tags for a release
    syntax:
      content: 'function getReleaseTags(project: string, releaseId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.getReleaseTaskAttachmentContent
    name: >-
      getReleaseTaskAttachmentContent(string, number, number, number, string,
      string, string, string, string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a release task attachment.
    syntax:
      content: >-
        function getReleaseTaskAttachmentContent(project: string, releaseId:
        number, environmentId: number, attemptId: number, planId: string,
        timelineId: string, recordId: string, type: string, name: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the release environment.
        - id: attemptId
          type:
            - number
          description: Attempt number of deployment.
        - id: planId
          type:
            - string
          description: Plan Id of the deploy phase.
        - id: timelineId
          type:
            - string
          description: Timeline Id of the task.
        - id: recordId
          type:
            - string
          description: Record Id of attachment.
        - id: type
          type:
            - string
          description: Type of the attachment.
        - id: name
          type:
            - string
          description: |
            Name of the attachment.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseTaskAttachments
    name: 'getReleaseTaskAttachments(string, number, number, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the release task attachments.
    syntax:
      content: >-
        function getReleaseTaskAttachments(project: string, releaseId: number,
        environmentId: number, attemptId: number, planId: string, type: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the release environment.
        - id: attemptId
          type:
            - number
          description: Attempt number of deployment.
        - id: planId
          type:
            - string
          description: Plan Id of the deploy phase.
        - id: type
          type:
            - string
          description: |
            Type of the attachment.
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseTaskAttachment[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getReleaseWorkItemsRefs
    name: 'getReleaseWorkItemsRefs(string, number, number, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReleaseWorkItemsRefs(project: string, releaseId: number,
        baseReleaseId?: number, top?: number, artifactAlias?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: baseReleaseId
          type:
            - number
          description: '-'
          optional: true
        - id: top
          type:
            - number
          description: '-'
          optional: true
        - id: artifactAlias
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseWorkItemRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getSourceBranches
    name: 'getSourceBranches(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSourceBranches(project: string, definitionId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getSummaryMailSections
    name: 'getSummaryMailSections(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSummaryMailSections(project: string, releaseId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.SummaryMailSection[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTags
    name: getTags(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTags(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTaskAttachmentContent
    name: >-
      getTaskAttachmentContent(string, number, number, number, string, string,
      string, string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a task attachment.
    syntax:
      content: >-
        function getTaskAttachmentContent(project: string, releaseId: number,
        environmentId: number, attemptId: number, timelineId: string, recordId:
        string, type: string, name: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the release environment.
        - id: attemptId
          type:
            - number
          description: Attempt number of deployment.
        - id: timelineId
          type:
            - string
          description: Timeline Id of the task.
        - id: recordId
          type:
            - string
          description: Record Id of attachment.
        - id: type
          type:
            - string
          description: Type of the attachment.
        - id: name
          type:
            - string
          description: |
            Name of the attachment.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTaskAttachments
    name: 'getTaskAttachments(string, number, number, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the task attachments.
    syntax:
      content: >-
        function getTaskAttachments(project: string, releaseId: number,
        environmentId: number, attemptId: number, timelineId: string, type:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the release environment.
        - id: attemptId
          type:
            - number
          description: Attempt number of deployment.
        - id: timelineId
          type:
            - string
          description: Timeline Id of the task.
        - id: type
          type:
            - string
          description: |
            Type of the attachment.
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseTaskAttachment[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTaskLog
    name: 'getTaskLog(string, number, number, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the task log of a release as a plain text file.
    syntax:
      content: >-
        function getTaskLog(project: string, releaseId: number, environmentId:
        number, releaseDeployPhaseId: number, taskId: number, startLine?:
        number, endLine?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of release environment.
        - id: releaseDeployPhaseId
          type:
            - number
          description: Release deploy phase Id.
        - id: taskId
          type:
            - number
          description: ReleaseTask Id for the log.
        - id: startLine
          type:
            - number
          description: Starting line number for logs
          optional: true
        - id: endLine
          type:
            - number
          description: |
            Ending line number for logs
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTaskLog2
    name: >-
      getTaskLog2(string, number, number, number, string, number, number,
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the task log of a release as a plain text file.
    syntax:
      content: >-
        function getTaskLog2(project: string, releaseId: number, environmentId:
        number, attemptId: number, timelineId: string, taskId: number,
        startLine?: number, endLine?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of release environment.
        - id: attemptId
          type:
            - number
          description: '-'
        - id: timelineId
          type:
            - string
          description: '-'
        - id: taskId
          type:
            - number
          description: ReleaseTask Id for the log.
        - id: startLine
          type:
            - number
          description: Starting line number for logs
          optional: true
        - id: endLine
          type:
            - number
          description: |
            Ending line number for logs
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTasks
    name: 'getTasks(string, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTasks(project: string, releaseId: number, environmentId:
        number, attemptId?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: environmentId
          type:
            - number
          description: '-'
        - id: attemptId
          type:
            - number
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseTask[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTasks2
    name: 'getTasks2(string, number, number, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTasks2(project: string, releaseId: number, environmentId:
        number, attemptId: number, timelineId: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: environmentId
          type:
            - number
          description: '-'
        - id: attemptId
          type:
            - number
          description: '-'
        - id: timelineId
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseTask[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.getTasksForTaskGroup
    name: 'getTasksForTaskGroup(string, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTasksForTaskGroup(project: string, releaseId: number,
        environmentId: number, releaseDeployPhaseId: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: '-'
        - id: environmentId
          type:
            - number
          description: '-'
        - id: releaseDeployPhaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseTask[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.listDefinitionEnvironmentTemplates
    name: 'listDefinitionEnvironmentTemplates(string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of definition environment templates
    syntax:
      content: >-
        function listDefinitionEnvironmentTemplates(project: string, isDeleted?:
        boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: isDeleted
          type:
            - boolean
          description: >
            'true' to get definition environment templates that have been
            deleted. Default is 'false'
          optional: true
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate[]>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.constructor
    name: ReleaseRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ReleaseRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.RESOURCE_AREA_ID
    name: RESOURCE_AREA_ID
    fullName: RESOURCE_AREA_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.sendSummaryMail
    name: 'sendSummaryMail(MailMessage, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendSummaryMail(mailMessage: MailMessage, project: string,
        releaseId: number)
      parameters:
        - id: mailMessage
          type:
            - azure-devops-extension-api.MailMessage
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.undeleteRelease
    name: 'undeleteRelease(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Undelete a soft deleted release.
    syntax:
      content: >-
        function undeleteRelease(project: string, releaseId: number, comment:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of release to be undeleted.
        - id: comment
          type:
            - string
          description: |
            Any comment for undeleting.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.undeleteReleaseDefinition
    name: >-
      undeleteReleaseDefinition(ReleaseDefinitionUndeleteParameter, string,
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Undelete a release definition.
    syntax:
      content: >-
        function undeleteReleaseDefinition(releaseDefinitionUndeleteParameter:
        ReleaseDefinitionUndeleteParameter, project: string, definitionId:
        number)
      parameters:
        - id: releaseDefinitionUndeleteParameter
          type:
            - azure-devops-extension-api.ReleaseDefinitionUndeleteParameter
          description: Object for undelete release definition.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            Id of the release definition to be undeleted
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseDefinition>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ReleaseRestClient.undeleteReleaseDefinitionEnvironmentTemplate
    name: 'undeleteReleaseDefinitionEnvironmentTemplate(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Undelete a release definition environment template.
    syntax:
      content: >-
        function undeleteReleaseDefinitionEnvironmentTemplate(project: string,
        templateId: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: |
            Id of the definition environment template to be undeleted
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateFolder
    name: 'updateFolder(Folder, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing folder at given  existing path
    syntax:
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      parameters:
        - id: folder
          type:
            - azure-devops-extension-api.Folder
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.Folder>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateGates
    name: 'updateGates(GateUpdateMetadata, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the gate for a deployment.
    syntax:
      content: >-
        function updateGates(gateUpdateMetadata: GateUpdateMetadata, project:
        string, gateStepId: number)
      parameters:
        - id: gateUpdateMetadata
          type:
            - azure-devops-extension-api.GateUpdateMetadata
          description: Metadata to patch the Release Gates.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: gateStepId
          type:
            - number
          description: |
            Gate step Id.
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseGates>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateManualIntervention
    name: >-
      updateManualIntervention(ManualInterventionUpdateMetadata, string, number,
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update manual intervention.
    syntax:
      content: >-
        function updateManualIntervention(manualInterventionUpdateMetadata:
        ManualInterventionUpdateMetadata, project: string, releaseId: number,
        manualInterventionId: number)
      parameters:
        - id: manualInterventionUpdateMetadata
          type:
            - azure-devops-extension-api.ManualInterventionUpdateMetadata
          description: Meta data to update manual intervention.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: manualInterventionId
          type:
            - number
          description: |
            Id of the manual intervention.
      return:
        type:
          - Promise<azure-devops-extension-api.ManualIntervention>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateRelease
    name: 'updateRelease(Release, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a complete release object.
    syntax:
      content: >-
        function updateRelease(release: Release, project: string, releaseId:
        number)
      parameters:
        - id: release
          type:
            - azure-devops-extension-api.Release
          description: Release object for update.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            Id of the release to update.
      return:
        type:
          - Promise<azure-devops-extension-api.Release>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseApproval
    name: 'updateReleaseApproval(ReleaseApproval, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update status of an approval
    syntax:
      content: >-
        function updateReleaseApproval(approval: ReleaseApproval, project:
        string, approvalId: number)
      parameters:
        - id: approval
          type:
            - azure-devops-extension-api.ReleaseApproval
          description: 'ReleaseApproval object having status, approver and comments.'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: approvalId
          type:
            - number
          description: |
            Id of the approval.
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseApproval>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseApprovals
    name: 'updateReleaseApprovals(ReleaseApproval[], string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateReleaseApprovals(approvals: ReleaseApproval[], project:
        string)
      parameters:
        - id: approvals
          type:
            - 'azure-devops-extension-api.ReleaseApproval[]'
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.ReleaseApproval[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseDefinition
    name: 'updateReleaseDefinition(ReleaseDefinition, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a release definition.
    syntax:
      content: >-
        function updateReleaseDefinition(releaseDefinition: ReleaseDefinition,
        project: string)
      parameters:
        - id: releaseDefinition
          type:
            - azure-devops-extension-api.ReleaseDefinition
          description: Release definition object to update.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseDefinition>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseEnvironment
    name: >-
      updateReleaseEnvironment(ReleaseEnvironmentUpdateMetadata, string, number,
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the status of a release environment
    syntax:
      content: >-
        function updateReleaseEnvironment(environmentUpdateData:
        ReleaseEnvironmentUpdateMetadata, project: string, releaseId: number,
        environmentId: number)
      parameters:
        - id: environmentUpdateData
          type:
            - azure-devops-extension-api.ReleaseEnvironmentUpdateMetadata
          description: Environment update meta data.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: |
            Id of release environment.
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseEnvironment>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseResource
    name: 'updateReleaseResource(ReleaseUpdateMetadata, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update few properties of a release.
    syntax:
      content: >-
        function updateReleaseResource(releaseUpdateMetadata:
        ReleaseUpdateMetadata, project: string, releaseId: number)
      parameters:
        - id: releaseUpdateMetadata
          type:
            - azure-devops-extension-api.ReleaseUpdateMetadata
          description: Properties of release to update.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: |
            Id of the release to update.
      return:
        type:
          - Promise<azure-devops-extension-api.Release>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseSettings
    name: 'updateReleaseSettings(ReleaseSettings, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the release settings
    syntax:
      content: >-
        function updateReleaseSettings(releaseSettings: ReleaseSettings,
        project: string)
      parameters:
        - id: releaseSettings
          type:
            - azure-devops-extension-api.ReleaseSettings
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - Promise<azure-devops-extension-api.ReleaseSettings>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate
    name: ReleaseDefinitionEnvironmentTemplate
    spec.typeScript:
      - name: ReleaseDefinitionEnvironmentTemplate
        fullName: ReleaseDefinitionEnvironmentTemplate
        uid: azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate
  - uid: Promise<azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate>
    name: ReleaseDefinitionEnvironmentTemplate>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseDefinitionEnvironmentTemplate
        fullName: ReleaseDefinitionEnvironmentTemplate
        uid: azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate
      - name: '>'
        fullName: '>'
  - uid: 'azure-devops-extension-api.FavoriteItem[]'
    name: 'FavoriteItem[]'
    spec.typeScript:
      - name: FavoriteItem
        fullName: FavoriteItem
        uid: azure-devops-extension-api.FavoriteItem
      - name: '[]'
        fullName: '[]'
  - uid: 'Promise<azure-devops-extension-api.FavoriteItem[]>'
    name: 'FavoriteItem[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FavoriteItem
        fullName: FavoriteItem
        uid: azure-devops-extension-api.FavoriteItem
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.Folder
    name: Folder
    spec.typeScript:
      - name: Folder
        fullName: Folder
        uid: azure-devops-extension-api.Folder
  - uid: Promise<azure-devops-extension-api.Folder>
    name: Folder>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Folder
        fullName: Folder
        uid: azure-devops-extension-api.Folder
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ReleaseStartMetadata
    name: ReleaseStartMetadata
    spec.typeScript:
      - name: ReleaseStartMetadata
        fullName: ReleaseStartMetadata
        uid: azure-devops-extension-api.ReleaseStartMetadata
  - uid: Promise<azure-devops-extension-api.Release>
    name: Release>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Release
        fullName: Release
        uid: azure-devops-extension-api.Release
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ReleaseDefinition
    name: ReleaseDefinition
    spec.typeScript:
      - name: ReleaseDefinition
        fullName: ReleaseDefinition
        uid: azure-devops-extension-api.ReleaseDefinition
  - uid: Promise<azure-devops-extension-api.ReleaseDefinition>
    name: ReleaseDefinition>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseDefinition
        fullName: ReleaseDefinition
        uid: azure-devops-extension-api.ReleaseDefinition
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.AgentArtifactDefinition[]>'
    name: 'AgentArtifactDefinition[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AgentArtifactDefinition
        fullName: AgentArtifactDefinition
        uid: azure-devops-extension-api.AgentArtifactDefinition
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.ReleaseApproval>
    name: ReleaseApproval>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseApproval
        fullName: ReleaseApproval
        uid: azure-devops-extension-api.ReleaseApproval
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ApprovalStatus
    name: ApprovalStatus
    spec.typeScript:
      - name: ApprovalStatus
        fullName: ApprovalStatus
        uid: azure-devops-extension-api.ApprovalStatus
  - uid: azure-devops-extension-api.ApprovalType
    name: ApprovalType
    spec.typeScript:
      - name: ApprovalType
        fullName: ApprovalType
        uid: azure-devops-extension-api.ApprovalType
  - uid: azure-devops-extension-api.ReleaseQueryOrder
    name: ReleaseQueryOrder
    spec.typeScript:
      - name: ReleaseQueryOrder
        fullName: ReleaseQueryOrder
        uid: azure-devops-extension-api.ReleaseQueryOrder
  - uid: 'Promise<azure-devops-extension-api.ReleaseApproval[]>'
    name: 'ReleaseApproval[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseApproval
        fullName: ReleaseApproval
        uid: azure-devops-extension-api.ReleaseApproval
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ArtifactTypeDefinition[]>'
    name: 'ArtifactTypeDefinition[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ArtifactTypeDefinition
        fullName: ArtifactTypeDefinition
        uid: azure-devops-extension-api.ArtifactTypeDefinition
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.ArtifactVersionQueryResult>
    name: ArtifactVersionQueryResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ArtifactVersionQueryResult
        fullName: ArtifactVersionQueryResult
        uid: azure-devops-extension-api.ArtifactVersionQueryResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-devops-extension-api.Artifact[]'
    name: 'Artifact[]'
    spec.typeScript:
      - name: Artifact
        fullName: Artifact
        uid: azure-devops-extension-api.Artifact
      - name: '[]'
        fullName: '[]'
  - uid: 'Promise<azure-devops-extension-api.AutoTriggerIssue[]>'
    name: 'AutoTriggerIssue[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AutoTriggerIssue
        fullName: AutoTriggerIssue
        uid: azure-devops-extension-api.AutoTriggerIssue
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.DefinitionEnvironmentReference[]>'
    name: 'DefinitionEnvironmentReference[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DefinitionEnvironmentReference
        fullName: DefinitionEnvironmentReference
        uid: azure-devops-extension-api.DefinitionEnvironmentReference
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.DeploymentStatus
    name: DeploymentStatus
    spec.typeScript:
      - name: DeploymentStatus
        fullName: DeploymentStatus
        uid: azure-devops-extension-api.DeploymentStatus
  - uid: azure-devops-extension-api.DeploymentOperationStatus
    name: DeploymentOperationStatus
    spec.typeScript:
      - name: DeploymentOperationStatus
        fullName: DeploymentOperationStatus
        uid: azure-devops-extension-api.DeploymentOperationStatus
  - uid: 'Promise<azure-devops-extension-api.Deployment[]>'
    name: 'Deployment[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Deployment
        fullName: Deployment
        uid: azure-devops-extension-api.Deployment
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.DeploymentQueryParameters
    name: DeploymentQueryParameters
    spec.typeScript:
      - name: DeploymentQueryParameters
        fullName: DeploymentQueryParameters
        uid: azure-devops-extension-api.DeploymentQueryParameters
  - uid: azure-devops-extension-api.FolderPathQueryOrder
    name: FolderPathQueryOrder
    spec.typeScript:
      - name: FolderPathQueryOrder
        fullName: FolderPathQueryOrder
        uid: azure-devops-extension-api.FolderPathQueryOrder
  - uid: 'Promise<azure-devops-extension-api.Folder[]>'
    name: 'Folder[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Folder
        fullName: Folder
        uid: azure-devops-extension-api.Folder
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.InputValuesQuery
    name: InputValuesQuery
    spec.typeScript:
      - name: InputValuesQuery
        fullName: InputValuesQuery
        uid: azure-devops-extension-api.InputValuesQuery
  - uid: Promise<azure-devops-extension-api.InputValuesQuery>
    name: InputValuesQuery>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: InputValuesQuery
        fullName: InputValuesQuery
        uid: azure-devops-extension-api.InputValuesQuery
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.ManualIntervention>
    name: ManualIntervention>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ManualIntervention
        fullName: ManualIntervention
        uid: azure-devops-extension-api.ManualIntervention
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.ManualIntervention[]>'
    name: 'ManualIntervention[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ManualIntervention
        fullName: ManualIntervention
        uid: azure-devops-extension-api.ManualIntervention
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.Metric[]>'
    name: 'Metric[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Metric
        fullName: Metric
        uid: azure-devops-extension-api.Metric
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.ApprovalFilters
    name: ApprovalFilters
    spec.typeScript:
      - name: ApprovalFilters
        fullName: ApprovalFilters
        uid: azure-devops-extension-api.ApprovalFilters
  - uid: azure-devops-extension-api.SingleReleaseExpands
    name: SingleReleaseExpands
    spec.typeScript:
      - name: SingleReleaseExpands
        fullName: SingleReleaseExpands
        uid: azure-devops-extension-api.SingleReleaseExpands
  - uid: 'Promise<azure-devops-extension-api.Change[]>'
    name: 'Change[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Change
        fullName: Change
        uid: azure-devops-extension-api.Change
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ReleaseDefinitionRevision[]>'
    name: 'ReleaseDefinitionRevision[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseDefinitionRevision
        fullName: ReleaseDefinitionRevision
        uid: azure-devops-extension-api.ReleaseDefinitionRevision
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.ReleaseDefinitionSummary>
    name: ReleaseDefinitionSummary>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseDefinitionSummary
        fullName: ReleaseDefinitionSummary
        uid: azure-devops-extension-api.ReleaseDefinitionSummary
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ReleaseDefinitionExpands
    name: ReleaseDefinitionExpands
    spec.typeScript:
      - name: ReleaseDefinitionExpands
        fullName: ReleaseDefinitionExpands
        uid: azure-devops-extension-api.ReleaseDefinitionExpands
  - uid: azure-devops-extension-api.ReleaseDefinitionQueryOrder
    name: ReleaseDefinitionQueryOrder
    spec.typeScript:
      - name: ReleaseDefinitionQueryOrder
        fullName: ReleaseDefinitionQueryOrder
        uid: azure-devops-extension-api.ReleaseDefinitionQueryOrder
  - uid: 'Promise<azure-devops-extension-api.ReleaseDefinition[]>'
    name: 'ReleaseDefinition[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseDefinition
        fullName: ReleaseDefinition
        uid: azure-devops-extension-api.ReleaseDefinition
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.ReleaseEnvironment>
    name: ReleaseEnvironment>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseEnvironment
        fullName: ReleaseEnvironment
        uid: azure-devops-extension-api.ReleaseEnvironment
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.ReleaseRevision[]>'
    name: 'ReleaseRevision[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseRevision
        fullName: ReleaseRevision
        uid: azure-devops-extension-api.ReleaseRevision
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ProjectReference[]>'
    name: 'ProjectReference[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ProjectReference
        fullName: ProjectReference
        uid: azure-devops-extension-api.ProjectReference
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.ReleaseSettings>
    name: ReleaseSettings>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseSettings
        fullName: ReleaseSettings
        uid: azure-devops-extension-api.ReleaseSettings
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.ReleaseTaskAttachment[]>'
    name: 'ReleaseTaskAttachment[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseTaskAttachment
        fullName: ReleaseTaskAttachment
        uid: azure-devops-extension-api.ReleaseTaskAttachment
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ReleaseWorkItemRef[]>'
    name: 'ReleaseWorkItemRef[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseWorkItemRef
        fullName: ReleaseWorkItemRef
        uid: azure-devops-extension-api.ReleaseWorkItemRef
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.ReleaseStatus
    name: ReleaseStatus
    spec.typeScript:
      - name: ReleaseStatus
        fullName: ReleaseStatus
        uid: azure-devops-extension-api.ReleaseStatus
  - uid: azure-devops-extension-api.ReleaseExpands
    name: ReleaseExpands
    spec.typeScript:
      - name: ReleaseExpands
        fullName: ReleaseExpands
        uid: azure-devops-extension-api.ReleaseExpands
  - uid: 'Promise<azure-devops-extension-api.Release[]>'
    name: 'Release[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Release
        fullName: Release
        uid: azure-devops-extension-api.Release
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.SummaryMailSection[]>'
    name: 'SummaryMailSection[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SummaryMailSection
        fullName: SummaryMailSection
        uid: azure-devops-extension-api.SummaryMailSection
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ReleaseTask[]>'
    name: 'ReleaseTask[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseTask
        fullName: ReleaseTask
        uid: azure-devops-extension-api.ReleaseTask
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate[]>'
    name: 'ReleaseDefinitionEnvironmentTemplate[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseDefinitionEnvironmentTemplate
        fullName: ReleaseDefinitionEnvironmentTemplate
        uid: azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.MailMessage
    name: MailMessage
    spec.typeScript:
      - name: MailMessage
        fullName: MailMessage
        uid: azure-devops-extension-api.MailMessage
  - uid: azure-devops-extension-api.ReleaseDefinitionUndeleteParameter
    name: ReleaseDefinitionUndeleteParameter
    spec.typeScript:
      - name: ReleaseDefinitionUndeleteParameter
        fullName: ReleaseDefinitionUndeleteParameter
        uid: azure-devops-extension-api.ReleaseDefinitionUndeleteParameter
  - uid: azure-devops-extension-api.GateUpdateMetadata
    name: GateUpdateMetadata
    spec.typeScript:
      - name: GateUpdateMetadata
        fullName: GateUpdateMetadata
        uid: azure-devops-extension-api.GateUpdateMetadata
  - uid: Promise<azure-devops-extension-api.ReleaseGates>
    name: ReleaseGates>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReleaseGates
        fullName: ReleaseGates
        uid: azure-devops-extension-api.ReleaseGates
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ManualInterventionUpdateMetadata
    name: ManualInterventionUpdateMetadata
    spec.typeScript:
      - name: ManualInterventionUpdateMetadata
        fullName: ManualInterventionUpdateMetadata
        uid: azure-devops-extension-api.ManualInterventionUpdateMetadata
  - uid: azure-devops-extension-api.Release
    name: Release
    spec.typeScript:
      - name: Release
        fullName: Release
        uid: azure-devops-extension-api.Release
  - uid: azure-devops-extension-api.ReleaseApproval
    name: ReleaseApproval
    spec.typeScript:
      - name: ReleaseApproval
        fullName: ReleaseApproval
        uid: azure-devops-extension-api.ReleaseApproval
  - uid: 'azure-devops-extension-api.ReleaseApproval[]'
    name: 'ReleaseApproval[]'
    spec.typeScript:
      - name: ReleaseApproval
        fullName: ReleaseApproval
        uid: azure-devops-extension-api.ReleaseApproval
      - name: '[]'
        fullName: '[]'
  - uid: azure-devops-extension-api.ReleaseEnvironmentUpdateMetadata
    name: ReleaseEnvironmentUpdateMetadata
    spec.typeScript:
      - name: ReleaseEnvironmentUpdateMetadata
        fullName: ReleaseEnvironmentUpdateMetadata
        uid: azure-devops-extension-api.ReleaseEnvironmentUpdateMetadata
  - uid: azure-devops-extension-api.ReleaseUpdateMetadata
    name: ReleaseUpdateMetadata
    spec.typeScript:
      - name: ReleaseUpdateMetadata
        fullName: ReleaseUpdateMetadata
        uid: azure-devops-extension-api.ReleaseUpdateMetadata
  - uid: azure-devops-extension-api.ReleaseSettings
    name: ReleaseSettings
    spec.typeScript:
      - name: ReleaseSettings
        fullName: ReleaseSettings
        uid: azure-devops-extension-api.ReleaseSettings
