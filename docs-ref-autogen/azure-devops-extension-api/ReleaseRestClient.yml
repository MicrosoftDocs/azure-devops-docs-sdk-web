### YamlMime:TSType
name: ReleaseRestClient
uid: azure-devops-extension-api.ReleaseRestClient
package: azure-devops-extension-api
summary: ''
fullName: ReleaseRestClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ReleaseRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.ReleaseRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ReleaseRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
properties:
  - name: RESOURCE_AREA_ID
    uid: azure-devops-extension-api.ReleaseRestClient.RESOURCE_AREA_ID
    package: azure-devops-extension-api
    summary: ''
    fullName: RESOURCE_AREA_ID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        description: ''
        type: string
methods:
  - name: 'addDefinitionTag(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.addDefinitionTag
    package: azure-devops-extension-api
    summary: Adds a tag to a definition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addDefinitionTag(project: string, releaseDefinitionId: number,
        tag: string): Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseDefinitionId
          type: number
          description: '-'
        - id: tag
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'addDefinitionTags(string[], string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.addDefinitionTags
    package: azure-devops-extension-api
    summary: Adds multiple tags to a definition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addDefinitionTags(tags: string[], project: string,
        releaseDefinitionId: number): Promise<string[]>
      parameters:
        - id: tags
          type: 'string[]'
          description: '-'
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseDefinitionId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'addReleaseTag(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.addReleaseTag
    package: azure-devops-extension-api
    summary: Adds a tag to a releaseId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addReleaseTag(project: string, releaseId: number, tag: string):
        Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: tag
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'addReleaseTags(string[], string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.addReleaseTags
    package: azure-devops-extension-api
    summary: Adds tag to a release
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addReleaseTags(tags: string[], project: string, releaseId:
        number): Promise<string[]>
      parameters:
        - id: tags
          type: 'string[]'
          description: '-'
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: >-
      createDefinitionEnvironmentTemplate(ReleaseDefinitionEnvironmentTemplate,
      string)
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.createDefinitionEnvironmentTemplate
    package: azure-devops-extension-api
    summary: Creates a definition environment template
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDefinitionEnvironmentTemplate(template:
        ReleaseDefinitionEnvironmentTemplate, project: string):
        Promise<ReleaseDefinitionEnvironmentTemplate>
      parameters:
        - id: template
          type: >-
            <xref
            uid="azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate"
            />
          description: Definition environment template to create
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate"
          />&gt;
  - name: 'createFavorites(FavoriteItem[], string, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.createFavorites
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFavorites(favoriteItems: FavoriteItem[], project: string,
        scope: string, identityId?: string): Promise<FavoriteItem[]>
      parameters:
        - id: favoriteItems
          type: '<xref uid="azure-devops-extension-api.FavoriteItem" />[]'
          description: '-'
        - id: project
          type: string
          description: Project ID or project name
        - id: scope
          type: string
          description: '-'
        - id: identityId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.FavoriteItem"
          />[]&gt;
  - name: 'createFolder(Folder, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.createFolder
    package: azure-devops-extension-api
    summary: Creates a new folder.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFolder(folder: Folder, project: string, path?: string):
        Promise<Folder>
      parameters:
        - id: folder
          type: <xref uid="azure-devops-extension-api.Folder" />
          description: folder.
        - id: project
          type: string
          description: Project ID or project name
        - id: path
          type: string
          description: |
            Path of the folder.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Folder" />&gt;
  - name: 'createRelease(ReleaseStartMetadata, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.createRelease
    package: azure-devops-extension-api
    summary: Create a release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createRelease(releaseStartMetadata: ReleaseStartMetadata,
        project: string): Promise<Release>
      parameters:
        - id: releaseStartMetadata
          type: <xref uid="azure-devops-extension-api.ReleaseStartMetadata" />
          description: Metadata to create a release.
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Release" />&gt;
  - name: 'createReleaseDefinition(ReleaseDefinition, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.createReleaseDefinition
    package: azure-devops-extension-api
    summary: Create a release definition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createReleaseDefinition(releaseDefinition: ReleaseDefinition,
        project: string): Promise<ReleaseDefinition>
      parameters:
        - id: releaseDefinition
          type: <xref uid="azure-devops-extension-api.ReleaseDefinition" />
          description: release definition object to create.
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseDefinition"
          />&gt;
  - name: 'deleteDefinitionEnvironmentTemplate(string, string)'
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.deleteDefinitionEnvironmentTemplate
    package: azure-devops-extension-api
    summary: Delete a definition environment template
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDefinitionEnvironmentTemplate(project: string,
        templateId: string): Promise<void>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: templateId
          type: string
          description: |
            Id of the definition environment template
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'deleteDefinitionTag(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.deleteDefinitionTag
    package: azure-devops-extension-api
    summary: Deletes a tag from a definition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDefinitionTag(project: string, releaseDefinitionId:
        number, tag: string): Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseDefinitionId
          type: number
          description: '-'
        - id: tag
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'deleteFavorites(string, string, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.deleteFavorites
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteFavorites(project: string, scope: string, identityId?:
        string, favoriteItemIds?: string): Promise<void>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: scope
          type: string
          description: '-'
        - id: identityId
          type: string
          description: '-'
        - id: favoriteItemIds
          type: string
          description: |
            -
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'deleteFolder(string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.deleteFolder
    package: azure-devops-extension-api
    summary: >-
      Deletes a definition folder for given folder name and path and all it's
      existing definitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteFolder(project: string, path: string): Promise<void>'
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: path
          type: string
          description: |
            Path of the folder to delete.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'deleteRelease(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.deleteRelease
    package: azure-devops-extension-api
    summary: Soft delete a release
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRelease(project: string, releaseId: number, comment?:
        string): Promise<void>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: comment
          type: string
          description: |
            Comment for deleting a release.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'deleteReleaseDefinition(string, number, string, boolean)'
    uid: azure-devops-extension-api.ReleaseRestClient.deleteReleaseDefinition
    package: azure-devops-extension-api
    summary: Delete a release definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteReleaseDefinition(project: string, definitionId: number,
        comment?: string, forceDelete?: boolean): Promise<void>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: Id of the release definition.
        - id: comment
          type: string
          description: Comment for deleting a release definition.
        - id: forceDelete
          type: boolean
          description: >
            'true' to automatically cancel any in-progress release deployments
            and proceed with release definition deletion . Default is 'false'.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'deleteReleaseTag(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.deleteReleaseTag
    package: azure-devops-extension-api
    summary: Deletes a tag from a release
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteReleaseTag(project: string, releaseId: number, tag:
        string): Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: tag
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'getAgentArtifactDefinitions(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getAgentArtifactDefinitions
    package: azure-devops-extension-api
    summary: Returns the artifact details that automation agent requires
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAgentArtifactDefinitions(project: string, releaseId:
        number): Promise<AgentArtifactDefinition[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.AgentArtifactDefinition" />[]&gt;
  - name: 'getApproval(string, number, boolean)'
    uid: azure-devops-extension-api.ReleaseRestClient.getApproval
    package: azure-devops-extension-api
    summary: Get an approval.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getApproval(project: string, approvalId: number,
        includeHistory?: boolean): Promise<ReleaseApproval>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: approvalId
          type: number
          description: Id of the approval.
        - id: includeHistory
          type: boolean
          description: |
            'true' to include history of the approval. Default is 'false'.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseApproval"
          />&gt;
  - name: 'getApprovalHistory(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getApprovalHistory
    package: azure-devops-extension-api
    summary: Get approval history.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getApprovalHistory(project: string, approvalStepId: number):
        Promise<ReleaseApproval>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: approvalStepId
          type: number
          description: |
            Id of the approval.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseApproval"
          />&gt;
  - name: >-
      getApprovals(string, string, ApprovalStatus, number[], ApprovalType,
      number, number, ReleaseQueryOrder, boolean)
    uid: azure-devops-extension-api.ReleaseRestClient.getApprovals
    package: azure-devops-extension-api
    summary: Get a list of approvals
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getApprovals(project: string, assignedToFilter?: string,
        statusFilter?: ApprovalStatus, releaseIdsFilter?: number[], typeFilter?:
        ApprovalType, top?: number, continuationToken?: number, queryOrder?:
        ReleaseQueryOrder, includeMyGroupApprovals?: boolean):
        Promise<ReleaseApproval[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: assignedToFilter
          type: string
          description: Approvals assigned to this user.
        - id: statusFilter
          type: <xref uid="azure-devops-extension-api.ApprovalStatus" />
          description: Approvals with this status. Default is 'pending'.
        - id: releaseIdsFilter
          type: 'number[]'
          description: >-
            Approvals for release id(s) mentioned in the filter. Multiple
            releases can be mentioned by separating them with ',' e.g.
            releaseIdsFilter=1,2,3,4.
        - id: typeFilter
          type: <xref uid="azure-devops-extension-api.ApprovalType" />
          description: Approval with this type.
        - id: top
          type: number
          description: Number of approvals to get. Default is 50.
        - id: continuationToken
          type: number
          description: Gets the approvals after the continuation token provided.
        - id: queryOrder
          type: <xref uid="azure-devops-extension-api.ReleaseQueryOrder" />
          description: >-
            Gets the results in the defined order of created approvals. Default
            is 'descending'.
        - id: includeMyGroupApprovals
          type: boolean
          description: |
            'true' to include my group approvals. Default is 'false'.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseApproval"
          />[]&gt;
  - name: getArtifactTypeDefinitions(string)
    uid: azure-devops-extension-api.ReleaseRestClient.getArtifactTypeDefinitions
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getArtifactTypeDefinitions(project: string):
        Promise<ArtifactTypeDefinition[]>
      parameters:
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ArtifactTypeDefinition" />[]&gt;
  - name: 'getArtifactVersions(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getArtifactVersions
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getArtifactVersions(project: string, releaseDefinitionId:
        number): Promise<ArtifactVersionQueryResult>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseDefinitionId
          type: number
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ArtifactVersionQueryResult" />&gt;
  - name: 'getArtifactVersionsForSources(Artifact[], string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getArtifactVersionsForSources
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getArtifactVersionsForSources(artifacts: Artifact[], project:
        string): Promise<ArtifactVersionQueryResult>
      parameters:
        - id: artifacts
          type: '<xref uid="azure-devops-extension-api.Artifact" />[]'
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ArtifactVersionQueryResult" />&gt;
  - name: 'getAutoTriggerIssues(string, string, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getAutoTriggerIssues
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAutoTriggerIssues(artifactType: string, sourceId: string,
        artifactVersionId: string, project?: string):
        Promise<AutoTriggerIssue[]>
      parameters:
        - id: artifactType
          type: string
          description: '-'
        - id: sourceId
          type: string
          description: '-'
        - id: artifactVersionId
          type: string
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.AutoTriggerIssue"
          />[]&gt;
  - name: 'getDefinitionEnvironments(string, string, string[])'
    uid: azure-devops-extension-api.ReleaseRestClient.getDefinitionEnvironments
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDefinitionEnvironments(project: string, taskGroupId?:
        string, propertyFilters?: string[]):
        Promise<DefinitionEnvironmentReference[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: taskGroupId
          type: string
          description: '-'
        - id: propertyFilters
          type: 'string[]'
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.DefinitionEnvironmentReference"
          />[]&gt;
  - name: 'getDefinitionEnvironmentTemplate(string, string)'
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.getDefinitionEnvironmentTemplate
    package: azure-devops-extension-api
    summary: Gets a definition environment template
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDefinitionEnvironmentTemplate(project: string, templateId:
        string): Promise<ReleaseDefinitionEnvironmentTemplate>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: templateId
          type: string
          description: |
            Id of the definition environment template
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate"
          />&gt;
  - name: 'getDefinitionRevision(string, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getDefinitionRevision
    package: azure-devops-extension-api
    summary: Get release definition for a given definitionId and revision
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDefinitionRevision(project: string, definitionId: number,
        revision: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: Id of the definition.
        - id: revision
          type: number
          description: |
            Id of the revision.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: 'getDefinitionTags(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getDefinitionTags
    package: azure-devops-extension-api
    summary: Gets the tags for a definition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDefinitionTags(project: string, releaseDefinitionId:
        number): Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseDefinitionId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'getDeploymentBadge(string, number, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getDeploymentBadge
    package: azure-devops-extension-api
    summary: >-
      Gets a badge that indicates the status of the most recent deployment for
      an environment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeploymentBadge(projectId: string, releaseDefinitionId:
        number, environmentId: number, branchName?: string): Promise<string>
      parameters:
        - id: projectId
          type: string
          description: The ID of the Project.
        - id: releaseDefinitionId
          type: number
          description: The ID of the Release Definition.
        - id: environmentId
          type: number
          description: The ID of the Environment.
        - id: branchName
          type: string
          description: |
            The name of the branch.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: >-
      getDeployments(string, number, number, string, Date, Date,
      DeploymentStatus, DeploymentOperationStatus, boolean, ReleaseQueryOrder,
      number, number, string, Date, Date, string)
    uid: azure-devops-extension-api.ReleaseRestClient.getDeployments
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeployments(project: string, definitionId?: number,
        definitionEnvironmentId?: number, createdBy?: string, minModifiedTime?:
        Date, maxModifiedTime?: Date, deploymentStatus?: DeploymentStatus,
        operationStatus?: DeploymentOperationStatus, latestAttemptsOnly?:
        boolean, queryOrder?: ReleaseQueryOrder, top?: number,
        continuationToken?: number, createdFor?: string, minStartedTime?: Date,
        maxStartedTime?: Date, sourceBranch?: string): Promise<Deployment[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: '-'
        - id: definitionEnvironmentId
          type: number
          description: '-'
        - id: createdBy
          type: string
          description: '-'
        - id: minModifiedTime
          type: Date
          description: '-'
        - id: maxModifiedTime
          type: Date
          description: '-'
        - id: deploymentStatus
          type: <xref uid="azure-devops-extension-api.DeploymentStatus" />
          description: '-'
        - id: operationStatus
          type: <xref uid="azure-devops-extension-api.DeploymentOperationStatus" />
          description: '-'
        - id: latestAttemptsOnly
          type: boolean
          description: '-'
        - id: queryOrder
          type: <xref uid="azure-devops-extension-api.ReleaseQueryOrder" />
          description: '-'
        - id: top
          type: number
          description: '-'
        - id: continuationToken
          type: number
          description: '-'
        - id: createdFor
          type: string
          description: '-'
        - id: minStartedTime
          type: Date
          description: '-'
        - id: maxStartedTime
          type: Date
          description: '-'
        - id: sourceBranch
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Deployment" />[]&gt;'
  - name: 'getDeploymentsForMultipleEnvironments(DeploymentQueryParameters, string)'
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.getDeploymentsForMultipleEnvironments
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeploymentsForMultipleEnvironments(queryParameters:
        DeploymentQueryParameters, project: string): Promise<Deployment[]>
      parameters:
        - id: queryParameters
          type: <xref uid="azure-devops-extension-api.DeploymentQueryParameters" />
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Deployment" />[]&gt;'
  - name: 'getFavorites(string, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getFavorites
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFavorites(project: string, scope: string, identityId?:
        string): Promise<FavoriteItem[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: scope
          type: string
          description: '-'
        - id: identityId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.FavoriteItem"
          />[]&gt;
  - name: getFlightAssignments(string)
    uid: azure-devops-extension-api.ReleaseRestClient.getFlightAssignments
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getFlightAssignments(flightName?: string): Promise<string[]>'
      parameters:
        - id: flightName
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'getFolders(string, string, FolderPathQueryOrder)'
    uid: azure-devops-extension-api.ReleaseRestClient.getFolders
    package: azure-devops-extension-api
    summary: Gets folders.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        FolderPathQueryOrder): Promise<Folder[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: path
          type: string
          description: Path of the folder.
        - id: queryOrder
          type: <xref uid="azure-devops-extension-api.FolderPathQueryOrder" />
          description: |
            Gets the results in the defined order. Default is 'None'.
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Folder" />[]&gt;'
  - name: 'getGateLog(string, number, number, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getGateLog
    package: azure-devops-extension-api
    summary: Gets gate logs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getGateLog(project: string, releaseId: number, environmentId:
        number, gateId: number, taskId: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of release environment.
        - id: gateId
          type: number
          description: Id of the gate.
        - id: taskId
          type: number
          description: |
            ReleaseTask Id for the log.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: 'getInputValues(InputValuesQuery, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getInputValues
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInputValues(query: InputValuesQuery, project: string):
        Promise<InputValuesQuery>
      parameters:
        - id: query
          type: <xref uid="azure-devops-extension-api.InputValuesQuery" />
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InputValuesQuery"
          />&gt;
  - name: 'getIssues(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getIssues
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIssues(project: string, buildId: number, sourceId?: string):
        Promise<AutoTriggerIssue[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: buildId
          type: number
          description: '-'
        - id: sourceId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.AutoTriggerIssue"
          />[]&gt;
  - name: 'getLog(string, number, number, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getLog
    package: azure-devops-extension-api
    summary: Gets logs
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLog(project: string, releaseId: number, environmentId:
        number, taskId: number, attemptId?: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of release environment.
        - id: taskId
          type: number
          description: ReleaseTask Id for the log.
        - id: attemptId
          type: number
          description: |
            Id of the attempt.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: 'getLogs(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getLogs
    package: azure-devops-extension-api
    summary: Get logs for a release Id.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLogs(project: string, releaseId: number):
        Promise<ArrayBuffer>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            Id of the release.
      return:
        description: ''
        type: Promise&lt;ArrayBuffer&gt;
  - name: 'getManualIntervention(string, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getManualIntervention
    package: azure-devops-extension-api
    summary: Get manual intervention for a given release and manual intervention id.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getManualIntervention(project: string, releaseId: number,
        manualInterventionId: number): Promise<ManualIntervention>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: manualInterventionId
          type: number
          description: |
            Id of the manual intervention.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ManualIntervention"
          />&gt;
  - name: 'getManualInterventions(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getManualInterventions
    package: azure-devops-extension-api
    summary: List all manual interventions for a given release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getManualInterventions(project: string, releaseId: number):
        Promise<ManualIntervention[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            Id of the release.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ManualIntervention"
          />[]&gt;
  - name: 'getMetrics(string, Date)'
    uid: azure-devops-extension-api.ReleaseRestClient.getMetrics
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMetrics(project: string, minMetricsTime?: Date):
        Promise<Metric[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: minMetricsTime
          type: Date
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Metric" />[]&gt;'
  - name: >-
      getRelease(string, number, ApprovalFilters, string[],
      SingleReleaseExpands, number)
    uid: azure-devops-extension-api.ReleaseRestClient.getRelease
    package: azure-devops-extension-api
    summary: Get a Release
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getRelease(project: string, releaseId: number,
        approvalFilters?: ApprovalFilters, propertyFilters?: string[], expand?:
        SingleReleaseExpands, topGateRecords?: number): Promise<Release>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: approvalFilters
          type: <xref uid="azure-devops-extension-api.ApprovalFilters" />
          description: >-
            A filter which would allow fetching approval steps selectively based
            on whether it is automated, or manual. This would also decide
            whether we should fetch pre and post approval snapshots. Assumes All
            by default
        - id: propertyFilters
          type: 'string[]'
          description: >-
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Release will contain values for the specified
            property Ids (if they exist). If not set, properties will not be
            included.
        - id: expand
          type: <xref uid="azure-devops-extension-api.SingleReleaseExpands" />
          description: A property that should be expanded in the release.
        - id: topGateRecords
          type: number
          description: |
            Number of release gate records to get. Default is 5.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Release" />&gt;
  - name: 'getReleaseChanges(string, number, number, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseChanges
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseChanges(project: string, releaseId: number,
        baseReleaseId?: number, top?: number, artifactAlias?: string):
        Promise<Change[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: baseReleaseId
          type: number
          description: '-'
        - id: top
          type: number
          description: '-'
        - id: artifactAlias
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Change" />[]&gt;'
  - name: 'getReleaseDefinition(string, number, string[])'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinition
    package: azure-devops-extension-api
    summary: Get a release definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseDefinition(project: string, definitionId: number,
        propertyFilters?: string[]): Promise<ReleaseDefinition>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: Id of the release definition.
        - id: propertyFilters
          type: 'string[]'
          description: >
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Release Definition will contain values for the
            specified property Ids (if they exist). If not set, properties will
            not be included.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseDefinition"
          />&gt;
  - name: 'getReleaseDefinitionHistory(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionHistory
    package: azure-devops-extension-api
    summary: Get revision history for a release definition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseDefinitionHistory(project: string, definitionId:
        number): Promise<ReleaseDefinitionRevision[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: |
            Id of the definition.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseDefinitionRevision" />[]&gt;
  - name: 'getReleaseDefinitionRevision(string, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionRevision
    package: azure-devops-extension-api
    summary: Get release definition of a given revision.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseDefinitionRevision(project: string, definitionId:
        number, revision: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: Id of the release definition.
        - id: revision
          type: number
          description: |
            Revision number of the release definition.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: >-
      getReleaseDefinitions(string, string, ReleaseDefinitionExpands, string,
      string, number, string, ReleaseDefinitionQueryOrder, string, boolean,
      string[], string[], string[], boolean, boolean)
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitions
    package: azure-devops-extension-api
    summary: Get a list of release definitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseDefinitions(project: string, searchText?: string,
        expand?: ReleaseDefinitionExpands, artifactType?: string,
        artifactSourceId?: string, top?: number, continuationToken?: string,
        queryOrder?: ReleaseDefinitionQueryOrder, path?: string,
        isExactNameMatch?: boolean, tagFilter?: string[], propertyFilters?:
        string[], definitionIdFilter?: string[], isDeleted?: boolean,
        searchTextContainsFolderName?: boolean): Promise<ReleaseDefinition[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: searchText
          type: string
          description: Get release definitions with names containing searchText.
        - id: expand
          type: <xref uid="azure-devops-extension-api.ReleaseDefinitionExpands" />
          description: >-
            The properties that should be expanded in the list of Release
            definitions.
        - id: artifactType
          type: string
          description: >-
            Release definitions with given artifactType will be returned. Values
            can be Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
        - id: artifactSourceId
          type: string
          description: >-
            Release definitions with given artifactSourceId will be returned.
            e.g. For build it would be \{projectGuid\}:\{BuildDefinitionId\},
            for Jenkins it would be
            \{JenkinsConnectionId\}:\{JenkinsDefinitionId\}, for TfsOnPrem it
            would be
            \{TfsOnPremConnectionId\}:\{ProjectName\}:\{TfsOnPremDefinitionId\}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json at
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
        - id: top
          type: number
          description: Number of release definitions to get.
        - id: continuationToken
          type: string
          description: Gets the release definitions after the continuation token provided.
        - id: queryOrder
          type: >-
            <xref uid="azure-devops-extension-api.ReleaseDefinitionQueryOrder"
            />
          description: Gets the results in the defined order. Default is 'IdAscending'.
        - id: path
          type: string
          description: Gets the release definitions under the specified path.
        - id: isExactNameMatch
          type: boolean
          description: >-
            'true'to gets the release definitions with exact match as specified
            in searchText. Default is 'false'.
        - id: tagFilter
          type: 'string[]'
          description: >-
            A comma-delimited list of tags. Only release definitions with these
            tags will be returned.
        - id: propertyFilters
          type: 'string[]'
          description: >-
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Release Definitions will contain values for the
            specified property Ids (if they exist). If not set, properties will
            not be included. Note that this will not filter out any Release
            Definition from results irrespective of whether it has property set
            or not.
        - id: definitionIdFilter
          type: 'string[]'
          description: A comma-delimited list of release definitions to retrieve.
        - id: isDeleted
          type: boolean
          description: >-
            'true' to get release definitions that has been deleted. Default is
            'false'
        - id: searchTextContainsFolderName
          type: boolean
          description: >
            'true' to get the release definitions under the folder with name as
            specified in searchText. Default is 'false'.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseDefinition"
          />[]&gt;
  - name: 'getReleaseDefinitionSummary(string, number, number, boolean, number[])'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseDefinitionSummary
    package: azure-devops-extension-api
    summary: Get release summary of a given definition Id.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseDefinitionSummary(project: string, definitionId:
        number, releaseCount: number, includeArtifact?: boolean,
        definitionEnvironmentIdsFilter?: number[]):
        Promise<ReleaseDefinitionSummary>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: Id of the definition to get release summary.
        - id: releaseCount
          type: number
          description: Count of releases to be included in summary.
        - id: includeArtifact
          type: boolean
          description: Include artifact details.Default is 'false'.
        - id: definitionEnvironmentIdsFilter
          type: 'number[]'
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseDefinitionSummary" />&gt;
  - name: 'getReleaseEnvironment(string, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseEnvironment
    package: azure-devops-extension-api
    summary: Get a release environment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseEnvironment(project: string, releaseId: number,
        environmentId: number): Promise<ReleaseEnvironment>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: |
            Id of the release environment.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseEnvironment"
          />&gt;
  - name: 'getReleaseHistory(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseHistory
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseHistory(project: string, releaseId: number):
        Promise<ReleaseRevision[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseRevision"
          />[]&gt;
  - name: 'getReleaseProjects(string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseProjects
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseProjects(artifactType: string, artifactSourceId:
        string): Promise<ProjectReference[]>
      parameters:
        - id: artifactType
          type: string
          description: '-'
        - id: artifactSourceId
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ProjectReference"
          />[]&gt;
  - name: 'getReleaseRevision(string, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseRevision
    package: azure-devops-extension-api
    summary: Get release for a given revision number.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseRevision(project: string, releaseId: number,
        definitionSnapshotRevision: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: definitionSnapshotRevision
          type: number
          description: |
            Definition snapshot revision number.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: >-
      getReleases(string, number, number, string, string, ReleaseStatus, number,
      Date, Date, ReleaseQueryOrder, number, number, ReleaseExpands, string,
      string, string, string, boolean, string[], string[], number[], string)
    uid: azure-devops-extension-api.ReleaseRestClient.getReleases
    package: azure-devops-extension-api
    summary: Get a list of releases
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleases(project?: string, definitionId?: number,
        definitionEnvironmentId?: number, searchText?: string, createdBy?:
        string, statusFilter?: ReleaseStatus, environmentStatusFilter?: number,
        minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?:
        ReleaseQueryOrder, top?: number, continuationToken?: number, expand?:
        ReleaseExpands, artifactTypeId?: string, sourceId?: string,
        artifactVersionId?: string, sourceBranchFilter?: string, isDeleted?:
        boolean, tagFilter?: string[], propertyFilters?: string[],
        releaseIdFilter?: number[], path?: string): Promise<Release[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: Releases from this release definition Id.
        - id: definitionEnvironmentId
          type: number
          description: '-'
        - id: searchText
          type: string
          description: Releases with names containing searchText.
        - id: createdBy
          type: string
          description: Releases created by this user.
        - id: statusFilter
          type: <xref uid="azure-devops-extension-api.ReleaseStatus" />
          description: Releases that have this status.
        - id: environmentStatusFilter
          type: number
          description: '-'
        - id: minCreatedTime
          type: Date
          description: Releases that were created after this time.
        - id: maxCreatedTime
          type: Date
          description: Releases that were created before this time.
        - id: queryOrder
          type: <xref uid="azure-devops-extension-api.ReleaseQueryOrder" />
          description: >-
            Gets the results in the defined order of created date for releases.
            Default is descending.
        - id: top
          type: number
          description: Number of releases to get. Default is 50.
        - id: continuationToken
          type: number
          description: Gets the releases after the continuation token provided.
        - id: expand
          type: <xref uid="azure-devops-extension-api.ReleaseExpands" />
          description: The property that should be expanded in the list of releases.
        - id: artifactTypeId
          type: string
          description: >-
            Releases with given artifactTypeId will be returned. Values can be
            Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
        - id: sourceId
          type: string
          description: >-
            Unique identifier of the artifact used. e.g. For build it would be
            \{projectGuid\}:\{BuildDefinitionId\}, for Jenkins it would be
            \{JenkinsConnectionId\}:\{JenkinsDefinitionId\}, for TfsOnPrem it
            would be
            \{TfsOnPremConnectionId\}:\{ProjectName\}:\{TfsOnPremDefinitionId\}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
        - id: artifactVersionId
          type: string
          description: >-
            Releases with given artifactVersionId will be returned. E.g. in case
            of Build artifactType, it is buildId.
        - id: sourceBranchFilter
          type: string
          description: Releases with given sourceBranchFilter will be returned.
        - id: isDeleted
          type: boolean
          description: 'Gets the soft deleted releases, if true.'
        - id: tagFilter
          type: 'string[]'
          description: >-
            A comma-delimited list of tags. Only releases with these tags will
            be returned.
        - id: propertyFilters
          type: 'string[]'
          description: >-
            A comma-delimited list of extended properties to be retrieved. If
            set, the returned Releases will contain values for the specified
            property Ids (if they exist). If not set, properties will not be
            included. Note that this will not filter out any Release from
            results irrespective of whether it has property set or not.
        - id: releaseIdFilter
          type: 'number[]'
          description: >-
            A comma-delimited list of releases Ids. Only releases with these Ids
            will be returned.
        - id: path
          type: string
          description: |
            Releases under this folder path will be returned
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.Release" />[]&gt;'
  - name: getReleaseSettings(string)
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseSettings
    package: azure-devops-extension-api
    summary: Gets the release settings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getReleaseSettings(project: string): Promise<ReleaseSettings>'
      parameters:
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseSettings"
          />&gt;
  - name: 'getReleaseTags(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseTags
    package: azure-devops-extension-api
    summary: Gets the tags for a release
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseTags(project: string, releaseId: number):
        Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: >-
      getReleaseTaskAttachmentContent(string, number, number, number, string,
      string, string, string, string)
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.getReleaseTaskAttachmentContent
    package: azure-devops-extension-api
    summary: Get a release task attachment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseTaskAttachmentContent(project: string, releaseId:
        number, environmentId: number, attemptId: number, planId: string,
        timelineId: string, recordId: string, type: string, name: string):
        Promise<ArrayBuffer>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of the release environment.
        - id: attemptId
          type: number
          description: Attempt number of deployment.
        - id: planId
          type: string
          description: Plan Id of the deploy phase.
        - id: timelineId
          type: string
          description: Timeline Id of the task.
        - id: recordId
          type: string
          description: Record Id of attachment.
        - id: type
          type: string
          description: Type of the attachment.
        - id: name
          type: string
          description: |
            Name of the attachment.
      return:
        description: ''
        type: Promise&lt;ArrayBuffer&gt;
  - name: 'getReleaseTaskAttachments(string, number, number, number, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseTaskAttachments
    package: azure-devops-extension-api
    summary: Get the release task attachments.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseTaskAttachments(project: string, releaseId: number,
        environmentId: number, attemptId: number, planId: string, type: string):
        Promise<ReleaseTaskAttachment[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of the release environment.
        - id: attemptId
          type: number
          description: Attempt number of deployment.
        - id: planId
          type: string
          description: Plan Id of the deploy phase.
        - id: type
          type: string
          description: |
            Type of the attachment.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseTaskAttachment" />[]&gt;
  - name: 'getReleaseWorkItemsRefs(string, number, number, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getReleaseWorkItemsRefs
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getReleaseWorkItemsRefs(project: string, releaseId: number,
        baseReleaseId?: number, top?: number, artifactAlias?: string):
        Promise<ReleaseWorkItemRef[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: baseReleaseId
          type: number
          description: '-'
        - id: top
          type: number
          description: '-'
        - id: artifactAlias
          type: string
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseWorkItemRef"
          />[]&gt;
  - name: 'getSourceBranches(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getSourceBranches
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSourceBranches(project: string, definitionId: number):
        Promise<string[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: 'getSummaryMailSections(string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getSummaryMailSections
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSummaryMailSections(project: string, releaseId: number):
        Promise<SummaryMailSection[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.SummaryMailSection"
          />[]&gt;
  - name: getTags(string)
    uid: azure-devops-extension-api.ReleaseRestClient.getTags
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTags(project: string): Promise<string[]>'
      parameters:
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: 'Promise&lt;string[]&gt;'
  - name: >-
      getTaskAttachmentContent(string, number, number, number, string, string,
      string, string)
    uid: azure-devops-extension-api.ReleaseRestClient.getTaskAttachmentContent
    package: azure-devops-extension-api
    summary: Get a task attachment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaskAttachmentContent(project: string, releaseId: number,
        environmentId: number, attemptId: number, timelineId: string, recordId:
        string, type: string, name: string): Promise<ArrayBuffer>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of the release environment.
        - id: attemptId
          type: number
          description: Attempt number of deployment.
        - id: timelineId
          type: string
          description: Timeline Id of the task.
        - id: recordId
          type: string
          description: Record Id of attachment.
        - id: type
          type: string
          description: Type of the attachment.
        - id: name
          type: string
          description: |
            Name of the attachment.
      return:
        description: ''
        type: Promise&lt;ArrayBuffer&gt;
  - name: 'getTaskAttachments(string, number, number, number, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getTaskAttachments
    package: azure-devops-extension-api
    summary: Get the task attachments.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaskAttachments(project: string, releaseId: number,
        environmentId: number, attemptId: number, timelineId: string, type:
        string): Promise<ReleaseTaskAttachment[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of the release environment.
        - id: attemptId
          type: number
          description: Attempt number of deployment.
        - id: timelineId
          type: string
          description: Timeline Id of the task.
        - id: type
          type: string
          description: |
            Type of the attachment.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseTaskAttachment" />[]&gt;
  - name: 'getTaskLog(string, number, number, number, number, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getTaskLog
    package: azure-devops-extension-api
    summary: Gets the task log of a release as a plain text file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaskLog(project: string, releaseId: number, environmentId:
        number, releaseDeployPhaseId: number, taskId: number, startLine?:
        number, endLine?: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of release environment.
        - id: releaseDeployPhaseId
          type: number
          description: Release deploy phase Id.
        - id: taskId
          type: number
          description: ReleaseTask Id for the log.
        - id: startLine
          type: number
          description: Starting line number for logs
        - id: endLine
          type: number
          description: |
            Ending line number for logs
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: >-
      getTaskLog2(string, number, number, number, string, number, number,
      number)
    uid: azure-devops-extension-api.ReleaseRestClient.getTaskLog2
    package: azure-devops-extension-api
    summary: Gets the task log of a release as a plain text file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTaskLog2(project: string, releaseId: number, environmentId:
        number, attemptId: number, timelineId: string, taskId: number,
        startLine?: number, endLine?: number): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: Id of release environment.
        - id: attemptId
          type: number
          description: '-'
        - id: timelineId
          type: string
          description: '-'
        - id: taskId
          type: number
          description: ReleaseTask Id for the log.
        - id: startLine
          type: number
          description: Starting line number for logs
        - id: endLine
          type: number
          description: |
            Ending line number for logs
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: 'getTasks(string, number, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getTasks
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTasks(project: string, releaseId: number, environmentId:
        number, attemptId?: number): Promise<ReleaseTask[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: environmentId
          type: number
          description: '-'
        - id: attemptId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.ReleaseTask" />[]&gt;'
  - name: 'getTasks2(string, number, number, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.getTasks2
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTasks2(project: string, releaseId: number, environmentId:
        number, attemptId: number, timelineId: string): Promise<ReleaseTask[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: environmentId
          type: number
          description: '-'
        - id: attemptId
          type: number
          description: '-'
        - id: timelineId
          type: string
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.ReleaseTask" />[]&gt;'
  - name: 'getTasksForTaskGroup(string, number, number, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.getTasksForTaskGroup
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTasksForTaskGroup(project: string, releaseId: number,
        environmentId: number, releaseDeployPhaseId: number):
        Promise<ReleaseTask[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: '-'
        - id: environmentId
          type: number
          description: '-'
        - id: releaseDeployPhaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.ReleaseTask" />[]&gt;'
  - name: 'listDefinitionEnvironmentTemplates(string, boolean)'
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.listDefinitionEnvironmentTemplates
    package: azure-devops-extension-api
    summary: Gets a list of definition environment templates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDefinitionEnvironmentTemplates(project: string, isDeleted?:
        boolean): Promise<ReleaseDefinitionEnvironmentTemplate[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: isDeleted
          type: boolean
          description: >
            'true' to get definition environment templates that have been
            deleted. Default is 'false'
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate"
          />[]&gt;
  - name: 'sendSummaryMail(MailMessage, string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.sendSummaryMail
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendSummaryMail(mailMessage: MailMessage, project: string,
        releaseId: number): Promise<void>
      parameters:
        - id: mailMessage
          type: <xref uid="azure-devops-extension-api.MailMessage" />
          description: '-'
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            -
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'undeleteRelease(string, number, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.undeleteRelease
    package: azure-devops-extension-api
    summary: Undelete a soft deleted release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function undeleteRelease(project: string, releaseId: number, comment:
        string): Promise<void>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of release to be undeleted.
        - id: comment
          type: string
          description: |
            Any comment for undeleting.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      undeleteReleaseDefinition(ReleaseDefinitionUndeleteParameter, string,
      number)
    uid: azure-devops-extension-api.ReleaseRestClient.undeleteReleaseDefinition
    package: azure-devops-extension-api
    summary: Undelete a release definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function undeleteReleaseDefinition(releaseDefinitionUndeleteParameter:
        ReleaseDefinitionUndeleteParameter, project: string, definitionId:
        number): Promise<ReleaseDefinition>
      parameters:
        - id: releaseDefinitionUndeleteParameter
          type: >-
            <xref
            uid="azure-devops-extension-api.ReleaseDefinitionUndeleteParameter"
            />
          description: Object for undelete release definition.
        - id: project
          type: string
          description: Project ID or project name
        - id: definitionId
          type: number
          description: |
            Id of the release definition to be undeleted
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseDefinition"
          />&gt;
  - name: 'undeleteReleaseDefinitionEnvironmentTemplate(string, string)'
    uid: >-
      azure-devops-extension-api.ReleaseRestClient.undeleteReleaseDefinitionEnvironmentTemplate
    package: azure-devops-extension-api
    summary: Undelete a release definition environment template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function undeleteReleaseDefinitionEnvironmentTemplate(project: string,
        templateId: string): Promise<ReleaseDefinitionEnvironmentTemplate>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: templateId
          type: string
          description: |
            Id of the definition environment template to be undeleted
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ReleaseDefinitionEnvironmentTemplate"
          />&gt;
  - name: 'updateFolder(Folder, string, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateFolder
    package: azure-devops-extension-api
    summary: Updates an existing folder at given existing path.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFolder(folder: Folder, project: string, path: string):
        Promise<Folder>
      parameters:
        - id: folder
          type: <xref uid="azure-devops-extension-api.Folder" />
          description: folder.
        - id: project
          type: string
          description: Project ID or project name
        - id: path
          type: string
          description: |
            Path of the folder to update.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Folder" />&gt;
  - name: 'updateGates(GateUpdateMetadata, string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateGates
    package: azure-devops-extension-api
    summary: Updates the gate for a deployment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateGates(gateUpdateMetadata: GateUpdateMetadata, project:
        string, gateStepId: number): Promise<ReleaseGates>
      parameters:
        - id: gateUpdateMetadata
          type: <xref uid="azure-devops-extension-api.GateUpdateMetadata" />
          description: Metadata to patch the Release Gates.
        - id: project
          type: string
          description: Project ID or project name
        - id: gateStepId
          type: number
          description: |
            Gate step Id.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.ReleaseGates" />&gt;
  - name: >-
      updateManualIntervention(ManualInterventionUpdateMetadata, string, number,
      number)
    uid: azure-devops-extension-api.ReleaseRestClient.updateManualIntervention
    package: azure-devops-extension-api
    summary: Update manual intervention.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateManualIntervention(manualInterventionUpdateMetadata:
        ManualInterventionUpdateMetadata, project: string, releaseId: number,
        manualInterventionId: number): Promise<ManualIntervention>
      parameters:
        - id: manualInterventionUpdateMetadata
          type: >-
            <xref
            uid="azure-devops-extension-api.ManualInterventionUpdateMetadata" />
          description: Meta data to update manual intervention.
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: manualInterventionId
          type: number
          description: |
            Id of the manual intervention.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ManualIntervention"
          />&gt;
  - name: 'updateRelease(Release, string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateRelease
    package: azure-devops-extension-api
    summary: Update a complete release object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRelease(release: Release, project: string, releaseId:
        number): Promise<Release>
      parameters:
        - id: release
          type: <xref uid="azure-devops-extension-api.Release" />
          description: Release object for update.
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            Id of the release to update.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Release" />&gt;
  - name: 'updateReleaseApproval(ReleaseApproval, string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseApproval
    package: azure-devops-extension-api
    summary: Update status of an approval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateReleaseApproval(approval: ReleaseApproval, project:
        string, approvalId: number): Promise<ReleaseApproval>
      parameters:
        - id: approval
          type: <xref uid="azure-devops-extension-api.ReleaseApproval" />
          description: 'ReleaseApproval object having status, approver and comments.'
        - id: project
          type: string
          description: Project ID or project name
        - id: approvalId
          type: number
          description: |
            Id of the approval.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseApproval"
          />&gt;
  - name: 'updateReleaseApprovals(ReleaseApproval[], string)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseApprovals
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateReleaseApprovals(approvals: ReleaseApproval[], project:
        string): Promise<ReleaseApproval[]>
      parameters:
        - id: approvals
          type: '<xref uid="azure-devops-extension-api.ReleaseApproval" />[]'
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseApproval"
          />[]&gt;
  - name: 'updateReleaseDefinition(ReleaseDefinition, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseDefinition
    package: azure-devops-extension-api
    summary: Update a release definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateReleaseDefinition(releaseDefinition: ReleaseDefinition,
        project: string): Promise<ReleaseDefinition>
      parameters:
        - id: releaseDefinition
          type: <xref uid="azure-devops-extension-api.ReleaseDefinition" />
          description: Release definition object to update.
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseDefinition"
          />&gt;
  - name: >-
      updateReleaseEnvironment(ReleaseEnvironmentUpdateMetadata, string, number,
      number)
    uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseEnvironment
    package: azure-devops-extension-api
    summary: Update the status of a release environment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateReleaseEnvironment(environmentUpdateData:
        ReleaseEnvironmentUpdateMetadata, project: string, releaseId: number,
        environmentId: number): Promise<ReleaseEnvironment>
      parameters:
        - id: environmentUpdateData
          type: >-
            <xref
            uid="azure-devops-extension-api.ReleaseEnvironmentUpdateMetadata" />
          description: Environment update meta data.
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: Id of the release.
        - id: environmentId
          type: number
          description: |
            Id of release environment.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseEnvironment"
          />&gt;
  - name: 'updateReleaseResource(ReleaseUpdateMetadata, string, number)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseResource
    package: azure-devops-extension-api
    summary: Update few properties of a release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateReleaseResource(releaseUpdateMetadata:
        ReleaseUpdateMetadata, project: string, releaseId: number):
        Promise<Release>
      parameters:
        - id: releaseUpdateMetadata
          type: <xref uid="azure-devops-extension-api.ReleaseUpdateMetadata" />
          description: Properties of release to update.
        - id: project
          type: string
          description: Project ID or project name
        - id: releaseId
          type: number
          description: |
            Id of the release to update.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Release" />&gt;
  - name: 'updateReleaseSettings(ReleaseSettings, string)'
    uid: azure-devops-extension-api.ReleaseRestClient.updateReleaseSettings
    package: azure-devops-extension-api
    summary: Updates the release settings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateReleaseSettings(releaseSettings: ReleaseSettings,
        project: string): Promise<ReleaseSettings>
      parameters:
        - id: releaseSettings
          type: <xref uid="azure-devops-extension-api.ReleaseSettings" />
          description: '-'
        - id: project
          type: string
          description: |
            Project ID or project name
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ReleaseSettings"
          />&gt;
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
