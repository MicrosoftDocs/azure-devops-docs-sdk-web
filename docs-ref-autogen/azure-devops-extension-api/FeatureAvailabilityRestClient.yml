### YamlMime:TSType
name: FeatureAvailabilityRestClient
uid: azure-devops-extension-api.FeatureAvailabilityRestClient
package: azure-devops-extension-api
summary: ''
fullName: FeatureAvailabilityRestClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: FeatureAvailabilityRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.FeatureAvailabilityRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new FeatureAvailabilityRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
methods:
  - name: getAllFeatureFlags(string)
    uid: >-
      azure-devops-extension-api.FeatureAvailabilityRestClient.getAllFeatureFlags
    package: azure-devops-extension-api
    summary: >-
      Retrieve a listing of all feature flags and their current states for a
      user
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAllFeatureFlags(userEmail?: string)'
      parameters:
        - id: userEmail
          type: string
          description: |
            The email of the user to check
      return:
        type: 'Promise&lt;<xref uid="azure-devops-extension-api.FeatureFlag" />[]&gt;'
        description: ''
  - name: 'getFeatureFlagByName(string, boolean)'
    uid: >-
      azure-devops-extension-api.FeatureAvailabilityRestClient.getFeatureFlagByName
    package: azure-devops-extension-api
    summary: Retrieve information on a single feature flag and its current states
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFeatureFlagByName(name: string, checkFeatureExists?:
        boolean)
      parameters:
        - id: name
          type: string
          description: The name of the feature to retrieve
        - id: checkFeatureExists
          type: boolean
          description: |
            Check if feature exists
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.FeatureFlag" />&gt;
        description: ''
  - name: 'getFeatureFlagByNameAndUserEmail(string, string, boolean)'
    uid: >-
      azure-devops-extension-api.FeatureAvailabilityRestClient.getFeatureFlagByNameAndUserEmail
    package: azure-devops-extension-api
    summary: >-
      Retrieve information on a single feature flag and its current states for a
      user
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFeatureFlagByNameAndUserEmail(name: string, userEmail:
        string, checkFeatureExists?: boolean)
      parameters:
        - id: name
          type: string
          description: The name of the feature to retrieve
        - id: userEmail
          type: string
          description: The email of the user to check
        - id: checkFeatureExists
          type: boolean
          description: |
            Check if feature exists
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.FeatureFlag" />&gt;
        description: ''
  - name: 'getFeatureFlagByNameAndUserId(string, string, boolean)'
    uid: >-
      azure-devops-extension-api.FeatureAvailabilityRestClient.getFeatureFlagByNameAndUserId
    package: azure-devops-extension-api
    summary: >-
      Retrieve information on a single feature flag and its current states for a
      user
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFeatureFlagByNameAndUserId(name: string, userId: string,
        checkFeatureExists?: boolean)
      parameters:
        - id: name
          type: string
          description: The name of the feature to retrieve
        - id: userId
          type: string
          description: The id of the user to check
        - id: checkFeatureExists
          type: boolean
          description: |
            Check if feature exists
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.FeatureFlag" />&gt;
        description: ''
  - name: 'updateFeatureFlag(FeatureFlagPatch, string, string, boolean, boolean)'
    uid: azure-devops-extension-api.FeatureAvailabilityRestClient.updateFeatureFlag
    package: azure-devops-extension-api
    summary: Change the state of an individual feature flag for a name
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateFeatureFlag(state: FeatureFlagPatch, name: string,
        userEmail?: string, checkFeatureExists?: boolean,
        setAtApplicationLevelAlso?: boolean)
      parameters:
        - id: state
          type: <xref uid="azure-devops-extension-api.FeatureFlagPatch" />
          description: State that should be set
        - id: name
          type: string
          description: The name of the feature to change
        - id: userEmail
          type: string
          description: '-'
        - id: checkFeatureExists
          type: boolean
          description: Checks if the feature exists before setting the state
        - id: setAtApplicationLevelAlso
          type: boolean
          description: |
            -
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.FeatureFlag" />&gt;
        description: ''
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
