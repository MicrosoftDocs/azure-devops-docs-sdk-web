### YamlMime:TSType
name: GraphRestClient
uid: azure-devops-extension-api.GraphRestClient
package: azure-devops-extension-api
summary: ''
fullName: GraphRestClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: GraphRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.GraphRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new GraphRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
properties:
  - name: RESOURCE_AREA_ID
    uid: azure-devops-extension-api.GraphRestClient.RESOURCE_AREA_ID
    package: azure-devops-extension-api
    summary: ''
    fullName: RESOURCE_AREA_ID
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type: string
        description: ''
methods:
  - name: 'addMembership(string, string)'
    uid: azure-devops-extension-api.GraphRestClient.addMembership
    package: azure-devops-extension-api
    summary: Create a new membership between a container and subject.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addMembership(subjectDescriptor: string, containerDescriptor:
        string)
      parameters:
        - id: subjectDescriptor
          type: string
          description: >-
            A descriptor to a group or user that can be the child subject in the
            relationship.
        - id: containerDescriptor
          type: string
          description: >
            A descriptor to a group that can be the container in the
            relationship.
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphMembership"
          />&gt;
        description: ''
  - name: 'checkMembershipExistence(string, string)'
    uid: azure-devops-extension-api.GraphRestClient.checkMembershipExistence
    package: azure-devops-extension-api
    summary: >-
      Check to see if a membership relationship between a container and subject
      exists.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkMembershipExistence(subjectDescriptor: string,
        containerDescriptor: string)
      parameters:
        - id: subjectDescriptor
          type: string
          description: The group or user that is a child subject of the relationship.
        - id: containerDescriptor
          type: string
          description: |
            The group that is the container in the relationship.
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'createGroup(GraphGroupCreationContext, string, string[])'
    uid: azure-devops-extension-api.GraphRestClient.createGroup
    package: azure-devops-extension-api
    summary: Create a new Azure DevOps group or materialize an existing AAD group.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createGroup(creationContext: GraphGroupCreationContext,
        scopeDescriptor?: string, groupDescriptors?: string[])
      parameters:
        - id: creationContext
          type: <xref uid="azure-devops-extension-api.GraphGroupCreationContext" />
          description: >-
            The subset of the full graph group used to uniquely find the graph
            subject in an external provider.
        - id: scopeDescriptor
          type: string
          description: >-
            A descriptor referencing the scope (collection, project) in which
            the group should be created. If omitted, will be created in the
            scope of the enclosing account or organization. Valid only for VSTS
            groups.
        - id: groupDescriptors
          type: 'string[]'
          description: >
            A comma separated list of descriptors referencing groups you want
            the graph group to join
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphGroup" />&gt;
        description: ''
  - name: 'createScope(GraphScopeCreationContext, string)'
    uid: azure-devops-extension-api.GraphRestClient.createScope
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createScope(creationContext: GraphScopeCreationContext,
        scopeDescriptor?: string)
      parameters:
        - id: creationContext
          type: <xref uid="azure-devops-extension-api.GraphScopeCreationContext" />
          description: '-'
        - id: scopeDescriptor
          type: string
          description: |
            -
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphScope" />&gt;
        description: ''
  - name: 'createUser(GraphUserCreationContext, string[])'
    uid: azure-devops-extension-api.GraphRestClient.createUser
    package: azure-devops-extension-api
    summary: Materialize an existing AAD or MSA user into the VSTS account.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUser(creationContext: GraphUserCreationContext,
        groupDescriptors?: string[])
      parameters:
        - id: creationContext
          type: <xref uid="azure-devops-extension-api.GraphUserCreationContext" />
          description: >-
            The subset of the full graph user used to uniquely find the graph
            subject in an external provider.
        - id: groupDescriptors
          type: 'string[]'
          description: >
            A comma separated list of descriptors of groups you want the graph
            user to join
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphUser" />&gt;
        description: ''
  - name: deleteAvatar(string)
    uid: azure-devops-extension-api.GraphRestClient.deleteAvatar
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteAvatar(subjectDescriptor: string)'
      parameters:
        - id: subjectDescriptor
          type: string
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: deleteGroup(string)
    uid: azure-devops-extension-api.GraphRestClient.deleteGroup
    package: azure-devops-extension-api
    summary: Removes an Azure DevOps group from all of its parent groups.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteGroup(groupDescriptor: string)'
      parameters:
        - id: groupDescriptor
          type: string
          description: |
            The descriptor of the group to delete.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: deleteScope(string)
    uid: azure-devops-extension-api.GraphRestClient.deleteScope
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteScope(scopeDescriptor: string)'
      parameters:
        - id: scopeDescriptor
          type: string
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: deleteUser(string)
    uid: azure-devops-extension-api.GraphRestClient.deleteUser
    package: azure-devops-extension-api
    summary: Disables a user.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteUser(userDescriptor: string)'
      parameters:
        - id: userDescriptor
          type: string
          description: |
            The descriptor of the user to delete.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getAvatar(string, AvatarSize, string)'
    uid: azure-devops-extension-api.GraphRestClient.getAvatar
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAvatar(subjectDescriptor: string, size?: AvatarSize,
        format?: string)
      parameters:
        - id: subjectDescriptor
          type: string
          description: '-'
        - id: size
          type: <xref uid="azure-devops-extension-api.AvatarSize" />
          description: '-'
        - id: format
          type: string
          description: |
            -
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.Avatar" />&gt;
        description: ''
  - name: getCachePolicies()
    uid: azure-devops-extension-api.GraphRestClient.getCachePolicies
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getCachePolicies()
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphCachePolicies"
          />&gt;
        description: ''
  - name: getDescriptor(string)
    uid: azure-devops-extension-api.GraphRestClient.getDescriptor
    package: azure-devops-extension-api
    summary: Resolve a storage key to a descriptor
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDescriptor(storageKey: string)'
      parameters:
        - id: storageKey
          type: string
          description: |
            Storage key of the subject (user, group, scope, etc.) to resolve
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.GraphDescriptorResult" />&gt;
        description: ''
  - name: 'getFederatedProviderData(string, string, number)'
    uid: azure-devops-extension-api.GraphRestClient.getFederatedProviderData
    package: azure-devops-extension-api
    summary: >-
      Acquires the full set of federated provider authentication data available
      for the given graph subject and provider name.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getFederatedProviderData(subjectDescriptor: string,
        providerName: string, versionHint?: number)
      parameters:
        - id: subjectDescriptor
          type: string
          description: the descriptor of the graph subject that we should acquire data for
        - id: providerName
          type: string
          description: 'the name of the provider to acquire data for, e.g. "github.com"'
        - id: versionHint
          type: number
          description: >
            a version hint that can be used for optimistic cache concurrency and
            to support retries on access token failures; note that this is a
            hint only and does not guarantee a particular version on the
            response
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.GraphFederatedProviderData" />&gt;
        description: ''
  - name: getGroup(string)
    uid: azure-devops-extension-api.GraphRestClient.getGroup
    package: azure-devops-extension-api
    summary: Get a group by its descriptor.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getGroup(groupDescriptor: string)'
      parameters:
        - id: groupDescriptor
          type: string
          description: |
            The descriptor of the desired graph group.
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphGroup" />&gt;
        description: ''
  - name: getMemberByDescriptor(string)
    uid: azure-devops-extension-api.GraphRestClient.getMemberByDescriptor
    package: azure-devops-extension-api
    summary: >-
      This endpoint returns a result for any member that has ever been valid in
      the system, even if the member has since been deleted or has had all their
      memberships deleted. The current validity of the member is indicated
      through its disabled property, which is omitted when false.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getMemberByDescriptor(memberDescriptor: string)'
      parameters:
        - id: memberDescriptor
          type: string
          description: |
            The descriptor of the desired member.
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphMember" />&gt;
        description: ''
  - name: 'getMembership(string, string)'
    uid: azure-devops-extension-api.GraphRestClient.getMembership
    package: azure-devops-extension-api
    summary: Get a membership relationship between a container and subject.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getMembership(subjectDescriptor: string, containerDescriptor:
        string)
      parameters:
        - id: subjectDescriptor
          type: string
          description: A descriptor to the child subject in the relationship.
        - id: containerDescriptor
          type: string
          description: |
            A descriptor to the container in the relationship.
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphMembership"
          />&gt;
        description: ''
  - name: getMembershipState(string)
    uid: azure-devops-extension-api.GraphRestClient.getMembershipState
    package: azure-devops-extension-api
    summary: Check whether a subject is active or inactive.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getMembershipState(subjectDescriptor: string)'
      parameters:
        - id: subjectDescriptor
          type: string
          description: >
            Descriptor of the subject (user, group, scope, etc.) to check state
            of
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphMembershipState"
          />&gt;
        description: ''
  - name: getProviderInfo(string)
    uid: azure-devops-extension-api.GraphRestClient.getProviderInfo
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProviderInfo(userDescriptor: string)'
      parameters:
        - id: userDescriptor
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphProviderInfo"
          />&gt;
        description: ''
  - name: getScope(string)
    uid: azure-devops-extension-api.GraphRestClient.getScope
    package: azure-devops-extension-api
    summary: Get a scope identified by its descriptor
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getScope(scopeDescriptor: string)'
      parameters:
        - id: scopeDescriptor
          type: string
          description: |
            A descriptor that uniquely identifies a scope.
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphScope" />&gt;
        description: ''
  - name: getStorageKey(string)
    uid: azure-devops-extension-api.GraphRestClient.getStorageKey
    package: azure-devops-extension-api
    summary: Resolve a descriptor to a storage key.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getStorageKey(subjectDescriptor: string)'
      parameters:
        - id: subjectDescriptor
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.GraphStorageKeyResult" />&gt;
        description: ''
  - name: getSubject(string)
    uid: azure-devops-extension-api.GraphRestClient.getSubject
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSubject(subjectDescriptor: string)'
      parameters:
        - id: subjectDescriptor
          type: string
          description: |
            -
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphSubject" />&gt;
        description: ''
  - name: getUser(string)
    uid: azure-devops-extension-api.GraphRestClient.getUser
    package: azure-devops-extension-api
    summary: Get a user by its descriptor.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getUser(userDescriptor: string)'
      parameters:
        - id: userDescriptor
          type: string
          description: |
            The descriptor of the desired user.
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphUser" />&gt;
        description: ''
  - name: 'listMemberships(string, GraphTraversalDirection, number)'
    uid: azure-devops-extension-api.GraphRestClient.listMemberships
    package: azure-devops-extension-api
    summary: >-
      Get all the memberships where this descriptor is a member in the
      relationship.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMemberships(subjectDescriptor: string, direction?:
        GraphTraversalDirection, depth?: number)
      parameters:
        - id: subjectDescriptor
          type: string
          description: Fetch all direct memberships of this descriptor.
        - id: direction
          type: <xref uid="azure-devops-extension-api.GraphTraversalDirection" />
          description: Defaults to Up.
        - id: depth
          type: number
          description: >
            The maximum number of edges to traverse up or down the membership
            tree. Currently the only supported value is '1'.
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphMembership"
          />[]&gt;
        description: ''
  - name: lookupMembers(GraphSubjectLookup)
    uid: azure-devops-extension-api.GraphRestClient.lookupMembers
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function lookupMembers(memberLookup: GraphSubjectLookup)'
      parameters:
        - id: memberLookup
          type: <xref uid="azure-devops-extension-api.GraphSubjectLookup" />
          description: |
            -
      return:
        type: >-
          Promise&lt;[key: string]: <xref
          uid="azure-devops-extension-api.GraphMember" />&gt;
        description: ''
  - name: >-
      lookupMembershipTraversals(GraphSubjectLookup, GraphTraversalDirection,
      number)
    uid: azure-devops-extension-api.GraphRestClient.lookupMembershipTraversals
    package: azure-devops-extension-api
    summary: Traverse memberships of the given subject descriptors.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function lookupMembershipTraversals(membershipTraversalLookup:
        GraphSubjectLookup, direction?: GraphTraversalDirection, depth?: number)
      parameters:
        - id: membershipTraversalLookup
          type: <xref uid="azure-devops-extension-api.GraphSubjectLookup" />
          description: >-
            Fetch the descendants/ancestors of the list of descriptors depending
            on direction.
        - id: direction
          type: <xref uid="azure-devops-extension-api.GraphTraversalDirection" />
          description: The default value is Unknown.
        - id: depth
          type: number
          description: |
            The default value is '1'.
      return:
        type: >-
          Promise&lt;[key: string]: <xref
          uid="azure-devops-extension-api.GraphMembershipTraversal" />&gt;
        description: ''
  - name: lookupSubjects(GraphSubjectLookup)
    uid: azure-devops-extension-api.GraphRestClient.lookupSubjects
    package: azure-devops-extension-api
    summary: 'Resolve descriptors to users, groups or scopes (Subjects) in a batch.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function lookupSubjects(subjectLookup: GraphSubjectLookup)'
      parameters:
        - id: subjectLookup
          type: <xref uid="azure-devops-extension-api.GraphSubjectLookup" />
          description: >
            A list of descriptors that specifies a subset of subjects to
            retrieve. Each descriptor uniquely identifies the subject across all
            instance scopes, but only at a single point in time.
      return:
        type: >-
          Promise&lt;[key: string]: <xref
          uid="azure-devops-extension-api.GraphSubject" />&gt;
        description: ''
  - name: querySubjects(GraphSubjectQuery)
    uid: azure-devops-extension-api.GraphRestClient.querySubjects
    package: azure-devops-extension-api
    summary: >-
      Search for Azure Devops users, or/and groups. Results will be returned in
      a batch with no more than 100 graph subjects.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function querySubjects(subjectQuery: GraphSubjectQuery)'
      parameters:
        - id: subjectQuery
          type: <xref uid="azure-devops-extension-api.GraphSubjectQuery" />
          description: >
            The query that we'll be using to search includes the following:
            Query: the search term. The search will be prefix matching only.
            SubjectKind: "User" or "Group" can be specified, both or either
            ScopeDescriptor: Non-default scope can be specified, i.e. project
            scope descriptor
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.GraphSubject"
          />[]&gt;
        description: ''
  - name: 'removeMembership(string, string)'
    uid: azure-devops-extension-api.GraphRestClient.removeMembership
    package: azure-devops-extension-api
    summary: Deletes a membership between a container and subject.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeMembership(subjectDescriptor: string,
        containerDescriptor: string)
      parameters:
        - id: subjectDescriptor
          type: string
          description: >-
            A descriptor to a group or user that is the child subject in the
            relationship.
        - id: containerDescriptor
          type: string
          description: |
            A descriptor to a group that is the container in the relationship.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: requestAccess(any)
    uid: azure-devops-extension-api.GraphRestClient.requestAccess
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function requestAccess(jsondocument: any)'
      parameters:
        - id: jsondocument
          type: any
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'setAvatar(Avatar, string)'
    uid: azure-devops-extension-api.GraphRestClient.setAvatar
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setAvatar(avatar: Avatar, subjectDescriptor: string)'
      parameters:
        - id: avatar
          type: <xref uid="azure-devops-extension-api.Avatar" />
          description: '-'
        - id: subjectDescriptor
          type: string
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'traverseMemberships(string, GraphTraversalDirection, number)'
    uid: azure-devops-extension-api.GraphRestClient.traverseMemberships
    package: azure-devops-extension-api
    summary: Traverse memberships of the given subject descriptor.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function traverseMemberships(subjectDescriptor: string, direction?:
        GraphTraversalDirection, depth?: number)
      parameters:
        - id: subjectDescriptor
          type: string
          description: >-
            Fetch the descendants/ancestors of this descriptor depending on
            direction.
        - id: direction
          type: <xref uid="azure-devops-extension-api.GraphTraversalDirection" />
          description: The default value is Unknown.
        - id: depth
          type: number
          description: |
            The default value is '1'.
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.GraphMembershipTraversal" />&gt;
        description: ''
  - name: 'updateGroup(string, JsonPatchDocument)'
    uid: azure-devops-extension-api.GraphRestClient.updateGroup
    package: azure-devops-extension-api
    summary: Update the properties of an Azure DevOps group.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateGroup(groupDescriptor: string, patchDocument:
        JsonPatchDocument)
      parameters:
        - id: groupDescriptor
          type: string
          description: The descriptor of the group to modify.
        - id: patchDocument
          type: <xref uid="azure-devops-extension-api.JsonPatchDocument" />
          description: |
            The JSON+Patch document containing the fields to alter.
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphGroup" />&gt;
        description: ''
  - name: 'updateScope(string, JsonPatchDocument)'
    uid: azure-devops-extension-api.GraphRestClient.updateScope
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateScope(scopeDescriptor: string, patchDocument:
        JsonPatchDocument)
      parameters:
        - id: scopeDescriptor
          type: string
          description: '-'
        - id: patchDocument
          type: <xref uid="azure-devops-extension-api.JsonPatchDocument" />
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'updateUser(GraphUserUpdateContext, string)'
    uid: azure-devops-extension-api.GraphRestClient.updateUser
    package: azure-devops-extension-api
    summary: Map an existing user to a different identity
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateUser(updateContext: GraphUserUpdateContext,
        userDescriptor: string)
      parameters:
        - id: updateContext
          type: <xref uid="azure-devops-extension-api.GraphUserUpdateContext" />
          description: >-
            The subset of the full graph user used to uniquely find the graph
            subject in an external provider.
        - id: userDescriptor
          type: string
          description: |
            the descriptor of the user to update
      return:
        type: Promise&lt;<xref uid="azure-devops-extension-api.GraphUser" />&gt;
        description: ''
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
