### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.ExtensionManagementRestClient
    name: ExtensionManagementRestClient
    fullName: ExtensionManagementRestClient
    children:
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.createDocumentByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.deleteDocumentByName
      - azure-devops-extension-api.ExtensionManagementRestClient.deleteRequest
      - azure-devops-extension-api.ExtensionManagementRestClient.constructor
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.getAcquisitionOptions
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.getDocumentByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.getDocumentsByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.getInstalledExtensionByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.getInstalledExtensions
      - azure-devops-extension-api.ExtensionManagementRestClient.getPolicies
      - azure-devops-extension-api.ExtensionManagementRestClient.getRequests
      - azure-devops-extension-api.ExtensionManagementRestClient.getStates
      - azure-devops-extension-api.ExtensionManagementRestClient.getToken
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.installExtensionByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.queryCollectionsByName
      - azure-devops-extension-api.ExtensionManagementRestClient.queryExtensions
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.registerAuthorization
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.requestAcquisition
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.requestExtension
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.resolveAllRequests
      - azure-devops-extension-api.ExtensionManagementRestClient.resolveRequest
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.RESOURCE_AREA_ID
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.setDocumentByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.uninstallExtensionByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.updateDocumentByName
      - >-
        azure-devops-extension-api.ExtensionManagementRestClient.updateInstalledExtension
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.createDocumentByName
    name: 'createDocumentByName(any, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      parameters:
        - id: doc
          type:
            - any
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: scopeType
          type:
            - string
          description: '-'
        - id: scopeValue
          type:
            - string
          description: '-'
        - id: collectionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.deleteDocumentByName
    name: 'deleteDocumentByName(string, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteDocumentByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: scopeType
          type:
            - string
          description: '-'
        - id: scopeValue
          type:
            - string
          description: '-'
        - id: collectionName
          type:
            - string
          description: '-'
        - id: documentId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.deleteRequest
    name: 'deleteRequest(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRequest(publisherName: string, extensionName: string)'
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.constructor
    name: ExtensionManagementRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ExtensionManagementRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getAcquisitionOptions
    name: >-
      getAcquisitionOptions(string, boolean, boolean, boolean, boolean, boolean,
      boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAcquisitionOptions(itemId: string, testCommerce?: boolean,
        isFreeOrTrialInstall?: boolean, isAccountOwner?: boolean, isLinked?:
        boolean, isConnectedServer?: boolean, isBuyOperationValid?: boolean)
      parameters:
        - id: itemId
          type:
            - string
          description: '-'
        - id: testCommerce
          type:
            - boolean
          description: '-'
          optional: true
        - id: isFreeOrTrialInstall
          type:
            - boolean
          description: '-'
          optional: true
        - id: isAccountOwner
          type:
            - boolean
          description: '-'
          optional: true
        - id: isLinked
          type:
            - boolean
          description: '-'
          optional: true
        - id: isConnectedServer
          type:
            - boolean
          description: '-'
          optional: true
        - id: isBuyOperationValid
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.AcquisitionOptions>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.getDocumentByName
    name: 'getDocumentByName(string, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDocumentByName(publisherName: string, extensionName: string,
        scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: scopeType
          type:
            - string
          description: '-'
        - id: scopeValue
          type:
            - string
          description: '-'
        - id: collectionName
          type:
            - string
          description: '-'
        - id: documentId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getDocumentsByName
    name: 'getDocumentsByName(string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDocumentsByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: scopeType
          type:
            - string
          description: '-'
        - id: scopeValue
          type:
            - string
          description: '-'
        - id: collectionName
          type:
            - string
          description: |
            -
      return:
        type:
          - 'Promise<any[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getInstalledExtensionByName
    name: 'getInstalledExtensionByName(string, string, string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an installed extension by its publisher and extension name.
    syntax:
      content: >-
        function getInstalledExtensionByName(publisherName: string,
        extensionName: string, assetTypes?: string[])
      parameters:
        - id: publisherName
          type:
            - string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type:
            - string
          description: 'Name of the extension. Example: "ops-tools".'
        - id: assetTypes
          type:
            - 'string[]'
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.InstalledExtension>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getInstalledExtensions
    name: 'getInstalledExtensions(boolean, boolean, string[], boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List the installed extensions in the account / project collection.
    syntax:
      content: >-
        function getInstalledExtensions(includeDisabledExtensions?: boolean,
        includeErrors?: boolean, assetTypes?: string[],
        includeInstallationIssues?: boolean)
      parameters:
        - id: includeDisabledExtensions
          type:
            - boolean
          description: 'If true (the default), include disabled extensions in the results.'
          optional: true
        - id: includeErrors
          type:
            - boolean
          description: 'If true, include installed extensions with errors.'
          optional: true
        - id: assetTypes
          type:
            - 'string[]'
          description: '-'
          optional: true
        - id: includeInstallationIssues
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.InstalledExtension[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.getPolicies
    name: getPolicies(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPolicies(userId: string)'
      parameters:
        - id: userId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.UserExtensionPolicy>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.getRequests
    name: getRequests()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRequests()
      parameters: []
      return:
        type:
          - 'Promise<azure-devops-extension-api.RequestedExtension[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.getStates
    name: 'getStates(boolean, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List state and version information for all installed extensions.
    syntax:
      content: >-
        function getStates(includeDisabled?: boolean, includeErrors?: boolean,
        includeInstallationIssues?: boolean)
      parameters:
        - id: includeDisabled
          type:
            - boolean
          description: 'If true (the default), include disabled extensions in the results.'
          optional: true
        - id: includeErrors
          type:
            - boolean
          description: >-
            If true, include installed extensions in an error state in the
            results.
          optional: true
        - id: includeInstallationIssues
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ExtensionState[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.getToken
    name: getToken()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getToken()
      parameters: []
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.installExtensionByName
    name: 'installExtensionByName(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Install the specified extension into the account / project collection.
    syntax:
      content: >-
        function installExtensionByName(publisherName: string, extensionName:
        string, version?: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type:
            - string
          description: 'Name of the extension. Example: "ops-tools".'
        - id: version
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.InstalledExtension>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.queryCollectionsByName
    name: 'queryCollectionsByName(ExtensionDataCollectionQuery, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Query for one or more data collections for the specified extension.  Note:
      the token used for authorization must have been issued on behalf of the
      specified extension.
    syntax:
      content: >-
        function queryCollectionsByName(collectionQuery:
        ExtensionDataCollectionQuery, publisherName: string, extensionName:
        string)
      parameters:
        - id: collectionQuery
          type:
            - azure-devops-extension-api.ExtensionDataCollectionQuery
          description: '-'
        - id: publisherName
          type:
            - string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type:
            - string
          description: |
            Name of the extension. Example: "ops-tools".
      return:
        type:
          - 'Promise<azure-devops-extension-api.ExtensionDataCollection[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.queryExtensions
    name: queryExtensions(InstalledExtensionQuery)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function queryExtensions(query: InstalledExtensionQuery)'
      parameters:
        - id: query
          type:
            - azure-devops-extension-api.InstalledExtensionQuery
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.InstalledExtension[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.registerAuthorization
    name: 'registerAuthorization(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function registerAuthorization(publisherName: string, extensionName:
        string, registrationId: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: registrationId
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionAuthorization>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.requestAcquisition
    name: requestAcquisition(ExtensionAcquisitionRequest)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function requestAcquisition(acquisitionRequest:
        ExtensionAcquisitionRequest)
      parameters:
        - id: acquisitionRequest
          type:
            - azure-devops-extension-api.ExtensionAcquisitionRequest
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.ExtensionAcquisitionRequest>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.requestExtension
    name: 'requestExtension(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function requestExtension(publisherName: string, extensionName: string,
        requestMessage: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: requestMessage
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.RequestedExtension>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.resolveAllRequests
    name: 'resolveAllRequests(string, string, string, ExtensionRequestState)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resolveAllRequests(rejectMessage: string, publisherName:
        string, extensionName: string, state: ExtensionRequestState)
      parameters:
        - id: rejectMessage
          type:
            - string
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: state
          type:
            - azure-devops-extension-api.ExtensionRequestState
          description: |
            -
      return:
        type:
          - Promise<number>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.resolveRequest
    name: 'resolveRequest(string, string, string, string, ExtensionRequestState)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resolveRequest(rejectMessage: string, publisherName: string,
        extensionName: string, requesterId: string, state:
        ExtensionRequestState)
      parameters:
        - id: rejectMessage
          type:
            - string
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: requesterId
          type:
            - string
          description: '-'
        - id: state
          type:
            - azure-devops-extension-api.ExtensionRequestState
          description: |
            -
      return:
        type:
          - Promise<number>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.RESOURCE_AREA_ID
    name: RESOURCE_AREA_ID
    fullName: RESOURCE_AREA_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.ExtensionManagementRestClient.setDocumentByName
    name: 'setDocumentByName(any, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      parameters:
        - id: doc
          type:
            - any
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: scopeType
          type:
            - string
          description: '-'
        - id: scopeValue
          type:
            - string
          description: '-'
        - id: collectionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.uninstallExtensionByName
    name: 'uninstallExtensionByName(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Uninstall the specified extension from the account / project collection.
    syntax:
      content: >-
        function uninstallExtensionByName(publisherName: string, extensionName:
        string, reason?: string, reasonCode?: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type:
            - string
          description: 'Name of the extension. Example: "ops-tools".'
        - id: reason
          type:
            - string
          description: '-'
          optional: true
        - id: reasonCode
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.updateDocumentByName
    name: 'updateDocumentByName(any, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      parameters:
        - id: doc
          type:
            - any
          description: '-'
        - id: publisherName
          type:
            - string
          description: '-'
        - id: extensionName
          type:
            - string
          description: '-'
        - id: scopeType
          type:
            - string
          description: '-'
        - id: scopeValue
          type:
            - string
          description: '-'
        - id: collectionName
          type:
            - string
          description: |
            -
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.updateInstalledExtension
    name: updateInstalledExtension(InstalledExtension)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update an installed extension. Typically this API is used to enable or
      disable an extension.
    syntax:
      content: 'function updateInstalledExtension(extension: InstalledExtension)'
      parameters:
        - id: extension
          type:
            - azure-devops-extension-api.InstalledExtension
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.InstalledExtension>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: Promise<azure-devops-extension-api.AcquisitionOptions>
    name: AcquisitionOptions>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AcquisitionOptions
        fullName: AcquisitionOptions
        uid: azure-devops-extension-api.AcquisitionOptions
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.InstalledExtension>
    name: InstalledExtension>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: InstalledExtension
        fullName: InstalledExtension
        uid: azure-devops-extension-api.InstalledExtension
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.InstalledExtension[]>'
    name: 'InstalledExtension[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: InstalledExtension
        fullName: InstalledExtension
        uid: azure-devops-extension-api.InstalledExtension
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.UserExtensionPolicy>
    name: UserExtensionPolicy>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserExtensionPolicy
        fullName: UserExtensionPolicy
        uid: azure-devops-extension-api.UserExtensionPolicy
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.RequestedExtension[]>'
    name: 'RequestedExtension[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RequestedExtension
        fullName: RequestedExtension
        uid: azure-devops-extension-api.RequestedExtension
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.ExtensionState[]>'
    name: 'ExtensionState[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionState
        fullName: ExtensionState
        uid: azure-devops-extension-api.ExtensionState
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.ExtensionDataCollectionQuery
    name: ExtensionDataCollectionQuery
    spec.typeScript:
      - name: ExtensionDataCollectionQuery
        fullName: ExtensionDataCollectionQuery
        uid: azure-devops-extension-api.ExtensionDataCollectionQuery
  - uid: 'Promise<azure-devops-extension-api.ExtensionDataCollection[]>'
    name: 'ExtensionDataCollection[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionDataCollection
        fullName: ExtensionDataCollection
        uid: azure-devops-extension-api.ExtensionDataCollection
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.InstalledExtensionQuery
    name: InstalledExtensionQuery
    spec.typeScript:
      - name: InstalledExtensionQuery
        fullName: InstalledExtensionQuery
        uid: azure-devops-extension-api.InstalledExtensionQuery
  - uid: Promise<azure-devops-extension-api.ExtensionAuthorization>
    name: ExtensionAuthorization>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionAuthorization
        fullName: ExtensionAuthorization
        uid: azure-devops-extension-api.ExtensionAuthorization
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ExtensionAcquisitionRequest
    name: ExtensionAcquisitionRequest
    spec.typeScript:
      - name: ExtensionAcquisitionRequest
        fullName: ExtensionAcquisitionRequest
        uid: azure-devops-extension-api.ExtensionAcquisitionRequest
  - uid: Promise<azure-devops-extension-api.ExtensionAcquisitionRequest>
    name: ExtensionAcquisitionRequest>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionAcquisitionRequest
        fullName: ExtensionAcquisitionRequest
        uid: azure-devops-extension-api.ExtensionAcquisitionRequest
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.RequestedExtension>
    name: RequestedExtension>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RequestedExtension
        fullName: RequestedExtension
        uid: azure-devops-extension-api.RequestedExtension
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.ExtensionRequestState
    name: ExtensionRequestState
    spec.typeScript:
      - name: ExtensionRequestState
        fullName: ExtensionRequestState
        uid: azure-devops-extension-api.ExtensionRequestState
  - uid: azure-devops-extension-api.InstalledExtension
    name: InstalledExtension
    spec.typeScript:
      - name: InstalledExtension
        fullName: InstalledExtension
        uid: azure-devops-extension-api.InstalledExtension
