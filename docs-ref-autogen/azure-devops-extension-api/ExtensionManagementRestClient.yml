### YamlMime:TSType
name: ExtensionManagementRestClient
uid: azure-devops-extension-api.ExtensionManagementRestClient
package: azure-devops-extension-api
summary: ''
fullName: ExtensionManagementRestClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ExtensionManagementRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.ExtensionManagementRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ExtensionManagementRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
properties:
  - name: RESOURCE_AREA_ID
    uid: azure-devops-extension-api.ExtensionManagementRestClient.RESOURCE_AREA_ID
    package: azure-devops-extension-api
    summary: ''
    fullName: RESOURCE_AREA_ID
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type: string
        description: ''
methods:
  - name: 'createDocumentByName(any, string, string, string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.createDocumentByName
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      parameters:
        - id: doc
          type: any
          description: '-'
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: scopeType
          type: string
          description: '-'
        - id: scopeValue
          type: string
          description: '-'
        - id: collectionName
          type: string
          description: |
            -
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'deleteDocumentByName(string, string, string, string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.deleteDocumentByName
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDocumentByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: scopeType
          type: string
          description: '-'
        - id: scopeValue
          type: string
          description: '-'
        - id: collectionName
          type: string
          description: '-'
        - id: documentId
          type: string
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'deleteRequest(string, string)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.deleteRequest
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteRequest(publisherName: string, extensionName: string)'
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      getAcquisitionOptions(string, boolean, boolean, boolean, boolean, boolean,
      boolean)
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getAcquisitionOptions
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAcquisitionOptions(itemId: string, testCommerce?: boolean,
        isFreeOrTrialInstall?: boolean, isAccountOwner?: boolean, isLinked?:
        boolean, isConnectedServer?: boolean, isBuyOperationValid?: boolean)
      parameters:
        - id: itemId
          type: string
          description: '-'
        - id: testCommerce
          type: boolean
          description: '-'
        - id: isFreeOrTrialInstall
          type: boolean
          description: '-'
        - id: isAccountOwner
          type: boolean
          description: '-'
        - id: isLinked
          type: boolean
          description: '-'
        - id: isConnectedServer
          type: boolean
          description: '-'
        - id: isBuyOperationValid
          type: boolean
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.AcquisitionOptions"
          />&gt;
        description: ''
  - name: 'getAuditLog(string, string)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.getAuditLog
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAuditLog(publisherName: string, extensionName: string)'
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ExtensionAuditLog"
          />&gt;
        description: ''
  - name: 'getDocumentByName(string, string, string, string, string, string)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.getDocumentByName
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDocumentByName(publisherName: string, extensionName: string,
        scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: scopeType
          type: string
          description: '-'
        - id: scopeValue
          type: string
          description: '-'
        - id: collectionName
          type: string
          description: '-'
        - id: documentId
          type: string
          description: |
            -
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'getDocumentsByName(string, string, string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getDocumentsByName
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDocumentsByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string)
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: scopeType
          type: string
          description: '-'
        - id: scopeValue
          type: string
          description: '-'
        - id: collectionName
          type: string
          description: |
            -
      return:
        type: 'Promise&lt;any[]&gt;'
        description: ''
  - name: 'getInstalledExtensionByName(string, string, string[])'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getInstalledExtensionByName
    package: azure-devops-extension-api
    summary: Get an installed extension by its publisher and extension name.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstalledExtensionByName(publisherName: string,
        extensionName: string, assetTypes?: string[])
      parameters:
        - id: publisherName
          type: string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type: string
          description: 'Name of the extension. Example: "ops-tools".'
        - id: assetTypes
          type: 'string[]'
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InstalledExtension"
          />&gt;
        description: ''
  - name: 'getInstalledExtensions(boolean, boolean, string[], boolean)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.getInstalledExtensions
    package: azure-devops-extension-api
    summary: List the installed extensions in the account / project collection.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getInstalledExtensions(includeDisabledExtensions?: boolean,
        includeErrors?: boolean, assetTypes?: string[],
        includeInstallationIssues?: boolean)
      parameters:
        - id: includeDisabledExtensions
          type: boolean
          description: 'If true (the default), include disabled extensions in the results.'
        - id: includeErrors
          type: boolean
          description: 'If true, include installed extensions with errors.'
        - id: assetTypes
          type: 'string[]'
          description: '-'
        - id: includeInstallationIssues
          type: boolean
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InstalledExtension"
          />[]&gt;
        description: ''
  - name: getPolicies(string)
    uid: azure-devops-extension-api.ExtensionManagementRestClient.getPolicies
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getPolicies(userId: string)'
      parameters:
        - id: userId
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.UserExtensionPolicy"
          />&gt;
        description: ''
  - name: getRequests()
    uid: azure-devops-extension-api.ExtensionManagementRestClient.getRequests
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getRequests()
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.RequestedExtension"
          />[]&gt;
        description: ''
  - name: 'getStates(boolean, boolean, boolean, boolean)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.getStates
    package: azure-devops-extension-api
    summary: List state and version information for all installed extensions.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStates(includeDisabled?: boolean, includeErrors?: boolean,
        includeInstallationIssues?: boolean, forceRefresh?: boolean)
      parameters:
        - id: includeDisabled
          type: boolean
          description: 'If true (the default), include disabled extensions in the results.'
        - id: includeErrors
          type: boolean
          description: >-
            If true, include installed extensions in an error state in the
            results.
        - id: includeInstallationIssues
          type: boolean
          description: '-'
        - id: forceRefresh
          type: boolean
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.ExtensionState"
          />[]&gt;
        description: ''
  - name: getToken()
    uid: azure-devops-extension-api.ExtensionManagementRestClient.getToken
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getToken()
      return:
        type: Promise&lt;string&gt;
        description: ''
  - name: 'installExtensionByName(string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.installExtensionByName
    package: azure-devops-extension-api
    summary: Install the specified extension into the account / project collection.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function installExtensionByName(publisherName: string, extensionName:
        string, version?: string)
      parameters:
        - id: publisherName
          type: string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type: string
          description: 'Name of the extension. Example: "ops-tools".'
        - id: version
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InstalledExtension"
          />&gt;
        description: ''
  - name: 'queryCollectionsByName(ExtensionDataCollectionQuery, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.queryCollectionsByName
    package: azure-devops-extension-api
    summary: >-
      Query for one or more data collections for the specified extension.  Note:
      the token used for authorization must have been issued on behalf of the
      specified extension.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryCollectionsByName(collectionQuery:
        ExtensionDataCollectionQuery, publisherName: string, extensionName:
        string)
      parameters:
        - id: collectionQuery
          type: >-
            <xref uid="azure-devops-extension-api.ExtensionDataCollectionQuery"
            />
          description: '-'
        - id: publisherName
          type: string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type: string
          description: |
            Name of the extension. Example: "ops-tools".
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ExtensionDataCollection" />[]&gt;
        description: ''
  - name: queryExtensions(InstalledExtensionQuery)
    uid: azure-devops-extension-api.ExtensionManagementRestClient.queryExtensions
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function queryExtensions(query: InstalledExtensionQuery)'
      parameters:
        - id: query
          type: <xref uid="azure-devops-extension-api.InstalledExtensionQuery" />
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InstalledExtension"
          />[]&gt;
        description: ''
  - name: 'registerAuthorization(string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.registerAuthorization
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function registerAuthorization(publisherName: string, extensionName:
        string, registrationId: string)
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: registrationId
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ExtensionAuthorization" />&gt;
        description: ''
  - name: requestAcquisition(ExtensionAcquisitionRequest)
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.requestAcquisition
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function requestAcquisition(acquisitionRequest:
        ExtensionAcquisitionRequest)
      parameters:
        - id: acquisitionRequest
          type: >-
            <xref uid="azure-devops-extension-api.ExtensionAcquisitionRequest"
            />
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ExtensionAcquisitionRequest" />&gt;
        description: ''
  - name: 'requestExtension(string, string, string)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.requestExtension
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function requestExtension(publisherName: string, extensionName: string,
        requestMessage: string)
      parameters:
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: requestMessage
          type: string
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.RequestedExtension"
          />&gt;
        description: ''
  - name: 'resolveAllRequests(string, string, string, ExtensionRequestState)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.resolveAllRequests
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resolveAllRequests(rejectMessage: string, publisherName:
        string, extensionName: string, state: ExtensionRequestState)
      parameters:
        - id: rejectMessage
          type: string
          description: '-'
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: state
          type: <xref uid="azure-devops-extension-api.ExtensionRequestState" />
          description: |
            -
      return:
        type: Promise&lt;number&gt;
        description: ''
  - name: 'resolveRequest(string, string, string, string, ExtensionRequestState)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.resolveRequest
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resolveRequest(rejectMessage: string, publisherName: string,
        extensionName: string, requesterId: string, state:
        ExtensionRequestState)
      parameters:
        - id: rejectMessage
          type: string
          description: '-'
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: requesterId
          type: string
          description: '-'
        - id: state
          type: <xref uid="azure-devops-extension-api.ExtensionRequestState" />
          description: |
            -
      return:
        type: Promise&lt;number&gt;
        description: ''
  - name: 'setDocumentByName(any, string, string, string, string, string)'
    uid: azure-devops-extension-api.ExtensionManagementRestClient.setDocumentByName
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      parameters:
        - id: doc
          type: any
          description: '-'
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: scopeType
          type: string
          description: '-'
        - id: scopeValue
          type: string
          description: '-'
        - id: collectionName
          type: string
          description: |
            -
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'uninstallExtensionByName(string, string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.uninstallExtensionByName
    package: azure-devops-extension-api
    summary: Uninstall the specified extension from the account / project collection.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function uninstallExtensionByName(publisherName: string, extensionName:
        string, reason?: string, reasonCode?: string)
      parameters:
        - id: publisherName
          type: string
          description: 'Name of the publisher. Example: "fabrikam".'
        - id: extensionName
          type: string
          description: 'Name of the extension. Example: "ops-tools".'
        - id: reason
          type: string
          description: '-'
        - id: reasonCode
          type: string
          description: |
            -
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'updateDocumentByName(any, string, string, string, string, string)'
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.updateDocumentByName
    package: azure-devops-extension-api
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      parameters:
        - id: doc
          type: any
          description: '-'
        - id: publisherName
          type: string
          description: '-'
        - id: extensionName
          type: string
          description: '-'
        - id: scopeType
          type: string
          description: '-'
        - id: scopeValue
          type: string
          description: '-'
        - id: collectionName
          type: string
          description: |
            -
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: updateInstalledExtension(InstalledExtension)
    uid: >-
      azure-devops-extension-api.ExtensionManagementRestClient.updateInstalledExtension
    package: azure-devops-extension-api
    summary: >-
      Update an installed extension. Typically this API is used to enable or
      disable an extension.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function updateInstalledExtension(extension: InstalledExtension)'
      parameters:
        - id: extension
          type: <xref uid="azure-devops-extension-api.InstalledExtension" />
          description: |
            -
      return:
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.InstalledExtension"
          />&gt;
        description: ''
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
