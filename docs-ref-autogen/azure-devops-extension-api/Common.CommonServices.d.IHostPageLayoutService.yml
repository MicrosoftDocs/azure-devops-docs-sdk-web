### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService
    name: IHostPageLayoutService
    fullName: IHostPageLayoutService
    children:
      - >-
        azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.getFullScreenMode
      - >-
        azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.openCustomDialog
      - >-
        azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.openMessageDialog
      - >-
        azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.openPanel
      - >-
        azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.setFullScreenMode
    langs:
      - typeScript
    type: interface
    summary: >-
      Service for interacting with the layout of the page: managing full-screen
      mode,

      opening dialogs and panels
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.getFullScreenMode
    name: getFullScreenMode()
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets whether the page is currently in full screen mode
    syntax:
      content: function getFullScreenMode()
      parameters: []
      return:
        type:
          - Promise<boolean>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.openCustomDialog
    name: openCustomDialog
    fullName: openCustomDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Open a dialog in the host frame, showing custom external content'
    syntax:
      content: >-
        openCustomDialog: (contentContributionId: string, options?:
        IDialogOptions<TResult>) => void
      return:
        type:
          - >-
            (contentContributionId: string, options?: IDialogOptions<TResult>)
            => void
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.openMessageDialog
    name: openMessageDialog
    fullName: openMessageDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Open a dialog in the host frame, showing the specified text message, an OK
      and optional Cancel button
    syntax:
      content: >-
        openMessageDialog: (message: string, options?: IMessageDialogOptions) =>
        void
      return:
        type:
          - '(message: string, options?: IMessageDialogOptions) => void'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.openPanel
    name: openPanel
    fullName: openPanel
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Open a panel in the host frame, showing custom external content'
    syntax:
      content: >-
        openPanel: (contentContributionId: string, options:
        IPanelOptions<TResult>) => void
      return:
        type:
          - >-
            (contentContributionId: string, options: IPanelOptions<TResult>) =>
            void
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.Common.CommonServices.d.IHostPageLayoutService.setFullScreenMode
    name: setFullScreenMode(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: Enter or exit full screen mode
    syntax:
      content: 'function setFullScreenMode(fullScreenMode: boolean)'
      parameters:
        - id: fullScreenMode
          type:
            - boolean
          description: |
            True to enter full-screen mode, false to exit.
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.Common.CommonServices.d.IDocumentOptions
    name: IDocumentOptions
    spec.typeScript:
      - name: IDocumentOptions
        fullName: IDocumentOptions
        uid: azure-devops-extension-api.Common.CommonServices.d.IDocumentOptions
  - uid: >-
      azure-devops-extension-api.Common.CommonServices.d.ExtensionDataCollection[]
    name: 'ExtensionDataCollection[]'
    spec.typeScript:
      - name: ExtensionDataCollection
        fullName: ExtensionDataCollection
        uid: >-
          azure-devops-extension-api.Common.CommonServices.d.ExtensionDataCollection
      - name: '[]'
        fullName: '[]'
  - uid: >-
      Promise<azure-devops-extension-api.Common.CommonServices.d.ExtensionDataCollection[]>
    name: 'ExtensionDataCollection[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExtensionDataCollection
        fullName: ExtensionDataCollection
        uid: >-
          azure-devops-extension-api.Common.CommonServices.d.ExtensionDataCollection
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      Promise<azure-devops-extension-api.Common.CommonServices.d.IExtensionDataManager>
    name: IExtensionDataManager>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IExtensionDataManager
        fullName: IExtensionDataManager
        uid: >-
          azure-devops-extension-api.Common.CommonServices.d.IExtensionDataManager
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Common.CommonServices.d.MessageBannerLevel
    name: MessageBannerLevel
    spec.typeScript:
      - name: MessageBannerLevel
        fullName: MessageBannerLevel
        uid: azure-devops-extension-api.Common.CommonServices.d.MessageBannerLevel
  - uid: 'azure-devops-extension-api.Common.CommonServices.d.IGlobalMessageLink[]'
    name: 'IGlobalMessageLink[]'
    spec.typeScript:
      - name: IGlobalMessageLink
        fullName: IGlobalMessageLink
        uid: azure-devops-extension-api.Common.CommonServices.d.IGlobalMessageLink
      - name: '[]'
        fullName: '[]'
  - uid: azure-devops-extension-api.Common.CommonServices.d.IGlobalMessageBanner
    name: IGlobalMessageBanner
    spec.typeScript:
      - name: IGlobalMessageBanner
        fullName: IGlobalMessageBanner
        uid: >-
          azure-devops-extension-api.Common.CommonServices.d.IGlobalMessageBanner
  - uid: azure-devops-extension-api.Common.CommonServices.d.TeamFoundationHostType
    name: TeamFoundationHostType
    spec.typeScript:
      - name: TeamFoundationHostType
        fullName: TeamFoundationHostType
        uid: >-
          azure-devops-extension-api.Common.CommonServices.d.TeamFoundationHostType
  - uid: azure-devops-extension-api.Common.CommonServices.d.IDialogOptions<boolean>
    name: IDialogOptions<boolean>
    spec.typeScript:
      - name: IDialogOptions
        fullName: IDialogOptions
        uid: azure-devops-extension-api.Common.CommonServices.d.IDialogOptions
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-devops-extension-api.Common.CommonServices.d.PanelSize
    name: PanelSize
    spec.typeScript:
      - name: PanelSize
        fullName: PanelSize
        uid: azure-devops-extension-api.Common.CommonServices.d.PanelSize
  - uid: >-
      Promise<azure-devops-extension-api.Common.CommonServices.d.IProjectInfo |
      undefined>
    name: IProjectInfo | undefined>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IProjectInfo
        fullName: IProjectInfo
        uid: azure-devops-extension-api.Common.CommonServices.d.IProjectInfo
      - name: ' | undefined>'
        fullName: ' | undefined>'
