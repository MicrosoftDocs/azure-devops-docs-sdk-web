### YamlMime:TSType
name: AlertRestClient
uid: azure-devops-extension-api.AlertRestClient
package: azure-devops-extension-api
summary: >-
  Base class that should be used (derived from) to make requests to VSS REST
  apis
fullName: AlertRestClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AlertRestClient(IVssRestClientOptions)
    uid: azure-devops-extension-api.AlertRestClient.constructor
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new AlertRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type: <xref uid="azure-devops-extension-api.IVssRestClientOptions" />
          description: ''
methods:
  - name: createLegalReview(string, string, number, string)
    uid: azure-devops-extension-api.AlertRestClient.createLegalReview
    package: azure-devops-extension-api
    summary: >-
      Create legal review. This creates the legal review associated with the
      alert. It include the review work item url.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createLegalReview(project: string, repository: string, alertId:
        number, ref?: string): Promise<LegalReview>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: Name or id  of a repository for the legal alert
        - id: alertId
          type: number
          description: Advance Security alert id of the legal alert to get the legal review
        - id: ref
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.LegalReview" />&gt;
  - name: getAlert(string, number, string, string, ExpandOption)
    uid: azure-devops-extension-api.AlertRestClient.getAlert
    package: azure-devops-extension-api
    summary: Get an alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAlert(project: string, alertId: number, repository: string,
        ref?: string, expand?: ExpandOption): Promise<Alert>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: alertId
          type: number
          description: ID of alert to retrieve
        - id: repository
          type: string
          description: Name or id  of a repository that alert is part of
        - id: ref
          type: string
          description: ''
        - id: expand
          type: <xref uid="azure-devops-extension-api.ExpandOption" />
          description: >-
            Expand attributes of a secret alert. Possible values are `None` and
            `ValidationFingerprint`. Defaults to `None`. Be aware that if
            `expand` is set to `ValidationFingerprint`, the response may contain
            the secret in its unencrypted form. Please exercise caution when
            using this data.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Alert" />&gt;
  - name: getAlertInstances(string, number, string, string)
    uid: azure-devops-extension-api.AlertRestClient.getAlertInstances
    package: azure-devops-extension-api
    summary: >-
      Get instances of an alert on a branch specified with @ref. If @ref is not
      provided, return instances of an alert on default branch(if the alert
      exist in default branch) or latest affected branch.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAlertInstances(project: string, alertId: number, repository:
        string, ref?: string): Promise<AlertAnalysisInstance[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: alertId
          type: number
          description: ID of alert to retrieve
        - id: repository
          type: string
          description: Name or id of a repository that alert is part of
        - id: ref
          type: string
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.AlertAnalysisInstance" />[]&gt;
  - name: >-
      getAlerts(string, string, number, string, SearchCriteria,
      AlertListExpandOption, string)
    uid: azure-devops-extension-api.AlertRestClient.getAlerts
    package: azure-devops-extension-api
    summary: Get alerts for a repository
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAlerts(project: string, repository: string, top?: number,
        orderBy?: string, criteria?: SearchCriteria, expand?:
        AlertListExpandOption, continuationToken?: string):
        Promise<PagedList<Alert>>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: The name or ID of the repository
        - id: top
          type: number
          description: The maximum number of alerts to return
        - id: orderBy
          type: string
          description: >-
            Must be "id" "firstSeen" "lastSeen" "fixedOn" or "severity" 
            Defaults to "id"
        - id: criteria
          type: <xref uid="azure-devops-extension-api.SearchCriteria" />
          description: Options to limit the alerts returned
        - id: expand
          type: <xref uid="azure-devops-extension-api.AlertListExpandOption" />
          description: ''
        - id: continuationToken
          type: string
          description: >-
            If there are more alerts than can be returned, a continuation token
            is placed in the "x-ms-continuationtoken" header.  Use that token
            here to get the next page of alerts
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.PagedList"
          />&lt;<xref uid="azure-devops-extension-api.Alert" />&gt;&gt;
  - name: getAlertSarif(string, number, string, string, ExpandOption)
    uid: azure-devops-extension-api.AlertRestClient.getAlertSarif
    package: azure-devops-extension-api
    summary: Get an alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAlertSarif(project: string, alertId: number, repository:
        string, ref?: string, expand?: ExpandOption): Promise<string>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: alertId
          type: number
          description: ID of alert to retrieve
        - id: repository
          type: string
          description: Name or id  of a repository that alert is part of
        - id: ref
          type: string
          description: ''
        - id: expand
          type: <xref uid="azure-devops-extension-api.ExpandOption" />
          description: >-
            Expand attributes of a secret alert. Possible values are `None` and
            `ValidationFingerprint`. Defaults to `None`. Be aware that if
            `expand` is set to `ValidationFingerprint`, the response may contain
            the secret in its unencrypted form. Please exercise caution when
            using this data.
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: getBranches(string, string, AlertType, string, string, number, boolean)
    uid: azure-devops-extension-api.AlertRestClient.getBranches
    package: azure-devops-extension-api
    summary: Returns the branches for which analysis results were submitted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getBranches(project: string, repository: string, alertType:
        AlertType, continuationToken?: string, branchNameContains?: string,
        top?: number, includePullRequestBranches?: boolean): Promise<Branch[]>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: ''
        - id: alertType
          type: <xref uid="azure-devops-extension-api.AlertType" />
          description: >-
            The type of alert: Dependency Scanning (1), Secret (2), Code QL (3),
            etc.
        - id: continuationToken
          type: string
          description: >-
            A string variable that represents the branch name and is used to
            fetch branches that follow it in alphabetical order.
        - id: branchNameContains
          type: string
          description: >-
            A string variable used to fetch branches that contain this string
            anywhere in the branch name, case insensitive.
        - id: top
          type: number
          description: >-
            An int variable used to return the top k branches that satisfy the
            search criteria.
        - id: includePullRequestBranches
          type: boolean
          description: >-
            A bool variable indicating whether or not to include pull request
            branches.
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Branch" />[]&gt;
  - name: getOrgLevelAlertsByIds(number[])
    uid: azure-devops-extension-api.AlertRestClient.getOrgLevelAlertsByIds
    package: azure-devops-extension-api
    summary: >-
      Get alerts by their IDs at the organization level. Only retruns alerts
      that the user has permission to view. Only returns alerts of sku plans
      that are enabled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getOrgLevelAlertsByIds(alertIds: number[]): Promise<Alert[]>'
      parameters:
        - id: alertIds
          type: number[]
          description: List of alert IDs to retrieve
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Alert" />[]&gt;
  - name: getSarif(number)
    uid: azure-devops-extension-api.AlertRestClient.getSarif
    package: azure-devops-extension-api
    summary: Get the status of the Sarif processing job
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getSarif(sarifId: number): Promise<SarifUploadStatus>'
      parameters:
        - id: sarifId
          type: number
          description: Sarif ID returned when the Sarif was uploaded
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.SarifUploadStatus"
          />&gt;
  - name: getUxFilters(string, string, AlertType)
    uid: azure-devops-extension-api.AlertRestClient.getUxFilters
    package: azure-devops-extension-api
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getUxFilters(project: string, repository: string, alertType:
        AlertType): Promise<UxFilters>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: ''
        - id: alertType
          type: <xref uid="azure-devops-extension-api.AlertType" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.UxFilters" />&gt;
  - name: getValidityData(string, string, number)
    uid: azure-devops-extension-api.AlertRestClient.getValidityData
    package: azure-devops-extension-api
    summary: Get the validity details for an alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getValidityData(project: string, repository: string, alertId:
        number): Promise<ValidationRequestInfo>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: The name or ID of a repository
        - id: alertId
          type: number
          description: The ID of the alert
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.ValidationRequestInfo" />&gt;
  - name: initiateValidation(string, string, number)
    uid: azure-devops-extension-api.AlertRestClient.initiateValidation
    package: azure-devops-extension-api
    summary: Initiate the validation process for a given alert
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function initiateValidation(project: string, repository: string,
        alertId: number): Promise<AlertValidationRequestStatus>
      parameters:
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: The name or ID of a repository
        - id: alertId
          type: number
          description: The ID of the alert
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.AlertValidationRequestStatus" />&gt;
  - name: updateAlert(AlertStateUpdate, string, number, string)
    uid: azure-devops-extension-api.AlertRestClient.updateAlert
    package: azure-devops-extension-api
    summary: Update the status of an alert
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateAlert(stateUpdate: AlertStateUpdate, project: string,
        alertId: number, repository: string): Promise<Alert>
      parameters:
        - id: stateUpdate
          type: <xref uid="azure-devops-extension-api.AlertStateUpdate" />
          description: The new status of the alert
        - id: project
          type: string
          description: Project ID or project name
        - id: alertId
          type: number
          description: The ID of the alert
        - id: repository
          type: string
          description: The name or ID of the repository
      return:
        description: ''
        type: Promise&lt;<xref uid="azure-devops-extension-api.Alert" />&gt;
  - name: updateAlertsMetadata(AlertMetadata[], string, string)
    uid: azure-devops-extension-api.AlertRestClient.updateAlertsMetadata
    package: azure-devops-extension-api
    summary: Update alert metadata associations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateAlertsMetadata(alertsMetadata: AlertMetadata[], project:
        string, repository: string): Promise<AlertMetadataChange[]>
      parameters:
        - id: alertsMetadata
          type: <xref uid="azure-devops-extension-api.AlertMetadata" />[]
          description: A list of metadata to associate with alerts.
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: The name or ID of the repository.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="azure-devops-extension-api.AlertMetadataChange"
          />[]&gt;
  - name: uploadSarif(string, string, string, String)
    uid: azure-devops-extension-api.AlertRestClient.uploadSarif
    package: azure-devops-extension-api
    summary: Upload a Sarif containing security alerts
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadSarif(content: string, project: string, repository:
        string, notificationFlag?: String): Promise<number>
      parameters:
        - id: content
          type: string
          description: Content to upload
        - id: project
          type: string
          description: Project ID or project name
        - id: repository
          type: string
          description: The name or ID of a repository
        - id: notificationFlag
          type: String
          description: Header to signal that this is a progress notification
      return:
        description: ''
        type: Promise&lt;number&gt;
extends: <xref uid="azure-devops-extension-api.RestClientBase" />
