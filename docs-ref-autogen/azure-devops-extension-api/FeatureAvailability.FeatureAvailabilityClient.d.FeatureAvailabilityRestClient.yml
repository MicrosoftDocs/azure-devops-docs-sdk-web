### YamlMime:UniversalReference
items:
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient
    name: FeatureAvailabilityRestClient
    fullName: FeatureAvailabilityRestClient
    children:
      - >-
        azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.constructor
      - >-
        azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getAllFeatureFlags
      - >-
        azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getFeatureFlagByName
      - >-
        azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getFeatureFlagByNameAndUserEmail
      - >-
        azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getFeatureFlagByNameAndUserId
      - >-
        azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.updateFeatureFlag
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.Common.RestClientBase.d.RestClientBase
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.constructor
    name: FeatureAvailabilityRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new FeatureAvailabilityRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.Common.Context.d.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getAllFeatureFlags
    name: getAllFeatureFlags(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a listing of all feature flags and their current states for a
      user
    syntax:
      content: 'function getAllFeatureFlags(userEmail?: string)'
      parameters:
        - id: userEmail
          type:
            - string
          description: |
            The email of the user to check
          optional: true
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag[]>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getFeatureFlagByName
    name: 'getFeatureFlagByName(string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieve information on a single feature flag and its current states
    syntax:
      content: >-
        function getFeatureFlagByName(name: string, checkFeatureExists?:
        boolean)
      parameters:
        - id: name
          type:
            - string
          description: The name of the feature to retrieve
        - id: checkFeatureExists
          type:
            - boolean
          description: |
            Check if feature exists
          optional: true
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getFeatureFlagByNameAndUserEmail
    name: 'getFeatureFlagByNameAndUserEmail(string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve information on a single feature flag and its current states for a
      user
    syntax:
      content: >-
        function getFeatureFlagByNameAndUserEmail(name: string, userEmail:
        string, checkFeatureExists?: boolean)
      parameters:
        - id: name
          type:
            - string
          description: The name of the feature to retrieve
        - id: userEmail
          type:
            - string
          description: The email of the user to check
        - id: checkFeatureExists
          type:
            - boolean
          description: |
            Check if feature exists
          optional: true
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.getFeatureFlagByNameAndUserId
    name: 'getFeatureFlagByNameAndUserId(string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve information on a single feature flag and its current states for a
      user
    syntax:
      content: >-
        function getFeatureFlagByNameAndUserId(name: string, userId: string,
        checkFeatureExists?: boolean)
      parameters:
        - id: name
          type:
            - string
          description: The name of the feature to retrieve
        - id: userId
          type:
            - string
          description: The id of the user to check
        - id: checkFeatureExists
          type:
            - boolean
          description: |
            Check if feature exists
          optional: true
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag>
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailabilityClient.d.FeatureAvailabilityRestClient.updateFeatureFlag
    name: 'updateFeatureFlag(FeatureFlagPatch, string, string, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Change the state of an individual feature flag for a name
    syntax:
      content: >-
        function updateFeatureFlag(state: FeatureFlagPatch, name: string,
        userEmail?: string, checkFeatureExists?: boolean,
        setAtApplicationLevelAlso?: boolean)
      parameters:
        - id: state
          type:
            - >-
              azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlagPatch
          description: State that should be set
        - id: name
          type:
            - string
          description: The name of the feature to change
        - id: userEmail
          type:
            - string
          description: '-'
          optional: true
        - id: checkFeatureExists
          type:
            - boolean
          description: Checks if the feature exists before setting the state
          optional: true
        - id: setAtApplicationLevelAlso
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - >-
            Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.Common.RestClientBase.d.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.Common.RestClientBase.d.RestClientBase
  - uid: azure-devops-extension-api.Common.Context.d.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.Common.Context.d.IVssRestClientOptions
  - uid: >-
      Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag[]>
    name: 'FeatureFlag[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FeatureFlag
        fullName: FeatureFlag
        uid: >-
          azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      Promise<azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag>
    name: FeatureFlag>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FeatureFlag
        fullName: FeatureFlag
        uid: >-
          azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlag
      - name: '>'
        fullName: '>'
  - uid: >-
      azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlagPatch
    name: FeatureFlagPatch
    spec.typeScript:
      - name: FeatureFlagPatch
        fullName: FeatureFlagPatch
        uid: >-
          azure-devops-extension-api.FeatureAvailability.FeatureAvailability.d.FeatureFlagPatch
