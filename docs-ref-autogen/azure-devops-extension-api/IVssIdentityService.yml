### YamlMime:TSType
name: IVssIdentityService
uid: azure-devops-extension-api.IVssIdentityService
package: azure-devops-extension-api
summary: ''
fullName: IVssIdentityService
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: addMruIdentitiesAsync(IIdentity[])
    uid: azure-devops-extension-api.IVssIdentityService.addMruIdentitiesAsync
    package: azure-devops-extension-api
    summary: Add a list of identities to the MRU
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addMruIdentitiesAsync(identities: IIdentity[]):
        Promise<boolean>
      parameters:
        - id: identities
          type: <xref uid="azure-devops-extension-api.IIdentity" />[]
          description: list of IdentityRefs to add to the MRU
      return:
        description: True if the item was added, false otherwise
        type: Promise&lt;boolean&gt;
  - name: getConnections(IIdentity, boolean)
    uid: azure-devops-extension-api.IVssIdentityService.getConnections
    package: azure-devops-extension-api
    summary: Gets a list of connections for a given identity
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConnections(identity: IIdentity, getDirectReports?:
        boolean): Promise<IdentitiesGetConnectionsResponseModel>
      parameters:
        - id: identity
          type: <xref uid="azure-devops-extension-api.IIdentity" />
          description: Entity to look up connections
        - id: getDirectReports
          type: boolean
          description: ''
      return:
        description: Connections for the given identity
        type: >-
          Promise&lt;<xref
          uid="azure-devops-extension-api.IdentitiesGetConnectionsResponseModel"
          />&gt;
  - name: getIdentityMruAsync()
    uid: azure-devops-extension-api.IVssIdentityService.getIdentityMruAsync
    package: azure-devops-extension-api
    summary: Get a list of the Most Recently Used (MRU) identities
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getIdentityMruAsync(): Promise<IIdentity[]>'
      return:
        description: list of the Most Recently Used (MRU) identities
        type: Promise&lt;<xref uid="azure-devops-extension-api.IIdentity" />[]&gt;
  - name: removeMruIdentitiesAsync(IIdentity[])
    uid: azure-devops-extension-api.IVssIdentityService.removeMruIdentitiesAsync
    package: azure-devops-extension-api
    summary: Remove a list of identities from the MRU
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeMruIdentitiesAsync(identity: IIdentity[]):
        Promise<boolean>
      parameters:
        - id: identity
          type: <xref uid="azure-devops-extension-api.IIdentity" />[]
          description: ''
      return:
        description: True if the item was removed, false otherwise
        type: Promise&lt;boolean&gt;
  - name: >-
      searchIdentitiesAsync(string, string[], string[], string, any,
      (returnedEntities: IIdentity[]) => IIdentity[])
    uid: azure-devops-extension-api.IVssIdentityService.searchIdentitiesAsync
    package: azure-devops-extension-api
    summary: >-
      Given a search request model, return a list of Entities. If the
      filterIdentity callback is added, additionally filter the values before
      returning
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function searchIdentitiesAsync(query: string, identityTypes?: string[],
        operationScopes?: string[], queryTypeHint?: string, options?: any,
        filterIdentity?: (returnedEntities: IIdentity[]) => IIdentity[]):
        Promise<IIdentity[]>
      parameters:
        - id: query
          type: string
          description: The query to search the identities type with.
        - id: identityTypes
          type: string[]
          description: The types of identities to search (default "user" and "group")
        - id: operationScopes
          type: string[]
          description: The scope you would like to search (default "ims", "source")
        - id: queryTypeHint
          type: string
          description: A hint of what property your query is trying to search
        - id: options
          type: any
          description: Additional options to pass into the search
        - id: filterIdentity
          type: '(returnedEntities: IIdentity[]) =&gt; IIdentity[]'
          description: A filter passed in to alter the results of the identities found
      return:
        description: The list of filtered identities from the search.
        type: Promise&lt;<xref uid="azure-devops-extension-api.IIdentity" />[]&gt;
