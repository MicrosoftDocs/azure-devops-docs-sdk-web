### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint
    name: TaskDefinitionEndpoint
    fullName: TaskDefinitionEndpoint
    children:
      - azure-devops-extension-api.TaskDefinitionEndpoint.connectionId
      - azure-devops-extension-api.TaskDefinitionEndpoint.keySelector
      - azure-devops-extension-api.TaskDefinitionEndpoint.scope
      - azure-devops-extension-api.TaskDefinitionEndpoint.selector
      - azure-devops-extension-api.TaskDefinitionEndpoint.taskId
      - azure-devops-extension-api.TaskDefinitionEndpoint.url
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint.connectionId
    name: connectionId
    fullName: connectionId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An ID that identifies a service connection to be used for authenticating
      endpoint requests.
    syntax:
      content: 'connectionId: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint.keySelector
    name: keySelector
    fullName: keySelector
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An Json based keyselector to filter response returned by fetching the
      endpoint \<c\>Url\</c\>.A Json based keyselector must be prefixed with
      "jsonpath:". KeySelector can be used to specify the filter to get the keys
      for the values specified with Selector. \<example\> The following
      keyselector defines an Json for extracting nodes named 'ServiceName'.
      \<code\> endpoint.KeySelector = "jsonpath://ServiceName";
      \</code\>\</example\>
    syntax:
      content: 'keySelector: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint.scope
    name: scope
    fullName: scope
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The scope as understood by Connected Services. Essentialy, a project-id
      for now.
    syntax:
      content: 'scope: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint.selector
    name: selector
    fullName: selector
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An XPath/Json based selector to filter response returned by fetching the
      endpoint \<c\>Url\</c\>. An XPath based selector must be prefixed with the
      string "xpath:". A Json based selector must be prefixed with "jsonpath:".
      \<example\> The following selector defines an XPath for extracting nodes
      named 'ServiceName'. \<code\> endpoint.Selector = "xpath://ServiceName";
      \</code\>\</example\>
    syntax:
      content: 'selector: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint.taskId
    name: taskId
    fullName: taskId
    children: []
    langs:
      - typeScript
    type: property
    summary: TaskId that this endpoint belongs to.
    syntax:
      content: 'taskId: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.TaskDefinitionEndpoint.url
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL to GET.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
