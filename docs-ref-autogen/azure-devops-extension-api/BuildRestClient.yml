### YamlMime:UniversalReference
items:
  - uid: azure-devops-extension-api.BuildRestClient
    name: BuildRestClient
    fullName: BuildRestClient
    children:
      - azure-devops-extension-api.BuildRestClient.addBuildTag
      - azure-devops-extension-api.BuildRestClient.addBuildTags
      - azure-devops-extension-api.BuildRestClient.addDefinitionTag
      - azure-devops-extension-api.BuildRestClient.addDefinitionTags
      - azure-devops-extension-api.BuildRestClient.authorizeDefinitionResources
      - azure-devops-extension-api.BuildRestClient.authorizeProjectResources
      - azure-devops-extension-api.BuildRestClient.constructor
      - azure-devops-extension-api.BuildRestClient.createArtifact
      - azure-devops-extension-api.BuildRestClient.createDefinition
      - azure-devops-extension-api.BuildRestClient.createFolder
      - azure-devops-extension-api.BuildRestClient.deleteBuild
      - azure-devops-extension-api.BuildRestClient.deleteBuildTag
      - azure-devops-extension-api.BuildRestClient.deleteDefinition
      - azure-devops-extension-api.BuildRestClient.deleteDefinitionTag
      - azure-devops-extension-api.BuildRestClient.deleteFolder
      - azure-devops-extension-api.BuildRestClient.deleteTemplate
      - azure-devops-extension-api.BuildRestClient.getArtifact
      - azure-devops-extension-api.BuildRestClient.getArtifactContentZip
      - azure-devops-extension-api.BuildRestClient.getArtifacts
      - azure-devops-extension-api.BuildRestClient.getAttachment
      - azure-devops-extension-api.BuildRestClient.getAttachments
      - azure-devops-extension-api.BuildRestClient.getBadge
      - azure-devops-extension-api.BuildRestClient.getBuild
      - azure-devops-extension-api.BuildRestClient.getBuildBadge
      - azure-devops-extension-api.BuildRestClient.getBuildBadgeData
      - azure-devops-extension-api.BuildRestClient.getBuildChanges
      - azure-devops-extension-api.BuildRestClient.getBuildController
      - azure-devops-extension-api.BuildRestClient.getBuildControllers
      - azure-devops-extension-api.BuildRestClient.getBuildLog
      - azure-devops-extension-api.BuildRestClient.getBuildLogLines
      - azure-devops-extension-api.BuildRestClient.getBuildLogs
      - azure-devops-extension-api.BuildRestClient.getBuildLogsZip
      - azure-devops-extension-api.BuildRestClient.getBuildLogZip
      - azure-devops-extension-api.BuildRestClient.getBuildOptionDefinitions
      - azure-devops-extension-api.BuildRestClient.getBuildProperties
      - azure-devops-extension-api.BuildRestClient.getBuildReport
      - azure-devops-extension-api.BuildRestClient.getBuildReportHtmlContent
      - azure-devops-extension-api.BuildRestClient.getBuilds
      - azure-devops-extension-api.BuildRestClient.getBuildSettings
      - azure-devops-extension-api.BuildRestClient.getBuildTags
      - azure-devops-extension-api.BuildRestClient.getBuildTimeline
      - azure-devops-extension-api.BuildRestClient.getBuildWorkItemsRefs
      - >-
        azure-devops-extension-api.BuildRestClient.getBuildWorkItemsRefsFromCommits
      - azure-devops-extension-api.BuildRestClient.getChangesBetweenBuilds
      - azure-devops-extension-api.BuildRestClient.getDefinition
      - azure-devops-extension-api.BuildRestClient.getDefinitionMetrics
      - azure-devops-extension-api.BuildRestClient.getDefinitionProperties
      - azure-devops-extension-api.BuildRestClient.getDefinitionResources
      - azure-devops-extension-api.BuildRestClient.getDefinitionRevisions
      - azure-devops-extension-api.BuildRestClient.getDefinitions
      - azure-devops-extension-api.BuildRestClient.getDefinitionTags
      - azure-devops-extension-api.BuildRestClient.getFile
      - azure-devops-extension-api.BuildRestClient.getFileContents
      - azure-devops-extension-api.BuildRestClient.getFolders
      - azure-devops-extension-api.BuildRestClient.getLatestBuild
      - azure-devops-extension-api.BuildRestClient.getPathContents
      - azure-devops-extension-api.BuildRestClient.getProjectMetrics
      - azure-devops-extension-api.BuildRestClient.getProjectResources
      - azure-devops-extension-api.BuildRestClient.getPullRequest
      - azure-devops-extension-api.BuildRestClient.getResourceUsage
      - azure-devops-extension-api.BuildRestClient.getStatusBadge
      - azure-devops-extension-api.BuildRestClient.getTags
      - azure-devops-extension-api.BuildRestClient.getTemplate
      - azure-devops-extension-api.BuildRestClient.getTemplates
      - azure-devops-extension-api.BuildRestClient.getWorkItemsBetweenBuilds
      - azure-devops-extension-api.BuildRestClient.listBranches
      - azure-devops-extension-api.BuildRestClient.listRepositories
      - azure-devops-extension-api.BuildRestClient.listSourceProviders
      - azure-devops-extension-api.BuildRestClient.listWebhooks
      - azure-devops-extension-api.BuildRestClient.queueBuild
      - azure-devops-extension-api.BuildRestClient.RESOURCE_AREA_ID
      - azure-devops-extension-api.BuildRestClient.restoreDefinition
      - azure-devops-extension-api.BuildRestClient.restoreWebhooks
      - azure-devops-extension-api.BuildRestClient.saveTemplate
      - azure-devops-extension-api.BuildRestClient.updateBuild
      - azure-devops-extension-api.BuildRestClient.updateBuildProperties
      - azure-devops-extension-api.BuildRestClient.updateBuilds
      - azure-devops-extension-api.BuildRestClient.updateBuildSettings
      - azure-devops-extension-api.BuildRestClient.updateDefinition
      - azure-devops-extension-api.BuildRestClient.updateDefinitionProperties
      - azure-devops-extension-api.BuildRestClient.updateFolder
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: azure-devops-extension-api.RestClientBase
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.addBuildTag
    name: 'addBuildTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a tag to a build.
    syntax:
      content: 'function addBuildTag(project: string, buildId: number, tag: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: tag
          type:
            - string
          description: |
            The tag to add.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.addBuildTags
    name: 'addBuildTags(string[], string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds tags to a build.
    syntax:
      content: 'function addBuildTags(tags: string[], project: string, buildId: number)'
      parameters:
        - id: tags
          type:
            - 'string[]'
          description: The tags to add.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.addDefinitionTag
    name: 'addDefinitionTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a tag to a definition
    syntax:
      content: >-
        function addDefinitionTag(project: string, definitionId: number, tag:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: tag
          type:
            - string
          description: |
            The tag to add.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.addDefinitionTags
    name: 'addDefinitionTags(string[], string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds multiple tags to a definition.
    syntax:
      content: >-
        function addDefinitionTags(tags: string[], project: string,
        definitionId: number)
      parameters:
        - id: tags
          type:
            - 'string[]'
          description: The tags to add.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            The ID of the definition.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.authorizeDefinitionResources
    name: >-
      authorizeDefinitionResources(DefinitionResourceReference[], string,
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function authorizeDefinitionResources(resources:
        DefinitionResourceReference[], project: string, definitionId: number)
      parameters:
        - id: resources
          type:
            - 'azure-devops-extension-api.DefinitionResourceReference[]'
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.DefinitionResourceReference[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.authorizeProjectResources
    name: 'authorizeProjectResources(DefinitionResourceReference[], string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function authorizeProjectResources(resources:
        DefinitionResourceReference[], project: string)
      parameters:
        - id: resources
          type:
            - 'azure-devops-extension-api.DefinitionResourceReference[]'
          description: '-'
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.DefinitionResourceReference[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.constructor
    name: BuildRestClient(IVssRestClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BuildRestClient(options: IVssRestClientOptions)'
      parameters:
        - id: options
          type:
            - azure-devops-extension-api.IVssRestClientOptions
          description: ''
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.createArtifact
    name: 'createArtifact(BuildArtifact, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Associates an artifact with a build.
    syntax:
      content: >-
        function createArtifact(artifact: BuildArtifact, project: string,
        buildId: number)
      parameters:
        - id: artifact
          type:
            - azure-devops-extension-api.BuildArtifact
          description: The artifact.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - Promise<azure-devops-extension-api.BuildArtifact>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.createDefinition
    name: 'createDefinition(BuildDefinition, string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new definition.
    syntax:
      content: >-
        function createDefinition(definition: BuildDefinition, project: string,
        definitionToCloneId?: number, definitionToCloneRevision?: number)
      parameters:
        - id: definition
          type:
            - azure-devops-extension-api.BuildDefinition
          description: The definition.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionToCloneId
          type:
            - number
          description: '-'
          optional: true
        - id: definitionToCloneRevision
          type:
            - number
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildDefinition>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.createFolder
    name: 'createFolder(Folder, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new folder.
    syntax:
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      parameters:
        - id: folder
          type:
            - azure-devops-extension-api.Folder
          description: The folder.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: |
            The full path of the folder.
      return:
        type:
          - Promise<azure-devops-extension-api.Folder>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.deleteBuild
    name: 'deleteBuild(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a build.
    syntax:
      content: 'function deleteBuild(project: string, buildId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.deleteBuildTag
    name: 'deleteBuildTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a tag from a build.
    syntax:
      content: 'function deleteBuildTag(project: string, buildId: number, tag: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: tag
          type:
            - string
          description: |
            The tag to remove.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.deleteDefinition
    name: 'deleteDefinition(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a definition and all associated builds.
    syntax:
      content: 'function deleteDefinition(project: string, definitionId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            The ID of the definition.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.deleteDefinitionTag
    name: 'deleteDefinitionTag(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a tag from a definition.
    syntax:
      content: >-
        function deleteDefinitionTag(project: string, definitionId: number, tag:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: tag
          type:
            - string
          description: |
            The tag to remove.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.deleteFolder
    name: 'deleteFolder(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes a definition folder. Definitions and their corresponding builds
      will also be deleted.
    syntax:
      content: 'function deleteFolder(project: string, path: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: |
            The full path to the folder.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.deleteTemplate
    name: 'deleteTemplate(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a build definition template.
    syntax:
      content: 'function deleteTemplate(project: string, templateId: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: |
            The ID of the template.
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getArtifact
    name: 'getArtifact(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a specific artifact for a build.
    syntax:
      content: >-
        function getArtifact(project: string, buildId: number, artifactName:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: artifactName
          type:
            - string
          description: |
            The name of the artifact.
      return:
        type:
          - Promise<azure-devops-extension-api.BuildArtifact>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getArtifactContentZip
    name: 'getArtifactContentZip(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a specific artifact for a build.
    syntax:
      content: >-
        function getArtifactContentZip(project: string, buildId: number,
        artifactName: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: artifactName
          type:
            - string
          description: |
            The name of the artifact.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getArtifacts
    name: 'getArtifacts(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all artifacts for a build.
    syntax:
      content: 'function getArtifacts(project: string, buildId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildArtifact[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getAttachment
    name: 'getAttachment(string, number, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a specific attachment.
    syntax:
      content: >-
        function getAttachment(project: string, buildId: number, timelineId:
        string, recordId: string, type: string, name: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: timelineId
          type:
            - string
          description: The ID of the timeline.
        - id: recordId
          type:
            - string
          description: The ID of the timeline record.
        - id: type
          type:
            - string
          description: The type of the attachment.
        - id: name
          type:
            - string
          description: |
            The name of the attachment.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getAttachments
    name: 'getAttachments(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the list of attachments of a specific type that are associated with a
      build.
    syntax:
      content: 'function getAttachments(project: string, buildId: number, type: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: type
          type:
            - string
          description: |
            The type of attachment.
      return:
        type:
          - 'Promise<azure-devops-extension-api.Attachment[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBadge
    name: 'getBadge(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a badge that indicates the status of the most recent build for a
      definition.
    syntax:
      content: >-
        function getBadge(project: string, definitionId: number, branchName?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: The project ID or name.
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: branchName
          type:
            - string
          description: |
            The name of the branch.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuild
    name: 'getBuild(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a build
    syntax:
      content: >-
        function getBuild(project: string, buildId: number, propertyFilters?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: '-'
        - id: propertyFilters
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Build>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildBadge
    name: 'getBuildBadge(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a badge that indicates the status of the most recent build for the
      specified branch.
    syntax:
      content: >-
        function getBuildBadge(project: string, repoType: string, repoId?:
        string, branchName?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repoType
          type:
            - string
          description: The repository type.
        - id: repoId
          type:
            - string
          description: The repository ID.
          optional: true
        - id: branchName
          type:
            - string
          description: |
            The branch name.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildBadge>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildBadgeData
    name: 'getBuildBadgeData(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a badge that indicates the status of the most recent build for the
      specified branch.
    syntax:
      content: >-
        function getBuildBadgeData(project: string, repoType: string, repoId?:
        string, branchName?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repoType
          type:
            - string
          description: The repository type.
        - id: repoId
          type:
            - string
          description: The repository ID.
          optional: true
        - id: branchName
          type:
            - string
          description: |
            The branch name.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildChanges
    name: 'getBuildChanges(string, number, string, number, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the changes associated with a build
    syntax:
      content: >-
        function getBuildChanges(project: string, buildId: number,
        continuationToken?: string, top?: number, includeSourceChange?: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: '-'
        - id: continuationToken
          type:
            - string
          description: '-'
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
        - id: includeSourceChange
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Change[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildController
    name: getBuildController(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a controller
    syntax:
      content: 'function getBuildController(controllerId: number)'
      parameters:
        - id: controllerId
          type:
            - number
          description: |
            -
      return:
        type:
          - Promise<azure-devops-extension-api.BuildController>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildControllers
    name: getBuildControllers(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets controller, optionally filtered by name'
    syntax:
      content: 'function getBuildControllers(name?: string)'
      parameters:
        - id: name
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildController[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildLog
    name: 'getBuildLog(string, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an individual log file for a build.
    syntax:
      content: >-
        function getBuildLog(project: string, buildId: number, logId: number,
        startLine?: number, endLine?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: logId
          type:
            - number
          description: The ID of the log file.
        - id: startLine
          type:
            - number
          description: The start line.
          optional: true
        - id: endLine
          type:
            - number
          description: |
            The end line.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildLogLines
    name: 'getBuildLogLines(string, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an individual log file for a build.
    syntax:
      content: >-
        function getBuildLogLines(project: string, buildId: number, logId:
        number, startLine?: number, endLine?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: logId
          type:
            - number
          description: The ID of the log file.
        - id: startLine
          type:
            - number
          description: The start line.
          optional: true
        - id: endLine
          type:
            - number
          description: |
            The end line.
          optional: true
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildLogs
    name: 'getBuildLogs(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the logs for a build.
    syntax:
      content: 'function getBuildLogs(project: string, buildId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildLog[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildLogsZip
    name: 'getBuildLogsZip(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the logs for a build.
    syntax:
      content: 'function getBuildLogsZip(project: string, buildId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildLogZip
    name: 'getBuildLogZip(string, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an individual log file for a build.
    syntax:
      content: >-
        function getBuildLogZip(project: string, buildId: number, logId: number,
        startLine?: number, endLine?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: logId
          type:
            - number
          description: The ID of the log file.
        - id: startLine
          type:
            - number
          description: The start line.
          optional: true
        - id: endLine
          type:
            - number
          description: |
            The end line.
          optional: true
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildOptionDefinitions
    name: getBuildOptionDefinitions(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all build definition options supported by the system.
    syntax:
      content: 'function getBuildOptionDefinitions(project?: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildOptionDefinition[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildProperties
    name: 'getBuildProperties(string, number, string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets properties for a build.
    syntax:
      content: >-
        function getBuildProperties(project: string, buildId: number, filter?:
        string[])
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: filter
          type:
            - 'string[]'
          description: >
            A comma-delimited list of properties. If specified, filters to these
            specific properties.
          optional: true
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildReport
    name: 'getBuildReport(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a build report.
    syntax:
      content: 'function getBuildReport(project: string, buildId: number, type?: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: type
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildReportMetadata>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildReportHtmlContent
    name: 'getBuildReportHtmlContent(string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a build report.
    syntax:
      content: >-
        function getBuildReportHtmlContent(project: string, buildId: number,
        type?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: type
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuilds
    name: >-
      getBuilds(string, number[], number[], string, Date, Date, string,
      BuildReason, BuildStatus, BuildResult, string[], string[], number, string,
      number, QueryDeletedOption, BuildQueryOrder, string, number[], string,
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of builds.
    syntax:
      content: >-
        function getBuilds(project: string, definitions?: number[], queues?:
        number[], buildNumber?: string, minTime?: Date, maxTime?: Date,
        requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
        BuildStatus, resultFilter?: BuildResult, tagFilters?: string[],
        properties?: string[], top?: number, continuationToken?: string,
        maxBuildsPerDefinition?: number, deletedFilter?: QueryDeletedOption,
        queryOrder?: BuildQueryOrder, branchName?: string, buildIds?: number[],
        repositoryId?: string, repositoryType?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitions
          type:
            - 'number[]'
          description: >-
            A comma-delimited list of definition IDs. If specified, filters to
            builds for these definitions.
          optional: true
        - id: queues
          type:
            - 'number[]'
          description: >-
            A comma-delimited list of queue IDs. If specified, filters to builds
            that ran against these queues.
          optional: true
        - id: buildNumber
          type:
            - string
          description: >-
            If specified, filters to builds that match this build number. Append
            * to do a prefix search.
          optional: true
        - id: minTime
          type:
            - Date
          description: >-
            If specified, filters to builds that finished/started/queued after
            this date based on the queryOrder specified.
          optional: true
        - id: maxTime
          type:
            - Date
          description: >-
            If specified, filters to builds that finished/started/queued before
            this date based on the queryOrder specified.
          optional: true
        - id: requestedFor
          type:
            - string
          description: 'If specified, filters to builds requested for the specified user.'
          optional: true
        - id: reasonFilter
          type:
            - azure-devops-extension-api.BuildReason
          description: 'If specified, filters to builds that match this reason.'
          optional: true
        - id: statusFilter
          type:
            - azure-devops-extension-api.BuildStatus
          description: 'If specified, filters to builds that match this status.'
          optional: true
        - id: resultFilter
          type:
            - azure-devops-extension-api.BuildResult
          description: 'If specified, filters to builds that match this result.'
          optional: true
        - id: tagFilters
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of tags. If specified, filters to builds that
            have the specified tags.
          optional: true
        - id: properties
          type:
            - 'string[]'
          description: A comma-delimited list of properties to retrieve.
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of builds to return.
          optional: true
        - id: continuationToken
          type:
            - string
          description: >-
            A continuation token, returned by a previous call to this method,
            that can be used to return the next set of builds.
          optional: true
        - id: maxBuildsPerDefinition
          type:
            - number
          description: The maximum number of builds to return per definition.
          optional: true
        - id: deletedFilter
          type:
            - azure-devops-extension-api.QueryDeletedOption
          description: >-
            Indicates whether to exclude, include, or only return deleted
            builds.
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.BuildQueryOrder
          description: The order in which builds should be returned.
          optional: true
        - id: branchName
          type:
            - string
          description: >-
            If specified, filters to builds that built branches that built this
            branch.
          optional: true
        - id: buildIds
          type:
            - 'number[]'
          description: A comma-delimited list that specifies the IDs of builds to retrieve.
          optional: true
        - id: repositoryId
          type:
            - string
          description: 'If specified, filters to builds that built from this repository.'
          optional: true
        - id: repositoryType
          type:
            - string
          description: >
            If specified, filters to builds that built from repositories of this
            type.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Build[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildSettings
    name: getBuildSettings(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the build settings.
    syntax:
      content: 'function getBuildSettings(project?: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildSettings>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildTags
    name: 'getBuildTags(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the tags for a build.
    syntax:
      content: 'function getBuildTags(project: string, buildId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildTimeline
    name: 'getBuildTimeline(string, number, string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets details for a build
    syntax:
      content: >-
        function getBuildTimeline(project: string, buildId: number, timelineId?:
        string, changeId?: number, planId?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: '-'
        - id: timelineId
          type:
            - string
          description: '-'
          optional: true
        - id: changeId
          type:
            - number
          description: '-'
          optional: true
        - id: planId
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Timeline>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getBuildWorkItemsRefs
    name: 'getBuildWorkItemsRefs(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the work items associated with a build.
    syntax:
      content: >-
        function getBuildWorkItemsRefs(project: string, buildId: number, top?:
        number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: top
          type:
            - number
          description: |
            The maximum number of work items to return.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ResourceRef[]>'
    package: azure-devops-extension-api
  - uid: >-
      azure-devops-extension-api.BuildRestClient.getBuildWorkItemsRefsFromCommits
    name: 'getBuildWorkItemsRefsFromCommits(string[], string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets the work items associated with a build, filtered to specific commits.'
    syntax:
      content: >-
        function getBuildWorkItemsRefsFromCommits(commitIds: string[], project:
        string, buildId: number, top?: number)
      parameters:
        - id: commitIds
          type:
            - 'string[]'
          description: A comma-delimited list of commit IDs.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: top
          type:
            - number
          description: >
            The maximum number of work items to return, or the number of commits
            to consider if no commit IDs are specified.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ResourceRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getChangesBetweenBuilds
    name: 'getChangesBetweenBuilds(string, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the changes made to the repository between two given builds.
    syntax:
      content: >-
        function getChangesBetweenBuilds(project: string, fromBuildId?: number,
        toBuildId?: number, top?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: fromBuildId
          type:
            - number
          description: The ID of the first build.
          optional: true
        - id: toBuildId
          type:
            - number
          description: The ID of the last build.
          optional: true
        - id: top
          type:
            - number
          description: |
            The maximum number of changes to return.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Change[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinition
    name: 'getDefinition(string, number, number, Date, string[], boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets a definition, optionally at a specific revision.'
    syntax:
      content: >-
        function getDefinition(project: string, definitionId: number, revision?:
        number, minMetricsTime?: Date, propertyFilters?: string[],
        includeLatestBuilds?: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: revision
          type:
            - number
          description: >-
            The revision number to retrieve. If this is not specified, the
            latest version will be returned.
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: >-
            If specified, indicates the date from which metrics should be
            included.
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: A comma-delimited list of properties to include in the results.
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildDefinition>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinitionMetrics
    name: 'getDefinitionMetrics(string, number, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets build metrics for a definition.
    syntax:
      content: >-
        function getDefinitionMetrics(project: string, definitionId: number,
        minMetricsTime?: Date)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: minMetricsTime
          type:
            - Date
          description: |
            The date from which to calculate metrics.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildMetric[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinitionProperties
    name: 'getDefinitionProperties(string, number, string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets properties for a definition.
    syntax:
      content: >-
        function getDefinitionProperties(project: string, definitionId: number,
        filter?: string[])
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: filter
          type:
            - 'string[]'
          description: >
            A comma-delimited list of properties. If specified, filters to these
            specific properties.
          optional: true
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinitionResources
    name: 'getDefinitionResources(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDefinitionResources(project: string, definitionId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            -
      return:
        type:
          - 'Promise<azure-devops-extension-api.DefinitionResourceReference[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinitionRevisions
    name: 'getDefinitionRevisions(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all revisions of a definition.
    syntax:
      content: 'function getDefinitionRevisions(project: string, definitionId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            The ID of the definition.
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildDefinitionRevision[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinitions
    name: >-
      getDefinitions(string, string, string, string, DefinitionQueryOrder,
      number, string, Date, number[], string, Date, Date, boolean, boolean,
      string, number, string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of definitions.
    syntax:
      content: >-
        function getDefinitions(project: string, name?: string, repositoryId?:
        string, repositoryType?: string, queryOrder?: DefinitionQueryOrder,
        top?: number, continuationToken?: string, minMetricsTime?: Date,
        definitionIds?: number[], path?: string, builtAfter?: Date,
        notBuiltAfter?: Date, includeAllProperties?: boolean,
        includeLatestBuilds?: boolean, taskIdFilter?: string, processType?:
        number, yamlFilename?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: name
          type:
            - string
          description: 'If specified, filters to definitions whose names match this pattern.'
          optional: true
        - id: repositoryId
          type:
            - string
          description: >-
            A repository ID. If specified, filters to definitions that use this
            repository.
          optional: true
        - id: repositoryType
          type:
            - string
          description: >-
            If specified, filters to definitions that have a repository of this
            type.
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.DefinitionQueryOrder
          description: Indicates the order in which definitions should be returned.
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of definitions to return.
          optional: true
        - id: continuationToken
          type:
            - string
          description: >-
            A continuation token, returned by a previous call to this method,
            that can be used to return the next set of definitions.
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: >-
            If specified, indicates the date from which metrics should be
            included.
          optional: true
        - id: definitionIds
          type:
            - 'number[]'
          description: >-
            A comma-delimited list that specifies the IDs of definitions to
            retrieve.
          optional: true
        - id: path
          type:
            - string
          description: 'If specified, filters to definitions under this folder.'
          optional: true
        - id: builtAfter
          type:
            - Date
          description: >-
            If specified, filters to definitions that have builds after this
            date.
          optional: true
        - id: notBuiltAfter
          type:
            - Date
          description: >-
            If specified, filters to definitions that do not have builds after
            this date.
          optional: true
        - id: includeAllProperties
          type:
            - boolean
          description: >-
            Indicates whether the full definitions should be returned. By
            default, shallow representations of the definitions are returned.
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: >-
            Indicates whether to return the latest and latest completed builds
            for this definition.
          optional: true
        - id: taskIdFilter
          type:
            - string
          description: 'If specified, filters to definitions that use the specified task.'
          optional: true
        - id: processType
          type:
            - number
          description: 'If specified, filters to definitions with the given process type.'
          optional: true
        - id: yamlFilename
          type:
            - string
          description: >
            If specified, filters to YAML definitions that match the given
            filename.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildDefinitionReference[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getDefinitionTags
    name: 'getDefinitionTags(string, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the tags for a definition.
    syntax:
      content: >-
        function getDefinitionTags(project: string, definitionId: number,
        revision?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: revision
          type:
            - number
          description: >
            The definition revision number. If not specified, uses the latest
            revision of the definition.
          optional: true
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getFile
    name: 'getFile(string, number, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a file from the build.
    syntax:
      content: >-
        function getFile(project: string, buildId: number, artifactName: string,
        fileId: string, fileName: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: artifactName
          type:
            - string
          description: The name of the artifact.
        - id: fileId
          type:
            - string
          description: The primary key for the file.
        - id: fileName
          type:
            - string
          description: |
            The name that the file will be set to.
      return:
        type:
          - Promise<ArrayBuffer>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getFileContents
    name: 'getFileContents(string, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the contents of a file in the given source code repository.
    syntax:
      content: >-
        function getFileContents(project: string, providerName: string,
        serviceEndpointId?: string, repository?: string, commitOrBranch?:
        string, path?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: serviceEndpointId
          type:
            - string
          description: >-
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
        - id: repository
          type:
            - string
          description: >-
            If specified, the vendor-specific identifier or the name of the
            repository to get branches. Can only be omitted for providers that
            do not support multiple repositories.
          optional: true
        - id: commitOrBranch
          type:
            - string
          description: >-
            The identifier of the commit or branch from which a file's contents
            are retrieved.
          optional: true
        - id: path
          type:
            - string
          description: >
            The path to the file to retrieve, relative to the root of the
            repository.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getFolders
    name: 'getFolders(string, string, FolderQueryOrder)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of build definition folders.
    syntax:
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        FolderQueryOrder)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: The path to start with.
          optional: true
        - id: queryOrder
          type:
            - azure-devops-extension-api.FolderQueryOrder
          description: |
            The order in which folders should be returned.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.Folder[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getLatestBuild
    name: 'getLatestBuild(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the latest build for a definition, optionally scoped to a specific
      branch.
    syntax:
      content: >-
        function getLatestBuild(project: string, definition: string,
        branchName?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definition
          type:
            - string
          description: >-
            definition name with optional leading folder path, or the definition
            id
        - id: branchName
          type:
            - string
          description: |
            optional parameter that indicates the specific branch to use
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Build>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getPathContents
    name: 'getPathContents(string, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the contents of a directory in the given source code repository.
    syntax:
      content: >-
        function getPathContents(project: string, providerName: string,
        serviceEndpointId?: string, repository?: string, commitOrBranch?:
        string, path?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: serviceEndpointId
          type:
            - string
          description: >-
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
        - id: repository
          type:
            - string
          description: >-
            If specified, the vendor-specific identifier or the name of the
            repository to get branches. Can only be omitted for providers that
            do not support multiple repositories.
          optional: true
        - id: commitOrBranch
          type:
            - string
          description: >-
            The identifier of the commit or branch from which a file's contents
            are retrieved.
          optional: true
        - id: path
          type:
            - string
          description: |
            The path contents to list, relative to the root of the repository.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.SourceRepositoryItem[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getProjectMetrics
    name: 'getProjectMetrics(string, string, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets build metrics for a project.
    syntax:
      content: >-
        function getProjectMetrics(project: string, metricAggregationType?:
        string, minMetricsTime?: Date)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: metricAggregationType
          type:
            - string
          description: 'The aggregation type to use (hourly, daily).'
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: |
            The date from which to calculate metrics.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildMetric[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getProjectResources
    name: 'getProjectResources(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProjectResources(project: string, type?: string, id?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: type
          type:
            - string
          description: '-'
          optional: true
        - id: id
          type:
            - string
          description: |
            -
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.DefinitionResourceReference[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getPullRequest
    name: 'getPullRequest(string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a pull request object from source provider.
    syntax:
      content: >-
        function getPullRequest(project: string, providerName: string,
        pullRequestId: string, repositoryId?: string, serviceEndpointId?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: pullRequestId
          type:
            - string
          description: Vendor-specific id of the pull request.
        - id: repositoryId
          type:
            - string
          description: >-
            Vendor-specific identifier or the name of the repository that
            contains the pull request.
          optional: true
        - id: serviceEndpointId
          type:
            - string
          description: >
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.PullRequest>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getResourceUsage
    name: getResourceUsage()
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about build resources in the system.
    syntax:
      content: function getResourceUsage()
      parameters: []
      return:
        type:
          - Promise<azure-devops-extension-api.BuildResourceUsage>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getStatusBadge
    name: 'getStatusBadge(string, string, string, string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      \<p\>Gets the build status for a definition, optionally scoped to a
      specific branch, stage, job, and configuration.\</p\> \<p\>If there are
      more than one, then it is required to pass in a stageName value when
      specifying a jobName, and the same rule then applies for both if passing a
      configuration parameter.\</p\>
    syntax:
      content: >-
        function getStatusBadge(project: string, definition: string,
        branchName?: string, stageName?: string, jobName?: string,
        configuration?: string, label?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definition
          type:
            - string
          description: >-
            Either the definition name with optional leading folder path, or the
            definition id.
        - id: branchName
          type:
            - string
          description: Only consider the most recent build for this branch.
          optional: true
        - id: stageName
          type:
            - string
          description: Use this stage within the pipeline to render the status.
          optional: true
        - id: jobName
          type:
            - string
          description: Use this job within a stage of the pipeline to render the status.
          optional: true
        - id: configuration
          type:
            - string
          description: Use this job configuration to render the status
          optional: true
        - id: label
          type:
            - string
          description: |
            Replaces the default text on the left side of the badge.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getTags
    name: getTags(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all build and definition tags in the project.
    syntax:
      content: 'function getTags(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getTemplate
    name: 'getTemplate(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a specific build definition template.
    syntax:
      content: 'function getTemplate(project: string, templateId: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: |
            The ID of the requested template.
      return:
        type:
          - Promise<azure-devops-extension-api.BuildDefinitionTemplate>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getTemplates
    name: getTemplates(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all definition templates.
    syntax:
      content: 'function getTemplates(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.BuildDefinitionTemplate[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.getWorkItemsBetweenBuilds
    name: 'getWorkItemsBetweenBuilds(string, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all the work items between two builds.
    syntax:
      content: >-
        function getWorkItemsBetweenBuilds(project: string, fromBuildId: number,
        toBuildId: number, top?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: fromBuildId
          type:
            - number
          description: The ID of the first build.
        - id: toBuildId
          type:
            - number
          description: The ID of the last build.
        - id: top
          type:
            - number
          description: |
            The maximum number of work items to return.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.ResourceRef[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.listBranches
    name: 'listBranches(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of branches for the given source code repository.
    syntax:
      content: >-
        function listBranches(project: string, providerName: string,
        serviceEndpointId?: string, repository?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: serviceEndpointId
          type:
            - string
          description: >-
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
        - id: repository
          type:
            - string
          description: >
            If specified, the vendor-specific identifier or the name of the
            repository to get branches. Can only be omitted for providers that
            do not support multiple repositories.
          optional: true
      return:
        type:
          - 'Promise<string[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.listRepositories
    name: >-
      listRepositories(string, string, string, string, ResultSet, boolean,
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of source code repositories.
    syntax:
      content: >-
        function listRepositories(project: string, providerName: string,
        serviceEndpointId?: string, repository?: string, resultSet?: ResultSet,
        pageResults?: boolean, continuationToken?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: serviceEndpointId
          type:
            - string
          description: >-
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
        - id: repository
          type:
            - string
          description: >-
            If specified, the vendor-specific identifier or the name of a single
            repository to get.
          optional: true
        - id: resultSet
          type:
            - azure-devops-extension-api.ResultSet
          description: >-
            'top' for the repositories most relevant for the endpoint. If not
            set, all repositories are returned. Ignored if 'repository' is set.
          optional: true
        - id: pageResults
          type:
            - boolean
          description: >-
            If set to true, this will limit the set of results and will return a
            continuation token to continue the query.
          optional: true
        - id: continuationToken
          type:
            - string
          description: >
            When paging results, this is a continuation token, returned by a
            previous call to this method, that can be used to return the next
            set of repositories.
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.SourceRepositories>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.listSourceProviders
    name: listSourceProviders(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of source providers and their capabilities.
    syntax:
      content: 'function listSourceProviders(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.SourceProviderAttributes[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.listWebhooks
    name: 'listWebhooks(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of webhooks installed in the given source code repository.
    syntax:
      content: >-
        function listWebhooks(project: string, providerName: string,
        serviceEndpointId?: string, repository?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: serviceEndpointId
          type:
            - string
          description: >-
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
        - id: repository
          type:
            - string
          description: >
            If specified, the vendor-specific identifier or the name of the
            repository to get webhooks. Can only be omitted for providers that
            do not support multiple repositories.
          optional: true
      return:
        type:
          - 'Promise<azure-devops-extension-api.RepositoryWebhook[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.queueBuild
    name: 'queueBuild(Build, string, boolean, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Queues a build
    syntax:
      content: >-
        function queueBuild(build: Build, project: string, ignoreWarnings?:
        boolean, checkInTicket?: string, sourceBuildId?: number)
      parameters:
        - id: build
          type:
            - azure-devops-extension-api.Build
          description: '-'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: ignoreWarnings
          type:
            - boolean
          description: '-'
          optional: true
        - id: checkInTicket
          type:
            - string
          description: '-'
          optional: true
        - id: sourceBuildId
          type:
            - number
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Build>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.RESOURCE_AREA_ID
    name: RESOURCE_AREA_ID
    fullName: RESOURCE_AREA_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RESOURCE_AREA_ID: string'
      return:
        type:
          - string
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.restoreDefinition
    name: 'restoreDefinition(string, number, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restores a deleted definition
    syntax:
      content: >-
        function restoreDefinition(project: string, definitionId: number,
        deleted: boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The identifier of the definition to restore.
        - id: deleted
          type:
            - boolean
          description: |
            When false, restores a deleted definition.
      return:
        type:
          - Promise<azure-devops-extension-api.BuildDefinition>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.restoreWebhooks
    name: 'restoreWebhooks(DefinitionTriggerType[], string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Recreates the webhooks for the specified triggers in the given source code
      repository.
    syntax:
      content: >-
        function restoreWebhooks(triggerTypes: DefinitionTriggerType[], project:
        string, providerName: string, serviceEndpointId?: string, repository?:
        string)
      parameters:
        - id: triggerTypes
          type:
            - 'azure-devops-extension-api.DefinitionTriggerType[]'
          description: The types of triggers to restore webhooks for.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: providerName
          type:
            - string
          description: The name of the source provider.
        - id: serviceEndpointId
          type:
            - string
          description: >-
            If specified, the ID of the service endpoint to query. Can only be
            omitted for providers that do not use service endpoints, e.g. TFVC
            or TFGit.
          optional: true
        - id: repository
          type:
            - string
          description: >
            If specified, the vendor-specific identifier or the name of the
            repository to get webhooks. Can only be omitted for providers that
            do not support multiple repositories.
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.saveTemplate
    name: 'saveTemplate(BuildDefinitionTemplate, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing build definition template.
    syntax:
      content: >-
        function saveTemplate(template: BuildDefinitionTemplate, project:
        string, templateId: string)
      parameters:
        - id: template
          type:
            - azure-devops-extension-api.BuildDefinitionTemplate
          description: The new version of the template.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: |
            The ID of the template.
      return:
        type:
          - Promise<azure-devops-extension-api.BuildDefinitionTemplate>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateBuild
    name: 'updateBuild(Build, string, number, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a build.
    syntax:
      content: >-
        function updateBuild(build: Build, project: string, buildId: number,
        retry?: boolean)
      parameters:
        - id: build
          type:
            - azure-devops-extension-api.Build
          description: The build.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The ID of the build.
        - id: retry
          type:
            - boolean
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.Build>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateBuildProperties
    name: 'updateBuildProperties(JsonPatchDocument, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates properties for a build.
    syntax:
      content: >-
        function updateBuildProperties(document: JsonPatchDocument, project:
        string, buildId: number)
      parameters:
        - id: document
          type:
            - azure-devops-extension-api.JsonPatchDocument
          description: A json-patch document describing the properties to update.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |
            The ID of the build.
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateBuilds
    name: 'updateBuilds(Build[], string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates multiple builds.
    syntax:
      content: 'function updateBuilds(builds: Build[], project: string)'
      parameters:
        - id: builds
          type:
            - 'azure-devops-extension-api.Build[]'
          description: The builds to update.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      return:
        type:
          - 'Promise<azure-devops-extension-api.Build[]>'
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateBuildSettings
    name: 'updateBuildSettings(BuildSettings, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the build settings.
    syntax:
      content: 'function updateBuildSettings(settings: BuildSettings, project?: string)'
      parameters:
        - id: settings
          type:
            - azure-devops-extension-api.BuildSettings
          description: The new settings.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildSettings>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateDefinition
    name: 'updateDefinition(BuildDefinition, string, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing definition.
    syntax:
      content: >-
        function updateDefinition(definition: BuildDefinition, project: string,
        definitionId: number, secretsSourceDefinitionId?: number,
        secretsSourceDefinitionRevision?: number)
      parameters:
        - id: definition
          type:
            - azure-devops-extension-api.BuildDefinition
          description: The new version of the defintion.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The ID of the definition.
        - id: secretsSourceDefinitionId
          type:
            - number
          description: '-'
          optional: true
        - id: secretsSourceDefinitionRevision
          type:
            - number
          description: |
            -
          optional: true
      return:
        type:
          - Promise<azure-devops-extension-api.BuildDefinition>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateDefinitionProperties
    name: 'updateDefinitionProperties(JsonPatchDocument, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates properties for a definition.
    syntax:
      content: >-
        function updateDefinitionProperties(document: JsonPatchDocument,
        project: string, definitionId: number)
      parameters:
        - id: document
          type:
            - azure-devops-extension-api.JsonPatchDocument
          description: A json-patch document describing the properties to update.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: |
            The ID of the definition.
      return:
        type:
          - Promise<any>
    package: azure-devops-extension-api
  - uid: azure-devops-extension-api.BuildRestClient.updateFolder
    name: 'updateFolder(Folder, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing folder at given  existing path
    syntax:
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      parameters:
        - id: folder
          type:
            - azure-devops-extension-api.Folder
          description: The new version of the folder.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: |
            The full path to the folder.
      return:
        type:
          - Promise<azure-devops-extension-api.Folder>
    package: azure-devops-extension-api
references:
  - uid: azure-devops-extension-api.RestClientBase
    name: RestClientBase
    spec.typeScript:
      - name: RestClientBase
        fullName: RestClientBase
        uid: azure-devops-extension-api.RestClientBase
  - uid: azure-devops-extension-api.IVssRestClientOptions
    name: IVssRestClientOptions
    spec.typeScript:
      - name: IVssRestClientOptions
        fullName: IVssRestClientOptions
        uid: azure-devops-extension-api.IVssRestClientOptions
  - uid: 'azure-devops-extension-api.DefinitionResourceReference[]'
    name: 'DefinitionResourceReference[]'
    spec.typeScript:
      - name: DefinitionResourceReference
        fullName: DefinitionResourceReference
        uid: azure-devops-extension-api.DefinitionResourceReference
      - name: '[]'
        fullName: '[]'
  - uid: 'Promise<azure-devops-extension-api.DefinitionResourceReference[]>'
    name: 'DefinitionResourceReference[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DefinitionResourceReference
        fullName: DefinitionResourceReference
        uid: azure-devops-extension-api.DefinitionResourceReference
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.BuildArtifact
    name: BuildArtifact
    spec.typeScript:
      - name: BuildArtifact
        fullName: BuildArtifact
        uid: azure-devops-extension-api.BuildArtifact
  - uid: Promise<azure-devops-extension-api.BuildArtifact>
    name: BuildArtifact>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildArtifact
        fullName: BuildArtifact
        uid: azure-devops-extension-api.BuildArtifact
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.BuildDefinition
    name: BuildDefinition
    spec.typeScript:
      - name: BuildDefinition
        fullName: BuildDefinition
        uid: azure-devops-extension-api.BuildDefinition
  - uid: Promise<azure-devops-extension-api.BuildDefinition>
    name: BuildDefinition>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildDefinition
        fullName: BuildDefinition
        uid: azure-devops-extension-api.BuildDefinition
      - name: '>'
        fullName: '>'
  - uid: azure-devops-extension-api.Folder
    name: Folder
    spec.typeScript:
      - name: Folder
        fullName: Folder
        uid: azure-devops-extension-api.Folder
  - uid: Promise<azure-devops-extension-api.Folder>
    name: Folder>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Folder
        fullName: Folder
        uid: azure-devops-extension-api.Folder
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.BuildArtifact[]>'
    name: 'BuildArtifact[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildArtifact
        fullName: BuildArtifact
        uid: azure-devops-extension-api.BuildArtifact
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.Attachment[]>'
    name: 'Attachment[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Attachment
        fullName: Attachment
        uid: azure-devops-extension-api.Attachment
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.Build>
    name: Build>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Build
        fullName: Build
        uid: azure-devops-extension-api.Build
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.BuildBadge>
    name: BuildBadge>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildBadge
        fullName: BuildBadge
        uid: azure-devops-extension-api.BuildBadge
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.Change[]>'
    name: 'Change[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Change
        fullName: Change
        uid: azure-devops-extension-api.Change
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.BuildController>
    name: BuildController>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildController
        fullName: BuildController
        uid: azure-devops-extension-api.BuildController
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.BuildController[]>'
    name: 'BuildController[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildController
        fullName: BuildController
        uid: azure-devops-extension-api.BuildController
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.BuildLog[]>'
    name: 'BuildLog[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildLog
        fullName: BuildLog
        uid: azure-devops-extension-api.BuildLog
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.BuildOptionDefinition[]>'
    name: 'BuildOptionDefinition[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildOptionDefinition
        fullName: BuildOptionDefinition
        uid: azure-devops-extension-api.BuildOptionDefinition
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.BuildReportMetadata>
    name: BuildReportMetadata>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildReportMetadata
        fullName: BuildReportMetadata
        uid: azure-devops-extension-api.BuildReportMetadata
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.BuildSettings>
    name: BuildSettings>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildSettings
        fullName: BuildSettings
        uid: azure-devops-extension-api.BuildSettings
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.Timeline>
    name: Timeline>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Timeline
        fullName: Timeline
        uid: azure-devops-extension-api.Timeline
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.ResourceRef[]>'
    name: 'ResourceRef[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ResourceRef
        fullName: ResourceRef
        uid: azure-devops-extension-api.ResourceRef
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.BuildReason
    name: BuildReason
    spec.typeScript:
      - name: BuildReason
        fullName: BuildReason
        uid: azure-devops-extension-api.BuildReason
  - uid: azure-devops-extension-api.BuildStatus
    name: BuildStatus
    spec.typeScript:
      - name: BuildStatus
        fullName: BuildStatus
        uid: azure-devops-extension-api.BuildStatus
  - uid: azure-devops-extension-api.BuildResult
    name: BuildResult
    spec.typeScript:
      - name: BuildResult
        fullName: BuildResult
        uid: azure-devops-extension-api.BuildResult
  - uid: azure-devops-extension-api.QueryDeletedOption
    name: QueryDeletedOption
    spec.typeScript:
      - name: QueryDeletedOption
        fullName: QueryDeletedOption
        uid: azure-devops-extension-api.QueryDeletedOption
  - uid: azure-devops-extension-api.BuildQueryOrder
    name: BuildQueryOrder
    spec.typeScript:
      - name: BuildQueryOrder
        fullName: BuildQueryOrder
        uid: azure-devops-extension-api.BuildQueryOrder
  - uid: 'Promise<azure-devops-extension-api.Build[]>'
    name: 'Build[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Build
        fullName: Build
        uid: azure-devops-extension-api.Build
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.BuildMetric[]>'
    name: 'BuildMetric[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildMetric
        fullName: BuildMetric
        uid: azure-devops-extension-api.BuildMetric
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.BuildDefinitionRevision[]>'
    name: 'BuildDefinitionRevision[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildDefinitionRevision
        fullName: BuildDefinitionRevision
        uid: azure-devops-extension-api.BuildDefinitionRevision
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.DefinitionQueryOrder
    name: DefinitionQueryOrder
    spec.typeScript:
      - name: DefinitionQueryOrder
        fullName: DefinitionQueryOrder
        uid: azure-devops-extension-api.DefinitionQueryOrder
  - uid: 'Promise<azure-devops-extension-api.BuildDefinitionReference[]>'
    name: 'BuildDefinitionReference[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildDefinitionReference
        fullName: BuildDefinitionReference
        uid: azure-devops-extension-api.BuildDefinitionReference
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.FolderQueryOrder
    name: FolderQueryOrder
    spec.typeScript:
      - name: FolderQueryOrder
        fullName: FolderQueryOrder
        uid: azure-devops-extension-api.FolderQueryOrder
  - uid: 'Promise<azure-devops-extension-api.Folder[]>'
    name: 'Folder[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Folder
        fullName: Folder
        uid: azure-devops-extension-api.Folder
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.SourceRepositoryItem[]>'
    name: 'SourceRepositoryItem[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SourceRepositoryItem
        fullName: SourceRepositoryItem
        uid: azure-devops-extension-api.SourceRepositoryItem
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<azure-devops-extension-api.PullRequest>
    name: PullRequest>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PullRequest
        fullName: PullRequest
        uid: azure-devops-extension-api.PullRequest
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.BuildResourceUsage>
    name: BuildResourceUsage>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildResourceUsage
        fullName: BuildResourceUsage
        uid: azure-devops-extension-api.BuildResourceUsage
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-devops-extension-api.BuildDefinitionTemplate>
    name: BuildDefinitionTemplate>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildDefinitionTemplate
        fullName: BuildDefinitionTemplate
        uid: azure-devops-extension-api.BuildDefinitionTemplate
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.BuildDefinitionTemplate[]>'
    name: 'BuildDefinitionTemplate[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BuildDefinitionTemplate
        fullName: BuildDefinitionTemplate
        uid: azure-devops-extension-api.BuildDefinitionTemplate
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.ResultSet
    name: ResultSet
    spec.typeScript:
      - name: ResultSet
        fullName: ResultSet
        uid: azure-devops-extension-api.ResultSet
  - uid: Promise<azure-devops-extension-api.SourceRepositories>
    name: SourceRepositories>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SourceRepositories
        fullName: SourceRepositories
        uid: azure-devops-extension-api.SourceRepositories
      - name: '>'
        fullName: '>'
  - uid: 'Promise<azure-devops-extension-api.SourceProviderAttributes[]>'
    name: 'SourceProviderAttributes[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SourceProviderAttributes
        fullName: SourceProviderAttributes
        uid: azure-devops-extension-api.SourceProviderAttributes
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<azure-devops-extension-api.RepositoryWebhook[]>'
    name: 'RepositoryWebhook[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RepositoryWebhook
        fullName: RepositoryWebhook
        uid: azure-devops-extension-api.RepositoryWebhook
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-devops-extension-api.Build
    name: Build
    spec.typeScript:
      - name: Build
        fullName: Build
        uid: azure-devops-extension-api.Build
  - uid: 'azure-devops-extension-api.DefinitionTriggerType[]'
    name: 'DefinitionTriggerType[]'
    spec.typeScript:
      - name: DefinitionTriggerType
        fullName: DefinitionTriggerType
        uid: azure-devops-extension-api.DefinitionTriggerType
      - name: '[]'
        fullName: '[]'
  - uid: azure-devops-extension-api.BuildDefinitionTemplate
    name: BuildDefinitionTemplate
    spec.typeScript:
      - name: BuildDefinitionTemplate
        fullName: BuildDefinitionTemplate
        uid: azure-devops-extension-api.BuildDefinitionTemplate
  - uid: azure-devops-extension-api.JsonPatchDocument
    name: JsonPatchDocument
    spec.typeScript:
      - name: JsonPatchDocument
        fullName: JsonPatchDocument
        uid: azure-devops-extension-api.JsonPatchDocument
  - uid: azure-devops-extension-api.BuildSettings
    name: BuildSettings
    spec.typeScript:
      - name: BuildSettings
        fullName: BuildSettings
        uid: azure-devops-extension-api.BuildSettings
  - uid: 'azure-devops-extension-api.Build[]'
    name: 'Build[]'
    spec.typeScript:
      - name: Build
        fullName: Build
        uid: azure-devops-extension-api.Build
      - name: '[]'
        fullName: '[]'
